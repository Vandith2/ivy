Search.setIndex({"docnames": ["backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/array/Variable", "data_classes/array/conversions", "data_classes/array/conversions/args_to_container", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_function_arguments", "deep_dive/11_submodule_helpers", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/17_ivy_frontends_tests", "deep_dive/1_function_types", "deep_dive/2_backend_setting", "deep_dive/3_function_wrapping", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_formatting", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/activations/tanh", "functional/ivy/activations/tanh/static_tanh_container", "functional/ivy/activations/tanh/tanh_array", "functional/ivy/activations/tanh/tanh_container", "functional/ivy/activations/tanh/tanh_functional", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_array", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/floormod", "functional/ivy/general/fourier_encode", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/queue_timeout", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace", "functional/ivy/general/tmp_dir", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_step/static_adam_step_container", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/adam_update/static_adam_update_container", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lamb_update/static_lamb_update_container", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/lars_update/static_lars_update_container", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/norms/layer_norm/static_layer_norm_container", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/array/Variable.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_container.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_function_arguments.rst", "deep_dive/11_submodule_helpers.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/17_ivy_frontends_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_backend_setting.rst", "deep_dive/3_function_wrapping.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_formatting.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/activations/tanh.rst", "functional/ivy/activations/tanh/static_tanh_container.rst", "functional/ivy/activations/tanh/tanh_array.rst", "functional/ivy/activations/tanh/tanh_container.rst", "functional/ivy/activations/tanh/tanh_functional.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_array.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/floormod.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/queue_timeout.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/tmp_dir.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_step/static_adam_step_container.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/adam_update/static_adam_update_container.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/execute_with_gradients/execute_with_gradients_functional.rst", "functional/ivy/gradients/execute_with_gradients/static_execute_with_gradients_container.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/gradient_descent_update/static_gradient_descent_update_container.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lamb_update/static_lamb_update_container.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/lars_update/static_lars_update_container.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/optimizer_update/static_optimizer_update_container.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/norms/layer_norm/static_layer_norm_container.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "get_backend", "set_backend", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "&lt;no title&gt;", "Conversions", "args_to_container", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Function Arguments", "Submodule Helper Functions", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Ivy Frontend Tests", "Function Types", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Formatting", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "Compilation", "compile", "Constants", "Creation", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Array.dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "floormod", "fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_referrers_recursive", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "queue_timeout", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace", "tmp_dir", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_shape_array_mode", "unstack", "value_is_nan", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "ivy.Container.static_adam_step", "adam_update", "ivy.Container.adam_update", "ivy.adam_update", "ivy.Container.static_adam_update", "execute_with_gradients", "ivy.execute_with_gradients", "ivy.Container.static_execute_with_gradients", "gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "ivy.Container.static_gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "ivy.Container.static_lamb_update", "lars_update", "ivy.Container.lars_update", "ivy.lars_update", "ivy.Container.static_lars_update", "optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "ivy.Container.static_optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "with_grads", "Layers", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "ivy.Container.static_layer_norm", "Random", "multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "FirstLayerSiren", "GlorotUniform", "Ones", "Siren", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 5, 11, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 121, 122, 124, 130, 131, 132, 133, 137, 138, 140, 141, 142, 152, 153, 154, 274, 321, 324, 363, 364, 681, 688, 731, 737, 777, 778, 780, 782, 819, 870, 874, 925, 926, 1037, 1039, 1049, 1080, 1083, 1161, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "ivi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 127, 128, 129, 131, 132, 133, 134, 135, 136, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 171, 176, 181, 186, 191, 196, 201, 202, 203, 204, 205, 208, 212, 213, 218, 221, 226, 227, 232, 235, 238, 243, 248, 251, 256, 261, 266, 269, 274, 275, 276, 277, 282, 287, 292, 297, 298, 299, 302, 303, 304, 309, 310, 315, 318, 321, 326, 327, 332, 337, 342, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 398, 403, 408, 413, 418, 423, 428, 433, 438, 443, 448, 453, 458, 463, 468, 473, 478, 483, 488, 493, 498, 503, 508, 513, 518, 523, 528, 533, 538, 543, 548, 553, 558, 563, 568, 573, 578, 583, 588, 593, 598, 603, 604, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655, 660, 665, 670, 675, 676, 681, 682, 687, 688, 689, 690, 691, 692, 693, 694, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 760, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 776, 777, 778, 783, 787, 790, 794, 799, 803, 807, 811, 812, 813, 814, 819, 820, 821, 822, 827, 828, 829, 830, 831, 832, 837, 838, 839, 840, 841, 842, 843, 848, 853, 858, 863, 867, 870, 875, 879, 884, 888, 893, 898, 903, 906, 911, 915, 920, 925, 930, 935, 940, 945, 950, 955, 956, 961, 966, 971, 972, 977, 981, 985, 989, 993, 997, 1002, 1007, 1012, 1013, 1017, 1021, 1025, 1029, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1061, 1062, 1063, 1068, 1073, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1091, 1096, 1101, 1106, 1107, 1112, 1117, 1118, 1122, 1126, 1130, 1134, 1138, 1142, 1146, 1150, 1151, 1156, 1161, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206], "backend_handl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1161], "contextmanag": 0, "modul": [0, 3, 4, 15, 17, 20, 70, 71, 72, 75, 76, 77, 78, 115, 116, 124, 125, 127, 128, 130, 134, 135, 137, 138, 140, 142, 153, 154, 681, 738, 1061, 1062, 1068, 1071, 1161, 1169, 1170, 1171, 1172, 1173, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1203], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 130, 131, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206], "base": [0, 18, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 126, 129, 131, 137, 153, 204, 235, 236, 237, 274, 363, 364, 397, 503, 506, 558, 561, 563, 564, 565, 566, 567, 568, 571, 573, 574, 575, 576, 577, 625, 626, 628, 681, 721, 746, 755, 756, 757, 758, 759, 777, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1118, 1121, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "object": [0, 72, 75, 76, 77, 78, 95, 96, 124, 139, 142, 204, 221, 224, 274, 310, 313, 363, 388, 392, 777, 1037, 1040, 1042, 1044, 1045, 1046, 1051, 1052, 1053, 1054, 1061, 1079, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1192, 1193], "__init__": [0, 3, 4, 22, 25, 26, 27, 72, 75, 76, 77, 78, 118, 128, 132, 137, 139, 140, 141, 142, 274, 363, 364, 777, 1061, 1062, 1068, 1071, 1161, 1169, 1170, 1171, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "choose_random_backend": 0, "exclud": [0, 1, 122, 137, 204, 205, 206, 1061, 1073, 1076], "none": [0, 1, 4, 11, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 124, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 141, 142, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 294, 296, 298, 299, 300, 301, 302, 303, 304, 306, 308, 310, 312, 313, 314, 315, 317, 318, 320, 321, 323, 324, 325, 326, 327, 329, 331, 332, 334, 336, 337, 339, 341, 342, 344, 346, 348, 350, 352, 362, 363, 367, 368, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 725, 727, 728, 732, 738, 740, 743, 744, 745, 746, 747, 748, 750, 754, 755, 756, 757, 758, 759, 765, 766, 768, 771, 772, 773, 774, 777, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1043, 1048, 1049, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1172, 1173, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203], "clear_backend_stack": 0, "current_backend": [0, 22, 25, 26, 72, 77, 78, 118, 127], "arg": [0, 3, 20, 22, 25, 26, 28, 29, 30, 31, 75, 76, 137, 139, 141, 363, 387, 681, 744, 1172, 1173, 1192, 1193], "kwarg": [0, 3, 22, 25, 26, 28, 29, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 137, 139, 141, 681, 737, 1172, 1173, 1192, 1193], "return": [0, 3, 4, 11, 17, 18, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1047, 1048, 1049, 1050, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1166, 1172, 1173, 1180, 1189, 1190, 1196, 1200], "current": [0, 3, 4, 11, 15, 17, 18, 19, 20, 22, 25, 26, 72, 75, 76, 77, 78, 126, 127, 131, 133, 137, 142, 153, 154, 274, 303, 315, 316, 318, 319, 326, 361, 362, 363, 374, 375, 376, 377, 381, 383, 681, 711, 712, 719, 720, 723, 728, 732, 739, 741, 753, 777, 811, 820, 1037, 1038, 1047, 1048, 1161], "prioriti": [0, 3, 18, 75, 76, 134], "global_backend": [0, 3], "argument": [0, 3, 4, 13, 19, 28, 30, 31, 32, 33, 72, 75, 76, 77, 78, 117, 118, 121, 122, 124, 125, 126, 127, 128, 130, 131, 135, 137, 139, 140, 201, 202, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 348, 351, 397, 398, 401, 413, 416, 418, 421, 423, 426, 473, 476, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 681, 687, 688, 692, 704, 713, 737, 744, 821, 828, 832, 835, 841, 842, 843, 846, 858, 861, 870, 874, 925, 926, 971, 1007, 1010, 1037, 1043, 1055, 1056, 1059, 1085, 1091, 1095, 1117, 1122, 1125, 1142, 1145, 1150, 1151, 1154, 1164, 1166, 1172, 1173, 1192, 1193], "": [0, 3, 4, 5, 11, 14, 15, 16, 17, 18, 20, 22, 25, 26, 28, 32, 33, 34, 35, 75, 76, 117, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 203, 204, 238, 241, 256, 258, 260, 261, 263, 265, 274, 315, 316, 318, 319, 363, 368, 375, 376, 386, 397, 630, 633, 681, 690, 711, 712, 777, 783, 785, 790, 792, 799, 801, 807, 809, 842, 920, 924, 925, 929, 1037, 1043, 1049, 1117, 1138, 1141, 1146, 1149, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203], "paramet": [0, 3, 4, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 121, 124, 139, 140, 153, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 275, 276, 277, 280, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 309, 310, 313, 315, 316, 318, 319, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 347, 348, 351, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 743, 744, 746, 747, 749, 751, 752, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 787, 788, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1166, 1172, 1173, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "from": [0, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 48, 49, 54, 55, 58, 59, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 93, 94, 99, 100, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 204, 205, 206, 208, 209, 213, 214, 216, 221, 224, 226, 227, 228, 229, 230, 231, 238, 241, 243, 244, 246, 251, 252, 253, 254, 255, 269, 271, 273, 274, 292, 293, 294, 295, 296, 348, 351, 363, 368, 377, 381, 386, 387, 397, 655, 658, 681, 704, 713, 714, 715, 716, 717, 718, 763, 777, 783, 785, 799, 801, 821, 822, 824, 826, 832, 833, 834, 835, 836, 837, 840, 842, 858, 861, 920, 924, 940, 944, 971, 989, 992, 1002, 1003, 1004, 1005, 1006, 1013, 1016, 1033, 1034, 1035, 1036, 1037, 1039, 1049, 1050, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1084, 1085, 1086, 1090, 1096, 1100, 1117, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1167, 1172, 1173, 1180, 1188, 1191, 1196, 1197, 1198, 1199, 1200, 1201], "which": [0, 3, 4, 13, 14, 15, 17, 18, 19, 20, 22, 25, 26, 34, 35, 36, 37, 42, 43, 52, 53, 54, 55, 58, 59, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 282, 284, 286, 292, 293, 294, 295, 296, 297, 304, 307, 310, 313, 321, 324, 326, 362, 363, 369, 372, 377, 381, 383, 385, 386, 387, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 633, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 687, 694, 696, 698, 701, 702, 704, 713, 714, 715, 716, 717, 718, 719, 727, 731, 739, 740, 741, 743, 744, 755, 757, 759, 765, 766, 768, 775, 777, 783, 785, 787, 788, 790, 792, 794, 796, 798, 799, 801, 803, 805, 807, 809, 812, 814, 815, 817, 818, 819, 821, 840, 842, 843, 845, 847, 848, 851, 858, 861, 879, 882, 915, 918, 920, 924, 940, 944, 945, 949, 955, 956, 958, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 976, 977, 980, 989, 992, 997, 1000, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1020, 1037, 1042, 1043, 1044, 1045, 1050, 1051, 1052, 1053, 1054, 1056, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1166, 1172, 1173, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203], "try": [0, 3, 12, 14, 15, 17, 18, 19, 20, 75, 76, 130, 131, 135, 139, 154, 681, 771, 1161], "infer": [0, 3, 34, 35, 54, 55, 79, 80, 99, 100, 117, 128, 132, 133, 137, 142, 201, 202, 204, 205, 206, 208, 209, 213, 214, 216, 226, 227, 228, 229, 230, 231, 243, 244, 246, 251, 252, 253, 254, 255, 269, 271, 273, 274, 303, 681, 724, 752, 971, 1002, 1003, 1004, 1005, 1006], "when": [0, 3, 13, 14, 17, 18, 19, 52, 53, 58, 59, 72, 75, 76, 77, 78, 97, 98, 103, 104, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 154, 274, 277, 280, 397, 413, 416, 508, 511, 625, 628, 681, 692, 731, 755, 758, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1037, 1048, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1084, 1117, 1122, 1125, 1130, 1133, 1138, 1141, 1146, 1149, 1161, 1192, 1193], "i": [0, 3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 165, 166, 168, 169, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 284, 286, 287, 290, 292, 294, 295, 296, 303, 304, 307, 310, 313, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 362, 363, 364, 368, 369, 372, 378, 379, 382, 386, 387, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 442, 443, 445, 446, 447, 448, 450, 452, 453, 455, 456, 457, 458, 460, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 527, 528, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 587, 588, 590, 591, 592, 593, 595, 597, 598, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 670, 671, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 689, 690, 692, 693, 694, 695, 696, 697, 698, 701, 702, 704, 708, 710, 713, 714, 716, 718, 723, 726, 727, 731, 733, 734, 735, 736, 737, 738, 742, 743, 744, 749, 755, 757, 759, 765, 766, 768, 775, 776, 777, 783, 785, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 811, 812, 814, 815, 817, 820, 821, 822, 823, 828, 832, 835, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 870, 874, 875, 878, 879, 882, 888, 891, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 926, 930, 934, 935, 939, 940, 944, 945, 949, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1020, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1047, 1048, 1049, 1050, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1172, 1173, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "global": [0, 3, 4, 5, 11, 42, 43, 56, 57, 72, 75, 76, 77, 78, 87, 88, 101, 102, 127, 128, 132, 133, 137, 274, 298, 299, 300, 302, 303, 363, 385, 386, 387, 681, 721, 722, 742, 746, 747, 749, 754, 755, 756, 757, 758, 759, 777, 811, 820, 1055, 1056, 1057, 1058, 1059, 1060, 1194, 1195], "set": [0, 3, 4, 5, 11, 13, 16, 18, 28, 32, 33, 42, 43, 44, 45, 63, 75, 76, 87, 88, 89, 90, 95, 96, 108, 117, 118, 120, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 274, 303, 353, 356, 363, 368, 384, 385, 386, 387, 397, 433, 436, 681, 682, 683, 684, 685, 686, 745, 746, 747, 748, 749, 750, 751, 777, 783, 785, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 842, 848, 851, 879, 882, 888, 891, 903, 905, 915, 918, 1037, 1038, 1047, 1048, 1049, 1053, 1054, 1061, 1078, 1080, 1081, 1086, 1090, 1091, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1138, 1141, 1146, 1149, 1180, 1189, 1196, 1197, 1198, 1199, 1200, 1201], "ret": [0, 3, 4, 11, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 121, 125, 137, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 275, 276, 277, 280, 282, 283, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 304, 307, 309, 310, 313, 315, 316, 318, 319, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 347, 348, 351, 362, 363, 365, 366, 368, 369, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 722, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 743, 744, 752, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 787, 788, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1047, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1166, 1172, 1173, 1196, 1200], "exampl": [0, 3, 4, 5, 11, 15, 17, 18, 19, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 254, 266, 268, 269, 273, 274, 277, 280, 282, 283, 284, 285, 286, 292, 293, 294, 295, 296, 303, 304, 307, 309, 310, 313, 315, 316, 318, 319, 321, 324, 326, 337, 340, 342, 345, 353, 356, 361, 362, 363, 368, 369, 372, 374, 377, 378, 379, 380, 381, 384, 385, 386, 388, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 451, 458, 459, 460, 461, 462, 463, 466, 468, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 503, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 538, 541, 548, 549, 550, 551, 552, 553, 556, 583, 584, 585, 586, 587, 588, 591, 603, 604, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 663, 670, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 686, 689, 690, 694, 695, 696, 697, 698, 700, 701, 708, 713, 714, 715, 716, 717, 718, 720, 722, 723, 734, 736, 745, 748, 750, 752, 753, 755, 756, 757, 758, 759, 763, 765, 766, 767, 768, 769, 770, 772, 773, 774, 777, 778, 779, 780, 781, 782, 794, 795, 796, 797, 798, 811, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 828, 830, 831, 832, 833, 834, 835, 836, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 870, 873, 888, 891, 898, 901, 920, 924, 925, 929, 930, 934, 935, 939, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 985, 988, 989, 992, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1024, 1037, 1040, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1138, 1141, 1142, 1145, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161], "If": [0, 3, 4, 5, 13, 16, 17, 18, 19, 20, 28, 32, 33, 34, 35, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 154, 165, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 200, 204, 205, 206, 208, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 284, 286, 287, 290, 292, 294, 296, 303, 348, 351, 363, 368, 386, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 602, 605, 607, 608, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 674, 675, 676, 677, 679, 680, 681, 682, 684, 686, 694, 696, 698, 714, 716, 718, 731, 755, 757, 759, 765, 766, 768, 777, 783, 785, 790, 792, 794, 796, 798, 799, 801, 803, 805, 807, 809, 811, 814, 815, 817, 820, 842, 843, 844, 845, 846, 847, 848, 851, 879, 882, 888, 891, 903, 905, 906, 909, 915, 918, 920, 924, 940, 944, 945, 949, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 976, 985, 988, 989, 992, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1033, 1034, 1035, 1037, 1049, 1050, 1056, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "import": [0, 3, 14, 18, 19, 70, 71, 115, 116, 118, 120, 121, 122, 125, 126, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 154, 363, 384, 385, 397, 403, 406, 408, 411, 428, 431, 438, 441, 1161, 1167], "numpi": [0, 3, 4, 5, 13, 14, 18, 19, 42, 43, 75, 76, 87, 88, 119, 120, 124, 125, 126, 128, 132, 133, 134, 137, 139, 142, 397, 403, 406, 408, 411, 428, 431, 438, 441, 681, 755, 756, 765, 766, 767, 768, 769, 1117, 1118, 1121, 1161], "np": [0, 3, 87, 88, 119, 120, 124, 126, 130, 132, 133, 134, 139, 140, 142, 397, 538, 541, 681, 755, 757, 758, 759, 1161], "x": [0, 3, 11, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 134, 135, 137, 139, 140, 141, 142, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 208, 210, 211, 213, 216, 217, 221, 224, 225, 227, 228, 229, 230, 231, 238, 241, 243, 246, 247, 251, 254, 255, 256, 257, 260, 261, 262, 265, 266, 268, 269, 270, 273, 274, 277, 280, 281, 287, 290, 291, 292, 293, 294, 295, 296, 303, 304, 307, 308, 309, 310, 313, 321, 324, 337, 340, 363, 368, 369, 372, 373, 377, 381, 386, 388, 389, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 451, 452, 458, 459, 460, 461, 462, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 498, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 523, 525, 526, 527, 528, 531, 533, 536, 537, 538, 541, 542, 543, 546, 547, 548, 550, 551, 552, 553, 556, 558, 561, 562, 563, 566, 567, 568, 571, 572, 573, 576, 577, 583, 584, 585, 586, 587, 588, 591, 592, 603, 604, 610, 613, 614, 620, 623, 624, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 663, 664, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 685, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 722, 724, 726, 727, 729, 730, 731, 733, 734, 735, 736, 740, 752, 755, 756, 757, 758, 759, 760, 763, 765, 766, 767, 768, 769, 770, 775, 776, 777, 787, 788, 789, 794, 795, 796, 797, 798, 812, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 857, 858, 861, 862, 863, 866, 867, 869, 870, 873, 879, 882, 883, 884, 886, 887, 888, 891, 892, 893, 896, 897, 898, 901, 903, 905, 906, 909, 910, 911, 913, 914, 920, 921, 924, 925, 929, 930, 934, 935, 936, 939, 945, 946, 949, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1037, 1038, 1040, 1043, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1101, 1102, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1180, 1191], "arrai": [0, 3, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 154, 155, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 240, 241, 242, 243, 246, 248, 249, 251, 253, 254, 255, 256, 260, 261, 265, 266, 268, 269, 273, 274, 277, 280, 282, 284, 285, 286, 287, 290, 292, 294, 295, 296, 303, 304, 307, 310, 313, 321, 324, 327, 330, 332, 335, 337, 340, 342, 345, 348, 351, 357, 363, 368, 369, 372, 377, 381, 383, 387, 388, 392, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 588, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 658, 659, 660, 663, 664, 665, 666, 668, 669, 670, 671, 673, 674, 675, 676, 677, 680, 681, 682, 684, 685, 686, 689, 690, 691, 693, 694, 696, 697, 698, 700, 701, 702, 705, 706, 707, 708, 709, 710, 713, 714, 716, 717, 718, 719, 724, 726, 727, 728, 729, 730, 731, 733, 734, 736, 739, 740, 741, 743, 744, 745, 750, 752, 755, 757, 758, 759, 760, 763, 765, 766, 768, 769, 770, 772, 774, 775, 776, 777, 778, 780, 781, 782, 783, 785, 790, 792, 794, 796, 797, 798, 799, 801, 803, 805, 807, 809, 812, 814, 815, 817, 818, 819, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 884, 886, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 958, 959, 960, 961, 963, 964, 965, 966, 968, 969, 970, 971, 972, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1049, 1050, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1164, 1166, 1180, 1188, 1191], "2": [0, 3, 17, 18, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 119, 122, 124, 128, 131, 136, 137, 139, 140, 141, 142, 154, 165, 171, 172, 173, 174, 175, 176, 179, 181, 182, 183, 184, 185, 186, 189, 196, 197, 198, 199, 200, 203, 204, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 254, 269, 273, 274, 277, 280, 282, 283, 284, 285, 286, 292, 293, 294, 295, 296, 304, 307, 310, 313, 337, 340, 363, 368, 369, 372, 374, 377, 379, 381, 385, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 425, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 440, 442, 443, 446, 448, 451, 458, 459, 460, 461, 462, 463, 466, 468, 471, 473, 474, 475, 476, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 538, 541, 548, 549, 550, 551, 552, 553, 556, 573, 574, 575, 576, 577, 588, 591, 603, 604, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 663, 670, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 689, 690, 693, 694, 695, 696, 697, 698, 701, 708, 713, 714, 715, 716, 717, 718, 734, 736, 752, 755, 756, 757, 758, 759, 763, 777, 778, 779, 780, 781, 782, 794, 795, 796, 797, 798, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 859, 860, 861, 862, 870, 873, 875, 878, 879, 882, 888, 891, 898, 901, 903, 905, 906, 909, 920, 924, 925, 929, 930, 931, 932, 933, 934, 935, 939, 945, 946, 947, 948, 949, 955, 956, 957, 958, 959, 960, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 985, 988, 989, 992, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1021, 1024, 1037, 1040, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1134, 1137, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161], "0": [0, 3, 18, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 121, 122, 124, 125, 126, 137, 139, 140, 141, 142, 154, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 218, 219, 220, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 273, 274, 277, 280, 282, 283, 284, 285, 286, 292, 294, 295, 296, 304, 307, 310, 313, 321, 324, 337, 340, 363, 365, 368, 369, 372, 374, 377, 381, 384, 385, 386, 387, 393, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 453, 456, 463, 466, 468, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 503, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 520, 521, 522, 523, 526, 528, 531, 538, 541, 548, 551, 553, 556, 558, 561, 563, 566, 573, 576, 588, 591, 603, 604, 605, 608, 610, 613, 615, 618, 625, 628, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 663, 670, 671, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685, 686, 689, 690, 693, 694, 695, 696, 697, 698, 700, 701, 702, 708, 713, 714, 715, 716, 717, 718, 725, 734, 736, 740, 743, 744, 752, 755, 757, 758, 759, 763, 765, 766, 767, 768, 769, 770, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 814, 817, 818, 821, 822, 823, 824, 825, 826, 828, 830, 831, 832, 833, 834, 835, 836, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 859, 860, 861, 862, 870, 873, 920, 924, 925, 929, 930, 934, 935, 936, 937, 938, 939, 945, 949, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1029, 1031, 1037, 1040, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203], "print": [0, 3, 4, 5, 11, 17, 18, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 122, 124, 131, 137, 139, 140, 141, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 254, 266, 268, 269, 273, 274, 277, 280, 282, 283, 284, 285, 286, 292, 293, 294, 295, 296, 304, 307, 309, 315, 316, 318, 319, 337, 340, 362, 363, 369, 372, 377, 378, 379, 380, 381, 383, 386, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 451, 458, 459, 460, 461, 462, 463, 466, 468, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 506, 508, 509, 510, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 538, 541, 548, 549, 550, 551, 552, 553, 556, 583, 584, 585, 586, 587, 588, 591, 603, 604, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 663, 670, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 686, 689, 690, 694, 695, 696, 697, 698, 700, 701, 708, 713, 714, 715, 716, 717, 718, 722, 741, 752, 755, 756, 757, 758, 759, 763, 765, 766, 767, 768, 769, 770, 777, 778, 779, 781, 782, 794, 795, 796, 797, 798, 811, 820, 821, 822, 823, 824, 825, 826, 828, 830, 831, 832, 833, 834, 835, 836, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 870, 873, 898, 901, 920, 924, 925, 929, 930, 934, 935, 939, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 985, 988, 989, 992, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1021, 1024, 1037, 1040, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1066, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1134, 1137, 1138, 1141, 1142, 1145, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161], "function": [0, 3, 4, 5, 13, 18, 20, 22, 23, 24, 25, 26, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 128, 130, 134, 135, 136, 138, 139, 140, 141, 152, 153, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 275, 276, 277, 280, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 307, 309, 310, 313, 315, 316, 318, 319, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 347, 348, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 787, 788, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 874, 875, 878, 879, 882, 884, 886, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 926, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1166, 1169, 1170, 1171, 1196, 1199, 1201], "py": [0, 3, 4, 18, 118, 119, 120, 121, 124, 125, 126, 127, 128, 132, 133, 135, 137, 139, 141, 142, 1061, 1062, 1068, 1071, 1196, 1197, 1198, 1199, 1201], "noqa": [0, 3, 4, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 413, 416, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 538, 541, 553, 556, 603, 604, 615, 618, 635, 638, 640, 643, 655, 658, 660, 663, 670, 674, 675, 842, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1117, 1122, 1125], "The": [0, 3, 4, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 153, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 183, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 221, 224, 227, 229, 231, 235, 236, 251, 253, 255, 256, 258, 260, 261, 263, 265, 274, 275, 276, 277, 280, 282, 284, 286, 292, 294, 296, 297, 309, 315, 316, 318, 319, 326, 332, 335, 342, 345, 347, 356, 357, 362, 363, 364, 365, 366, 367, 368, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687, 689, 692, 693, 694, 696, 698, 703, 704, 710, 711, 712, 714, 715, 716, 717, 718, 729, 730, 731, 733, 734, 735, 736, 738, 743, 744, 746, 747, 749, 754, 755, 756, 757, 758, 759, 762, 764, 765, 766, 768, 776, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 794, 796, 798, 799, 801, 803, 805, 807, 809, 812, 814, 815, 817, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1025, 1028, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1077, 1080, 1081, 1082, 1083, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1172, 1173, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200], "set_backend": [0, 3, 4, 11, 44, 45, 89, 90, 127, 128, 129, 132, 274, 315, 316, 318, 319, 363, 384, 385, 397, 403, 406, 408, 411, 428, 431, 438, 441, 777, 814, 815, 816, 817, 818, 1161], "ha": [0, 3, 4, 13, 14, 15, 18, 62, 63, 75, 76, 107, 108, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 137, 139, 141, 142, 153, 154, 204, 238, 241, 363, 368, 397, 398, 401, 605, 608, 625, 628, 777, 811, 820, 842, 875, 878, 911, 913, 915, 918, 920, 924, 935, 939, 971, 985, 988, 1013, 1016, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1117, 1126, 1129, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149], "over": [0, 3, 13, 15, 17, 18, 68, 69, 70, 71, 75, 76, 95, 96, 113, 114, 115, 116, 121, 122, 124, 128, 134, 139, 154, 842, 879, 882, 930, 934, 940, 944, 945, 949, 1055, 1056, 1059, 1061, 1073, 1076, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1194, 1195], "ani": [0, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 28, 30, 31, 34, 35, 40, 41, 42, 43, 68, 69, 70, 71, 75, 76, 85, 86, 87, 88, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 243, 246, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 363, 388, 392, 397, 398, 401, 413, 416, 418, 421, 423, 426, 473, 476, 493, 494, 495, 496, 497, 508, 511, 513, 516, 528, 531, 538, 541, 553, 556, 603, 604, 615, 616, 617, 618, 619, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 681, 682, 683, 684, 685, 686, 704, 705, 706, 707, 708, 713, 726, 733, 734, 735, 754, 777, 787, 788, 821, 828, 832, 835, 839, 841, 842, 843, 846, 858, 861, 971, 1007, 1010, 1033, 1034, 1035, 1036, 1037, 1040, 1043, 1047, 1053, 1054, 1055, 1056, 1059, 1061, 1073, 1076, 1085, 1091, 1095, 1117, 1122, 1125, 1150, 1151, 1154, 1160, 1161], "pass": [0, 3, 19, 70, 71, 72, 75, 76, 77, 78, 115, 116, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 139, 154, 274, 297, 363, 387, 397, 433, 436, 681, 692, 731, 777, 819, 870, 874, 925, 926, 1033, 1034, 1035, 1172, 1173, 1192, 1193, 1196, 1200, 1202, 1203], "jax": [0, 3, 4, 5, 14, 15, 18, 19, 44, 45, 89, 90, 119, 120, 124, 125, 126, 128, 132, 133, 134, 137, 139, 142, 154, 777, 794, 795, 796, 797, 798, 814, 817, 818, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1161], "get_backend": [0, 127, 128], "specifi": [0, 4, 34, 35, 52, 53, 54, 55, 58, 59, 68, 69, 73, 74, 75, 76, 95, 96, 97, 98, 99, 100, 103, 104, 113, 114, 117, 119, 124, 125, 126, 127, 132, 133, 134, 137, 140, 141, 142, 171, 173, 175, 204, 205, 206, 212, 226, 232, 233, 235, 236, 248, 249, 256, 258, 260, 261, 263, 265, 266, 268, 274, 277, 280, 287, 290, 363, 377, 381, 383, 386, 387, 388, 392, 397, 630, 633, 681, 687, 701, 713, 714, 717, 726, 775, 842, 858, 861, 879, 882, 930, 934, 935, 939, 940, 944, 945, 949, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 975, 977, 980, 981, 984, 989, 992, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1029, 1032, 1037, 1042, 1044, 1045, 1051, 1052, 1053, 1054, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1106, 1107, 1110, 1117, 1118, 1121, 1134, 1137, 1142, 1145, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "isn": [0, 4, 18, 140, 154], "t": [0, 4, 14, 15, 17, 18, 19, 20, 22, 25, 26, 70, 71, 115, 116, 122, 124, 132, 137, 139, 140, 141, 142, 154, 681, 690, 821, 838, 839], "associ": [0, 4, 18, 124, 126, 127, 129, 154, 397, 413, 416, 605, 608, 842, 888, 891, 903, 905, 950, 954], "option": [0, 4, 17, 18, 23, 24, 28, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133, 134, 135, 137, 142, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 284, 286, 287, 290, 292, 294, 296, 297, 298, 299, 300, 302, 303, 326, 362, 363, 368, 385, 386, 387, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 686, 687, 693, 694, 695, 696, 697, 698, 701, 702, 703, 705, 706, 707, 709, 713, 714, 715, 716, 717, 718, 727, 738, 740, 743, 744, 754, 755, 756, 757, 758, 759, 765, 766, 768, 777, 794, 796, 798, 812, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1043, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1091, 1092, 1094, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1196, 1197, 1198, 1200], "str": [0, 4, 28, 30, 31, 48, 49, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 132, 133, 135, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 227, 229, 231, 238, 241, 251, 253, 255, 274, 275, 282, 284, 286, 292, 294, 296, 297, 298, 299, 300, 309, 310, 313, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 353, 354, 355, 356, 362, 363, 364, 365, 387, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 687, 694, 696, 698, 703, 705, 706, 707, 714, 716, 718, 738, 743, 744, 755, 759, 765, 766, 768, 794, 796, 798, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 842, 843, 845, 847, 906, 909, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 1002, 1004, 1006, 1007, 1009, 1011, 1033, 1034, 1035, 1036, 1037, 1043, 1053, 1056, 1058, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1117, 1118, 1121, 1151, 1153, 1155, 1156, 1158, 1160], "we": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 70, 71, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 153, 154, 777, 787, 788, 1161, 1167], "want": [0, 4, 14, 16, 17, 18, 70, 71, 115, 116, 124, 140, 141, 142, 154], "retriev": [0, 4, 18, 681, 687], "e": [0, 4, 14, 15, 16, 18, 20, 58, 59, 103, 104, 117, 124, 131, 140, 154, 203, 204, 238, 241, 274, 276, 348, 351, 363, 365, 397, 398, 401, 433, 436, 453, 456, 463, 466, 473, 476, 503, 506, 513, 516, 518, 521, 533, 536, 558, 561, 568, 571, 603, 604, 610, 613, 625, 628, 630, 633, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 842, 848, 851, 870, 874, 875, 878, 888, 891, 903, 905, 915, 918, 920, 924, 925, 926, 945, 949, 971, 1017, 1020, 1037, 1040, 1053, 1054, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149], "one": [0, 4, 14, 15, 17, 18, 22, 25, 26, 62, 63, 75, 76, 85, 86, 87, 88, 95, 96, 99, 100, 101, 102, 107, 108, 109, 110, 119, 122, 124, 125, 127, 130, 131, 132, 134, 135, 136, 139, 140, 142, 154, 204, 205, 206, 238, 241, 274, 282, 285, 292, 295, 363, 387, 397, 413, 417, 458, 462, 603, 604, 681, 682, 684, 685, 686, 714, 718, 737, 740, 743, 744, 765, 766, 768, 842, 843, 847, 875, 878, 879, 882, 898, 901, 906, 909, 940, 944, 945, 949, 971, 972, 976, 985, 988, 989, 992, 1002, 1006, 1007, 1010, 1011, 1013, 1016, 1055, 1056, 1058, 1059, 1060, 1080, 1081, 1083, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105, 1112, 1116, 1117, 1118, 1121, 1161], "default": [0, 4, 17, 18, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 119, 121, 122, 124, 125, 127, 128, 131, 132, 133, 141, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 284, 286, 287, 290, 292, 294, 296, 298, 299, 300, 302, 303, 304, 307, 353, 356, 361, 363, 368, 369, 372, 379, 382, 383, 384, 385, 386, 387, 388, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 693, 694, 695, 696, 697, 698, 701, 702, 705, 706, 707, 709, 710, 713, 714, 715, 716, 717, 718, 723, 724, 725, 726, 727, 728, 731, 732, 733, 734, 736, 737, 738, 740, 742, 743, 744, 749, 752, 754, 755, 756, 757, 758, 759, 765, 766, 768, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 787, 788, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 811, 812, 814, 815, 817, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1043, 1047, 1048, 1049, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1172, 1173, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "torch": [0, 4, 11, 18, 89, 90, 118, 119, 120, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 201, 202, 274, 315, 316, 318, 319, 337, 340, 363, 384, 385, 777, 814, 815, 818, 842, 925, 929, 971, 985, 988, 1013, 1016, 1161], "tensorflow": [0, 4, 11, 14, 15, 18, 19, 44, 45, 119, 120, 124, 125, 126, 132, 133, 134, 137, 142, 154, 777, 814, 816, 818, 1161], "mxnet": [0, 4, 14, 19, 132, 133, 134, 137, 142, 1161], "either": [0, 4, 11, 17, 18, 20, 40, 41, 75, 76, 85, 86, 121, 122, 124, 127, 128, 131, 132, 133, 137, 139, 140, 154, 204, 221, 224, 397, 413, 416, 433, 436, 538, 539, 540, 541, 542, 558, 561, 563, 566, 573, 576, 578, 581, 605, 608, 630, 633, 640, 643, 645, 648, 670, 674, 681, 704, 733, 737, 738, 842, 870, 874, 875, 878, 925, 926, 1033, 1034, 1035, 1036, 1117, 1134, 1137, 1142, 1145, 1180, 1191, 1192, 1193], "doesn": [0, 4, 17, 20, 122, 124, 132, 137, 154], "matter": [0, 4, 13, 122], "been": [0, 4, 18, 119, 121, 124, 127, 128, 131, 132, 133, 135, 137, 153, 154, 363, 368, 681, 705, 706, 707, 1061, 1062], "ivy_np": [0, 4, 124, 126], "us": [0, 4, 11, 15, 18, 19, 40, 41, 42, 43, 54, 55, 56, 57, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 88, 99, 100, 101, 102, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 153, 154, 165, 166, 168, 170, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 203, 274, 309, 310, 313, 321, 324, 363, 364, 378, 382, 385, 386, 387, 388, 392, 394, 396, 397, 418, 421, 443, 446, 458, 460, 468, 471, 483, 486, 528, 531, 553, 556, 583, 584, 585, 587, 610, 613, 615, 618, 635, 636, 655, 658, 681, 713, 721, 722, 737, 743, 744, 746, 747, 754, 755, 756, 757, 758, 759, 777, 778, 781, 783, 785, 799, 801, 803, 805, 821, 831, 837, 838, 840, 841, 842, 853, 856, 858, 861, 870, 874, 879, 882, 925, 926, 929, 955, 956, 959, 971, 985, 988, 989, 992, 997, 1000, 1007, 1008, 1009, 1010, 1011, 1021, 1024, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1046, 1047, 1048, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1080, 1081, 1082, 1083, 1085, 1086, 1090, 1117, 1118, 1121, 1150, 1151, 1154, 1161, 1180, 1188, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199], "ivy_jax": [0, 4, 126], "subsequ": [0, 5, 17, 119, 122, 124, 127, 130, 134, 141], "call": [0, 5, 11, 14, 18, 20, 72, 77, 78, 118, 119, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 363, 364, 387, 681, 742, 749, 771, 777, 787, 788, 870, 874, 925, 926, 1037, 1038, 1043, 1047, 1048, 1180, 1191, 1192, 1193, 1196, 1200], "nativ": [0, 5, 28, 31, 32, 33, 34, 35, 75, 76, 124, 125, 132, 134, 139, 140, 204, 243, 244, 246, 274, 275, 276, 297, 303, 363, 365, 366, 367, 368, 369, 372, 382, 393, 396, 681, 731, 733, 736, 764, 1172, 1173], "native_arrai": [0, 5, 11, 34, 35, 36, 37, 40, 41, 42, 43, 79, 80, 85, 86, 87, 88, 109, 110, 124, 126, 165, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 200, 204, 227, 230, 238, 241, 269, 273, 274, 282, 283, 285, 292, 295, 304, 307, 310, 313, 321, 324, 337, 340, 363, 381, 397, 398, 401, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 488, 489, 491, 493, 494, 496, 508, 511, 513, 516, 518, 519, 521, 523, 526, 528, 531, 538, 541, 548, 551, 553, 556, 583, 586, 588, 591, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 675, 681, 682, 683, 684, 685, 686, 690, 694, 697, 700, 701, 708, 713, 714, 717, 736, 763, 765, 766, 768, 769, 770, 777, 778, 781, 794, 797, 814, 818, 821, 822, 825, 828, 831, 832, 835, 841, 842, 848, 851, 853, 856, 858, 861, 925, 929, 930, 934, 955, 956, 959, 966, 969, 971, 972, 975, 985, 988, 989, 992, 997, 1000, 1002, 1005, 1007, 1010, 1012, 1013, 1016, 1021, 1024, 1061, 1062, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1095, 1106, 1112, 1114, 1115, 1117, 1118, 1121, 1122, 1125, 1150, 1151, 1154], "1": [0, 5, 11, 14, 15, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 119, 122, 124, 125, 126, 127, 131, 134, 135, 136, 137, 139, 140, 141, 142, 154, 165, 166, 167, 168, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 196, 197, 198, 199, 200, 204, 205, 206, 207, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 269, 273, 274, 277, 280, 282, 283, 284, 285, 286, 292, 293, 294, 295, 296, 304, 307, 309, 310, 313, 337, 340, 363, 368, 369, 372, 377, 380, 381, 388, 392, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 446, 448, 451, 458, 459, 460, 461, 462, 463, 466, 468, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 506, 508, 509, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 531, 538, 541, 548, 550, 551, 552, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 588, 591, 603, 604, 610, 613, 615, 618, 625, 628, 630, 631, 632, 633, 634, 635, 636, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 663, 670, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 686, 689, 690, 694, 695, 696, 697, 698, 700, 701, 708, 713, 714, 715, 716, 717, 718, 734, 736, 740, 743, 744, 752, 755, 756, 757, 758, 759, 763, 765, 766, 767, 768, 769, 770, 775, 777, 778, 779, 780, 781, 782, 794, 796, 797, 798, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 856, 858, 859, 860, 861, 862, 870, 873, 888, 891, 898, 901, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 941, 942, 943, 944, 945, 949, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 985, 988, 989, 992, 993, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1020, 1021, 1024, 1037, 1040, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203], "type": [0, 5, 11, 17, 18, 19, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 133, 134, 135, 137, 139, 140, 142, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 726, 727, 729, 730, 731, 733, 734, 735, 736, 740, 743, 744, 745, 746, 747, 748, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 790, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 805, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1047, 1048, 1049, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191], "ndarrai": [0, 5, 34, 35, 119, 120, 130, 132, 133, 134, 139, 204, 208, 209, 210, 243, 246, 681, 765, 769], "Or": [0, 5, 140], "jaxlib": [0, 5, 17, 119, 120, 132, 133, 139], "xla_extens": [0, 5, 119, 120, 132, 133, 139], "devicearrai": [0, 5, 139], "try_import_ivy_jax": 0, "warn": [0, 6, 7, 8, 9, 10], "fals": [0, 6, 7, 8, 9, 10, 22, 25, 26, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 122, 124, 126, 131, 134, 135, 140, 141, 142, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 274, 277, 279, 280, 281, 282, 284, 286, 287, 289, 291, 292, 293, 294, 295, 296, 299, 301, 304, 305, 306, 307, 308, 310, 312, 314, 315, 317, 318, 320, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 337, 339, 340, 341, 342, 344, 345, 346, 348, 350, 352, 362, 363, 368, 369, 370, 371, 372, 373, 378, 379, 382, 387, 394, 396, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 446, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 618, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 683, 684, 685, 686, 689, 690, 694, 696, 698, 701, 704, 708, 710, 714, 716, 718, 720, 723, 724, 731, 733, 734, 736, 737, 745, 748, 750, 752, 753, 755, 757, 759, 765, 766, 768, 772, 773, 774, 775, 777, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 814, 815, 817, 820, 842, 843, 844, 845, 846, 847, 848, 850, 852, 853, 855, 857, 858, 860, 862, 863, 865, 870, 872, 875, 877, 879, 880, 881, 882, 883, 884, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 906, 908, 910, 911, 912, 914, 915, 917, 919, 920, 921, 923, 924, 925, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 945, 946, 947, 948, 949, 950, 951, 953, 956, 958, 960, 961, 963, 965, 966, 968, 970, 971, 972, 974, 976, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1043, 1047, 1048, 1049, 1050, 1056, 1058, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1172, 1173, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201], "try_import_ivy_mxnet": 0, "try_import_ivy_numpi": 0, "try_import_ivy_tf": 0, "try_import_ivy_torch": 0, "unset_backend": [0, 44, 45, 89, 90, 128, 777, 814, 815, 816, 817, 818], "unset": [0, 11, 128, 137, 139], "adjust": [0, 11, 1117, 1138, 1141, 1146, 1149], "dict": [0, 11, 28, 30, 31, 32, 33, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 120, 125, 131, 135, 140, 141, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 251, 253, 255, 282, 284, 286, 292, 294, 296, 363, 368, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 687, 694, 696, 698, 705, 706, 707, 711, 712, 714, 716, 718, 755, 759, 765, 766, 768, 794, 796, 798, 843, 845, 847, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 1002, 1004, 1006, 1007, 1009, 1011, 1037, 1039, 1040, 1043, 1046, 1049, 1050, 1053, 1054, 1056, 1058, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1151, 1153, 1155, 1156, 1158, 1160], "previous": [0, 11, 17, 20, 124, 127, 137, 681, 692], "otherwis": [0, 11, 22, 25, 26, 28, 30, 31, 32, 33, 36, 37, 40, 41, 44, 45, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 124, 130, 131, 132, 133, 137, 139, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 204, 205, 206, 227, 229, 231, 251, 253, 255, 274, 277, 280, 282, 284, 286, 292, 293, 294, 295, 296, 298, 299, 300, 302, 303, 327, 330, 337, 340, 363, 368, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 691, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 771, 777, 794, 795, 796, 797, 798, 812, 814, 815, 817, 842, 843, 844, 845, 846, 847, 853, 856, 940, 944, 945, 949, 956, 958, 960, 961, 963, 965, 966, 968, 970, 971, 972, 974, 976, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1033, 1034, 1035, 1037, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1080, 1081, 1082, 1084, 1091, 1092, 1094, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "implement": [0, 11, 19, 117, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 165, 196, 200, 274, 277, 280, 348, 351, 363, 388, 392, 397, 398, 401, 403, 406, 408, 411, 418, 421, 423, 426, 428, 431, 433, 436, 478, 481, 483, 486, 503, 506, 508, 511, 558, 561, 563, 566, 568, 571, 573, 576, 605, 608, 625, 628, 630, 633, 645, 648, 650, 653, 670, 674, 675, 842, 863, 866, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1161], "wa": [0, 11, 14, 18, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 122, 137, 139, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 251, 253, 255, 282, 284, 286, 292, 294, 296, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 771, 794, 796, 798, 814, 815, 817, 843, 845, 847, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 1002, 1004, 1006, 1007, 1009, 1011, 1037, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "last": [0, 11, 15, 18, 52, 53, 68, 69, 75, 76, 97, 98, 113, 114, 122, 124, 126, 128, 135, 154, 165, 186, 189, 363, 368, 777, 811, 820, 821, 839, 842, 848, 851, 858, 861, 879, 882, 935, 939, 940, 944, 955, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 989, 992, 1007, 1010, 1012, 1017, 1020, 1106, 1107, 1110, 1112, 1115, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1190], "henc": [0, 11, 124, 131, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "here": [0, 11, 17, 18, 19, 118, 119, 120, 122, 124, 125, 126, 131, 137, 138, 139, 140, 141, 142, 153, 154], "tensor": [0, 11, 13, 75, 76, 118, 119, 120, 125, 127, 128, 130, 132, 133, 134, 137, 139, 140, 141, 142, 154, 204, 232, 233, 235, 236, 274, 304, 307, 397, 443, 446, 603, 604, 681, 740, 743, 744, 821, 837, 839, 842, 930, 934, 971, 985, 988, 1012, 1061, 1062, 1080, 1083, 1161, 1180, 1188, 1190], "howev": [0, 11, 14, 17, 19, 119, 120, 121, 124, 125, 127, 128, 130, 131, 132, 133, 134, 139, 140, 141, 142, 154], "befor": [0, 11, 17, 18, 19, 75, 76, 121, 124, 130, 132, 133, 134, 137, 140, 154, 363, 364, 387, 397, 676, 680, 821, 840, 841, 1033, 1034, 1035, 1037, 1049, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1134, 1137, 1142, 1145], "becom": [0, 11, 13, 15, 18, 122, 131, 137, 142, 154, 971, 972, 975], "swap": [0, 11, 971, 1021, 1024], "python": [0, 11, 12, 13, 14, 17, 18, 20, 124, 135, 137, 139, 140, 154, 204, 205, 206, 363, 382, 396, 397, 630, 633, 870, 874, 925, 926, 1161, 1167], "framework": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 41, 43, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 80, 82, 84, 86, 88, 89, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 122, 123, 125, 126, 127, 128, 129, 130, 133, 136, 139, 142, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1166, 1167, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1206], "op": [0, 11, 118, 137, 154], "eagertensor": [0, 11], "support": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 24, 26, 27, 29, 30, 31, 32, 33, 35, 37, 39, 41, 43, 44, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 74, 75, 76, 78, 80, 82, 84, 86, 88, 89, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 142, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1165, 1166, 1167, 1170, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1193, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1206], "backend": [3, 4, 5, 11, 13, 18, 19, 28, 31, 33, 75, 76, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 138, 139, 142, 274, 315, 316, 318, 319, 326, 362, 363, 375, 376, 378, 380, 394, 681, 711, 712, 728, 731, 732, 738, 764, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 819, 1161, 1167, 1172, 1173, 1196, 1197, 1198, 1199, 1200, 1201], "ml": [12, 14, 15, 16, 136, 137, 138, 140, 141, 142, 153, 1161, 1167], "explos": [12, 14, 1161], "A": [12, 13, 14, 15, 20, 34, 35, 36, 37, 68, 69, 72, 75, 76, 77, 78, 81, 82, 87, 88, 89, 90, 99, 100, 113, 114, 117, 124, 127, 131, 132, 133, 137, 140, 154, 204, 218, 219, 243, 244, 246, 274, 282, 283, 284, 285, 286, 363, 387, 397, 620, 623, 681, 722, 755, 757, 759, 763, 814, 815, 817, 842, 870, 874, 898, 901, 911, 913, 915, 918, 920, 924, 925, 926, 971, 972, 974, 976, 1012, 1017, 1020, 1037, 1038, 1040, 1042, 1044, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1054, 1117, 1118, 1121, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1202, 1203], "huge": [12, 14, 140, 1161], "number": [12, 13, 17, 22, 25, 26, 36, 37, 42, 43, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 81, 82, 87, 88, 99, 100, 107, 108, 113, 114, 122, 124, 126, 131, 133, 134, 137, 140, 142, 201, 202, 203, 204, 205, 206, 208, 210, 218, 219, 232, 233, 235, 236, 238, 241, 243, 246, 274, 282, 283, 284, 285, 286, 303, 309, 310, 313, 321, 324, 327, 330, 332, 335, 337, 340, 342, 345, 348, 351, 363, 379, 380, 381, 397, 413, 416, 433, 436, 473, 476, 513, 516, 518, 521, 603, 605, 608, 625, 628, 630, 633, 635, 638, 640, 643, 676, 680, 681, 682, 685, 710, 722, 724, 739, 755, 756, 757, 758, 759, 770, 776, 821, 840, 842, 858, 861, 863, 866, 888, 891, 911, 913, 920, 924, 940, 944, 971, 972, 973, 974, 975, 976, 981, 984, 993, 996, 997, 1000, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1020, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1061, 1062, 1078, 1080, 1083, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191], "tool": [12, 15, 18, 138, 142, 153, 154, 1161], "have": [12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 153, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 283, 284, 285, 286, 287, 290, 310, 313, 363, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 701, 705, 706, 707, 709, 714, 715, 716, 717, 718, 727, 740, 743, 744, 777, 794, 795, 796, 797, 798, 812, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "explod": [12, 13, 1161], "onto": [12, 13, 1037, 1043, 1049, 1161], "scene": [12, 13, 117, 136, 138, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1161], "b": [12, 15, 16, 22, 25, 26, 40, 41, 72, 73, 74, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 117, 122, 127, 128, 131, 136, 137, 138, 140, 141, 142, 152, 165, 196, 197, 199, 200, 204, 227, 229, 230, 231, 269, 273, 274, 282, 284, 285, 286, 292, 294, 295, 296, 304, 307, 337, 340, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 421, 423, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 446, 458, 460, 461, 462, 468, 471, 473, 475, 476, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 508, 510, 511, 513, 515, 516, 518, 520, 521, 522, 523, 525, 526, 527, 528, 531, 538, 541, 548, 550, 551, 552, 553, 556, 583, 585, 586, 587, 588, 591, 603, 604, 610, 613, 615, 618, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 658, 660, 663, 670, 671, 673, 674, 675, 681, 682, 684, 685, 686, 689, 690, 694, 696, 697, 698, 700, 701, 708, 713, 714, 716, 717, 718, 755, 757, 758, 759, 765, 766, 768, 769, 770, 777, 778, 780, 781, 782, 794, 796, 797, 798, 814, 815, 817, 818, 821, 822, 824, 825, 826, 828, 831, 832, 834, 835, 836, 841, 842, 843, 845, 846, 847, 848, 851, 853, 856, 858, 861, 898, 901, 915, 918, 925, 929, 930, 934, 950, 954, 955, 956, 958, 959, 960, 961, 963, 965, 966, 968, 970, 971, 972, 974, 975, 976, 985, 988, 989, 992, 997, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1013, 1015, 1016, 1017, 1020, 1021, 1024, 1037, 1040, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1080, 1082, 1083, 1084, 1085, 1091, 1092, 1094, 1095, 1106, 1107, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1160, 1161, 1167], "why": [12, 14, 18, 119, 131, 134, 139, 1161], "unifi": [12, 14, 75, 76, 130, 137, 154, 363, 387, 1161], "should": [12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 34, 35, 40, 41, 50, 51, 54, 55, 72, 73, 74, 75, 76, 77, 78, 85, 86, 95, 96, 99, 100, 115, 116, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 165, 186, 188, 190, 196, 197, 198, 199, 200, 201, 202, 204, 238, 241, 256, 258, 260, 261, 263, 265, 274, 287, 290, 363, 364, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 618, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 692, 731, 740, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 870, 873, 875, 878, 888, 891, 898, 901, 903, 905, 906, 909, 915, 918, 920, 924, 930, 934, 935, 939, 940, 944, 945, 949, 971, 1002, 1003, 1004, 1005, 1006, 1061, 1079, 1080, 1081, 1082, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1161], "them": [12, 13, 14, 15, 117, 124, 126, 128, 130, 131, 137, 139, 140, 141, 154, 1161], "c": [12, 14, 15, 16, 17, 44, 45, 48, 49, 85, 86, 89, 90, 117, 122, 127, 131, 136, 137, 138, 140, 154, 274, 310, 313, 321, 324, 397, 615, 618, 640, 642, 643, 681, 689, 690, 700, 770, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 822, 823, 831, 870, 874, 925, 926, 971, 1017, 1020, 1037, 1040, 1053, 1054, 1080, 1083, 1117, 1118, 1121, 1138, 1141, 1146, 1149, 1161, 1167], "standard": [12, 56, 57, 58, 59, 101, 102, 103, 104, 117, 118, 119, 121, 123, 124, 130, 134, 154, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 553, 556, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 842, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1068, 1069, 1070, 1071, 1072, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1138, 1141, 1146, 1149, 1150, 1151, 1154, 1161, 1167, 1194, 1195], "re": [12, 13, 14, 16, 17, 18, 19, 20, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 142, 154, 363, 387, 681, 705, 842, 930, 934, 971, 1007, 1010, 1080, 1084, 1161], "collabor": [12, 13, 14, 1161], "consortium": [12, 14, 1161, 1167], "data": [12, 14, 17, 22, 23, 24, 25, 26, 27, 34, 35, 37, 40, 41, 44, 45, 50, 51, 54, 55, 58, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 89, 90, 95, 96, 99, 100, 103, 104, 107, 108, 113, 114, 117, 118, 119, 120, 121, 126, 127, 129, 131, 133, 134, 139, 165, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 275, 276, 277, 280, 287, 290, 292, 293, 294, 295, 296, 297, 304, 307, 309, 310, 313, 315, 316, 318, 319, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 347, 353, 357, 362, 363, 364, 365, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 689, 690, 733, 734, 736, 760, 777, 794, 795, 796, 797, 798, 819, 821, 838, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 915, 918, 920, 924, 930, 934, 935, 939, 940, 944, 945, 949, 971, 985, 988, 989, 992, 993, 996, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1092, 1093, 1094, 1106, 1107, 1110, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1167, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191], "api": [12, 13, 17, 18, 117, 119, 121, 122, 124, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 140, 154, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 553, 556, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 842, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1150, 1151, 1154, 1161, 1167], "open": [13, 14, 15, 16, 17, 18, 20, 58, 59, 103, 104, 121, 153, 204, 205, 206, 1061, 1063, 1064, 1065, 1066, 1067, 1073, 1076, 1161], "project": [13, 14, 15, 17, 18, 20, 118, 124, 128, 139, 141, 153, 154, 1061, 1062, 1068, 1071, 1196, 1197, 1198, 1199, 1201], "grown": 13, "consider": [13, 119, 122], "recent": [13, 14, 17, 18, 124], "year": [13, 15, 154, 1161], "especi": [13, 17], "deep": [13, 16, 18, 19, 75, 76, 126, 131, 136, 140, 1161], "learn": [13, 14, 17, 19, 117, 127, 136, 142, 153, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1033, 1034, 1035, 1036, 1161, 1196, 1197, 1198, 1199, 1200, 1201], "can": [13, 14, 15, 16, 17, 18, 34, 35, 36, 37, 54, 55, 58, 59, 81, 82, 99, 100, 103, 104, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 204, 208, 209, 210, 243, 246, 274, 292, 293, 294, 295, 296, 363, 385, 386, 387, 842, 870, 873, 874, 925, 926, 971, 1002, 1003, 1004, 1005, 1006, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1161, 1167], "seen": [13, 14, 122, 124, 139, 140], "rapidli": 13, "increas": [13, 971, 981, 984, 1029, 1032, 1037, 1049], "github": [13, 18, 19, 121, 124], "repo": [13, 14, 15, 17, 18, 123, 137, 139, 140, 141, 142, 153, 1161, 1167], "contain": [13, 17, 19, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 124, 127, 132, 134, 136, 137, 138, 141, 142, 154, 165, 166, 171, 176, 179, 181, 184, 186, 191, 194, 196, 198, 200, 204, 205, 206, 208, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 243, 248, 249, 251, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 273, 274, 277, 282, 283, 285, 287, 292, 295, 299, 304, 307, 310, 313, 315, 318, 321, 324, 327, 330, 332, 337, 340, 342, 348, 363, 369, 377, 381, 388, 397, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 459, 461, 463, 464, 466, 468, 469, 471, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 489, 491, 493, 494, 496, 498, 499, 503, 504, 506, 508, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 536, 538, 539, 541, 543, 544, 546, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 653, 655, 656, 658, 660, 661, 663, 665, 667, 669, 670, 672, 674, 675, 676, 678, 680, 681, 682, 685, 687, 690, 693, 694, 697, 700, 701, 708, 713, 714, 717, 723, 726, 735, 748, 755, 756, 758, 763, 765, 769, 770, 773, 777, 778, 781, 783, 787, 790, 794, 797, 799, 803, 807, 814, 818, 821, 822, 825, 828, 831, 832, 835, 841, 842, 843, 844, 846, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 884, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 955, 956, 957, 959, 961, 962, 964, 966, 967, 969, 971, 972, 973, 975, 977, 981, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1005, 1007, 1010, 1012, 1013, 1016, 1017, 1021, 1024, 1025, 1029, 1033, 1034, 1035, 1036, 1037, 1050, 1053, 1055, 1056, 1059, 1061, 1062, 1063, 1068, 1073, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1093, 1095, 1096, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1154, 1156, 1157, 1159, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "term": [13, 18, 131, 821, 839, 1180, 1190], "time": [13, 14, 15, 17, 18, 19, 62, 63, 107, 108, 119, 120, 124, 127, 131, 132, 137, 140, 142, 154, 777, 783, 785, 799, 801, 821, 839, 971, 1025, 1028, 1033, 1034, 1035, 1036, 1080, 1081, 1082, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1180, 1191, 1192, 1193], "These": [13, 14, 15, 18, 119, 121, 122, 124, 125, 126, 127, 131, 132, 134, 137, 138, 140, 141, 142, 154, 842, 863, 866, 1161, 1167], "ar": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 28, 30, 31, 40, 41, 42, 43, 54, 55, 58, 59, 72, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 95, 96, 99, 100, 103, 104, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 155, 163, 204, 205, 206, 227, 229, 231, 363, 377, 381, 383, 387, 397, 478, 479, 480, 481, 482, 588, 591, 593, 596, 635, 638, 645, 646, 647, 648, 649, 670, 671, 672, 673, 674, 681, 682, 683, 684, 685, 686, 689, 690, 691, 719, 723, 727, 728, 732, 739, 741, 748, 760, 773, 777, 811, 820, 821, 838, 842, 848, 851, 870, 874, 875, 878, 879, 882, 888, 891, 903, 905, 920, 924, 925, 926, 929, 940, 944, 971, 972, 973, 974, 975, 976, 989, 992, 1007, 1008, 1009, 1010, 1011, 1037, 1039, 1043, 1049, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1085, 1086, 1090, 1161, 1202, 1203], "written": [13, 17, 118, 119, 121, 124, 125, 130, 134, 137, 139, 142, 154], "mani": [13, 14, 15, 17, 18, 19, 75, 76, 119, 121, 122, 124, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 154, 971, 1012], "differ": [13, 14, 15, 17, 18, 40, 41, 72, 75, 76, 77, 78, 117, 118, 119, 121, 122, 124, 125, 127, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 154, 274, 310, 313, 397, 413, 416, 605, 608, 665, 667, 669, 821, 838, 971, 1017, 1020, 1117, 1134, 1137, 1142, 1145, 1161], "while": [13, 14, 17, 18, 72, 75, 76, 77, 78, 122, 124, 128, 134, 135, 141, 142, 154, 397, 588, 591, 593, 596, 1085, 1086, 1090, 1117, 1126, 1129], "thi": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 282, 283, 284, 286, 292, 293, 294, 295, 296, 310, 313, 321, 324, 327, 330, 337, 340, 363, 364, 369, 370, 371, 373, 382, 387, 388, 389, 390, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 686, 694, 695, 696, 698, 710, 713, 714, 715, 716, 718, 731, 742, 749, 755, 756, 757, 759, 765, 766, 767, 768, 777, 778, 779, 780, 782, 783, 785, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 811, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 826, 828, 832, 833, 834, 835, 836, 838, 841, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 870, 874, 879, 882, 911, 913, 925, 926, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 972, 973, 974, 976, 985, 988, 989, 992, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1017, 1020, 1037, 1043, 1049, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1080, 1081, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1113, 1114, 1116, 1117, 1122, 1125, 1126, 1129, 1138, 1141, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1167, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201], "wonder": [13, 15, 139], "thing": [13, 14, 15, 17, 18, 19, 124, 128, 139, 140], "research": [13, 153], "develop": [13, 14, 15, 16, 17, 18, 19, 153, 154, 1161], "also": [13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 117, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 282, 283, 284, 286, 292, 293, 294, 295, 296, 327, 330, 337, 340, 369, 370, 371, 373, 388, 389, 390, 391, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 686, 694, 695, 696, 698, 713, 714, 715, 716, 718, 731, 755, 756, 757, 759, 765, 766, 767, 768, 777, 778, 779, 780, 782, 783, 785, 794, 795, 796, 798, 814, 815, 816, 817, 821, 822, 823, 824, 826, 828, 832, 833, 834, 835, 836, 838, 841, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 972, 973, 974, 976, 985, 988, 989, 992, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1047, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1116, 1117, 1122, 1125, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1180, 1190], "consid": [13, 14, 75, 76, 95, 96, 118, 127, 138, 139, 140, 397, 588, 591, 593, 596, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "speed": [13, 124], "evolv": 13, "sharabl": 13, "code": [13, 14, 15, 17, 18, 19, 20, 40, 41, 72, 75, 76, 77, 78, 89, 90, 109, 110, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152, 154, 165, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 363, 364, 388, 392, 397, 468, 471, 630, 631, 660, 663, 777, 778, 780, 781, 782, 811, 820, 821, 831, 832, 835, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1112, 1114, 1115, 1117, 1118, 1121, 1161, 1167], "significantli": 13, "hinder": [13, 119], "librari": [13, 14, 15, 22, 25, 26, 125, 137, 142, 152, 154, 363, 388, 392, 397, 508, 511, 588, 591, 593, 596, 842, 863, 866, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1161], "outdat": 13, "month": 13, "rigor": [13, 124], "maintain": [13, 18, 1106, 1107, 1110, 1112, 1115], "against": [13, 36, 37, 75, 76, 81, 82, 95, 96, 124, 154, 274, 282, 283, 284, 285, 842, 875, 878, 879, 882, 888, 891, 903, 905, 1080, 1081], "newest": 13, "version": [13, 14, 15, 17, 18, 121, 125, 126, 132, 137, 139, 842, 863, 866, 1161], "For": [13, 14, 15, 17, 18, 19, 20, 22, 25, 26, 44, 45, 89, 90, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 165, 196, 200, 204, 205, 206, 238, 241, 397, 398, 401, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 473, 476, 478, 481, 483, 486, 503, 506, 508, 511, 513, 516, 558, 561, 563, 566, 573, 576, 578, 581, 588, 591, 605, 608, 625, 628, 630, 633, 635, 638, 645, 648, 650, 653, 655, 658, 670, 674, 675, 676, 680, 777, 794, 795, 796, 797, 798, 819, 842, 870, 874, 920, 924, 925, 926, 935, 939, 971, 972, 975, 1017, 1020, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1130, 1133, 1142, 1145, 1172, 1173], "softwar": [13, 14, 17, 18], "pipelin": [13, 130, 142], "where": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 34, 35, 54, 55, 58, 59, 68, 69, 72, 75, 76, 77, 78, 99, 100, 103, 104, 113, 114, 120, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 154, 204, 226, 227, 228, 230, 238, 241, 397, 433, 436, 503, 506, 568, 571, 605, 608, 625, 628, 681, 727, 731, 740, 777, 811, 820, 842, 863, 866, 888, 891, 903, 905, 906, 909, 920, 924, 925, 929, 935, 939, 940, 944, 971, 972, 973, 974, 975, 976, 981, 984, 985, 988, 993, 996, 1017, 1020, 1029, 1032, 1037, 1038, 1048, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1117, 1138, 1141, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "rapid": [13, 14, 17], "prototyp": 13, "vital": [13, 142], "signific": [13, 14, 154], "bottleneck": 13, "As": [13, 18, 70, 71, 115, 116, 119, 120, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 140, 141, 154, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "new": [13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 42, 43, 54, 55, 56, 57, 75, 76, 81, 82, 87, 88, 99, 100, 101, 102, 117, 118, 121, 122, 124, 129, 131, 132, 134, 136, 139, 142, 153, 204, 212, 221, 224, 226, 227, 230, 248, 249, 251, 254, 266, 268, 269, 273, 274, 357, 397, 438, 441, 568, 571, 620, 623, 681, 705, 706, 707, 710, 713, 714, 715, 716, 717, 718, 743, 744, 746, 747, 754, 755, 757, 758, 759, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 971, 985, 988, 1002, 1003, 1004, 1005, 1006, 1017, 1020, 1037, 1042, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1161, 1172, 1173, 1180, 1190, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "futur": [13, 15, 17, 18, 139, 154, 842, 863, 866], "avail": [13, 17, 18, 75, 76, 121, 125, 133, 154, 363, 368, 378, 379, 380, 394, 681, 706], "specif": [13, 18, 19, 75, 76, 117, 119, 120, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 153, 154, 274, 348, 351, 363, 385, 388, 392, 397, 588, 591, 593, 596, 681, 705, 706, 707, 738, 842, 863, 866, 930, 934, 971, 1017, 1020, 1033, 1034, 1035, 1036, 1061, 1062, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1161, 1164, 1166, 1167, 1192, 1193], "quickli": [13, 15, 17, 18, 140, 141], "obsolet": [13, 15], "user": [13, 14, 17, 18, 20, 117, 124, 125, 128, 131, 134, 136, 154, 1180, 1191, 1192, 1193], "constantli": 13, "invent": 13, "wheel": 13, "our": [13, 14, 16, 17, 18, 70, 71, 115, 116, 122, 124, 125, 126, 131, 135, 136, 139, 140, 141, 142, 154, 1161], "desir": [13, 18, 36, 37, 75, 76, 81, 82, 125, 274, 277, 280, 292, 293, 294, 295, 296, 363, 388, 392, 681, 727, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191], "provid": [13, 17, 18, 68, 69, 75, 76, 113, 114, 119, 121, 122, 124, 127, 130, 131, 132, 133, 134, 137, 141, 153, 154, 201, 202, 204, 238, 241, 274, 298, 299, 300, 302, 303, 326, 348, 351, 362, 363, 368, 681, 704, 740, 744, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 842, 940, 944, 971, 989, 992, 1017, 1020, 1080, 1081, 1117, 1138, 1141, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1196, 1197, 1198, 1199, 1200, 1201], "simultan": [13, 15], "all": [13, 14, 15, 16, 17, 18, 19, 20, 28, 30, 31, 32, 33, 34, 35, 42, 43, 54, 55, 58, 59, 68, 69, 70, 71, 75, 76, 87, 88, 95, 96, 99, 100, 103, 104, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 153, 154, 155, 163, 201, 202, 204, 205, 206, 256, 258, 260, 261, 263, 265, 363, 377, 383, 681, 682, 685, 689, 690, 719, 741, 765, 766, 767, 768, 769, 821, 839, 842, 915, 918, 930, 934, 945, 949, 971, 989, 992, 1007, 1008, 1009, 1010, 1011, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1048, 1049, 1050, 1061, 1062, 1073, 1074, 1075, 1076, 1077, 1150, 1155, 1161, 1164, 1166], "modern": [13, 14], "simpl": [13, 17, 18, 118, 121, 122, 124, 127, 130, 131, 132, 133, 134, 137, 139, 141, 142, 154, 681, 708], "scalabl": [13, 137], "manner": [13, 28, 32, 33, 75, 76, 118, 121, 124, 133, 140, 153, 154, 1037, 1049], "must": [13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 121, 122, 127, 130, 131, 132, 133, 137, 141, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 283, 284, 285, 286, 287, 290, 363, 387, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 701, 705, 706, 707, 709, 714, 715, 716, 717, 718, 727, 740, 743, 744, 777, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1196, 1200], "determin": [13, 22, 23, 24, 25, 26, 40, 41, 50, 51, 68, 69, 72, 73, 74, 75, 76, 77, 78, 85, 86, 95, 96, 113, 114, 121, 126, 127, 131, 132, 133, 165, 196, 197, 198, 199, 200, 274, 292, 295, 297, 309, 326, 327, 330, 332, 335, 337, 340, 342, 345, 362, 363, 378, 379, 380, 394, 397, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 510, 511, 512, 518, 519, 520, 522, 533, 536, 538, 541, 543, 546, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 598, 601, 605, 606, 607, 608, 609, 625, 626, 627, 628, 629, 630, 631, 633, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 681, 682, 685, 689, 690, 726, 728, 732, 733, 734, 735, 736, 760, 776, 777, 794, 797, 821, 840, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 870, 873, 875, 878, 888, 891, 898, 901, 903, 905, 911, 913, 915, 918, 935, 939, 940, 944, 945, 949, 1033, 1034, 1035, 1036, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "exactli": [13, 15, 122, 131, 133, 1161, 1167], "common": [13, 19, 75, 76, 120, 122, 127, 129, 131, 133, 135, 154], "ground": [13, 124], "li": 13, "between": [13, 52, 53, 72, 75, 76, 77, 78, 97, 98, 119, 122, 124, 126, 127, 130, 131, 136, 138, 139, 140, 142, 153, 204, 205, 206, 274, 310, 313, 397, 433, 436, 625, 628, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 985, 988, 1017, 1020, 1037, 1043, 1061, 1063, 1066, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1161, 1196, 1198], "find": [13, 17, 18, 75, 76, 124, 137, 140, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1161], "exist": [13, 14, 17, 19, 20, 22, 25, 26, 54, 55, 72, 75, 76, 77, 78, 99, 100, 120, 121, 122, 123, 124, 127, 128, 129, 134, 137, 154, 681, 704, 971, 1002, 1003, 1004, 1005, 1006, 1196, 1200], "essenti": [13, 14, 19, 122, 127, 133], "order": [13, 17, 18, 20, 72, 75, 76, 77, 78, 95, 96, 119, 121, 122, 125, 126, 128, 130, 131, 132, 133, 139, 140, 142, 154, 397, 433, 436, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 842, 863, 866, 879, 882, 920, 924, 925, 929, 945, 949, 971, 989, 992, 1033, 1034, 1035, 1080, 1083, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1202, 1203], "design": [13, 14, 117, 126, 134, 137, 139, 154], "univers": 13, "abstract": [13, 131, 141, 154, 363, 364, 1196, 1200], "In": [13, 15, 17, 18, 54, 55, 99, 100, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 363, 382, 388, 392, 393, 396, 397, 413, 416, 605, 608, 630, 633, 681, 687, 731, 971, 1002, 1003, 1004, 1005, 1006, 1061, 1073, 1076, 1161], "search": [13, 17, 28, 32, 33, 61, 75, 76, 106, 118, 122, 124, 1081, 1082, 1083, 1084], "languag": [13, 15, 137], "first": [13, 14, 17, 18, 20, 22, 25, 26, 40, 41, 62, 63, 72, 77, 78, 85, 86, 107, 108, 119, 122, 124, 126, 127, 130, 131, 137, 139, 140, 142, 201, 202, 204, 232, 233, 235, 236, 274, 347, 357, 363, 368, 397, 413, 414, 415, 416, 417, 433, 434, 435, 437, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 493, 494, 496, 518, 521, 523, 524, 528, 529, 531, 548, 549, 551, 553, 554, 556, 578, 579, 581, 583, 584, 586, 593, 594, 596, 598, 599, 601, 605, 606, 608, 615, 616, 618, 625, 626, 628, 665, 666, 667, 668, 669, 681, 689, 777, 787, 788, 842, 848, 851, 858, 861, 863, 866, 870, 874, 875, 878, 898, 901, 906, 909, 920, 924, 925, 926, 930, 934, 940, 944, 971, 977, 980, 1007, 1010, 1017, 1020, 1021, 1024, 1033, 1034, 1035, 1036, 1037, 1038, 1047, 1048, 1061, 1079, 1080, 1081, 1082, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1180, 1191, 1192, 1193, 1196, 1200], "see": [13, 16, 17, 18, 19, 22, 25, 26, 40, 41, 68, 69, 72, 77, 78, 85, 86, 113, 114, 119, 123, 126, 127, 131, 133, 139, 140, 153, 154, 204, 205, 206, 221, 224, 232, 233, 235, 236, 274, 287, 290, 348, 351, 397, 413, 414, 415, 416, 417, 433, 434, 435, 437, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 488, 489, 490, 491, 492, 493, 494, 495, 497, 508, 511, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 548, 549, 550, 551, 552, 553, 554, 555, 557, 578, 579, 580, 581, 582, 583, 584, 585, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 615, 616, 617, 618, 619, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 665, 666, 667, 668, 669, 842, 870, 874, 888, 891, 903, 905, 915, 918, 925, 926, 940, 944, 945, 949, 1080, 1082, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "clear": [13, 14, 15, 18, 19, 122, 132, 133, 137, 139, 363, 367], "front": [13, 136, 137, 140, 1161, 1167], "runner": 13, "look": [13, 17, 18, 20, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 133, 137, 139, 141, 142, 1161], "littl": [13, 139], "deeper": [13, 18, 117, 136, 1037, 1048, 1049], "follow": [13, 14, 17, 18, 19, 20, 75, 76, 87, 88, 118, 121, 122, 124, 128, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 154, 274, 321, 324, 363, 387, 397, 630, 633, 681, 729, 730, 731, 754, 755, 757, 758, 759, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 840, 841, 842, 906, 909, 945, 949, 1037, 1043, 1049, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1161, 1180, 1190, 1196, 1200], "same": [13, 15, 17, 18, 20, 28, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 58, 59, 62, 63, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 103, 104, 107, 108, 118, 119, 120, 122, 124, 125, 126, 127, 130, 131, 133, 134, 135, 137, 139, 141, 142, 154, 204, 205, 206, 213, 214, 216, 227, 228, 229, 230, 231, 238, 241, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 269, 271, 273, 274, 277, 280, 282, 283, 284, 285, 286, 287, 290, 363, 387, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 413, 416, 418, 419, 428, 429, 448, 449, 450, 451, 452, 458, 459, 460, 462, 473, 474, 475, 476, 477, 513, 514, 515, 516, 517, 605, 608, 610, 611, 612, 614, 620, 621, 622, 624, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 676, 677, 678, 679, 680, 681, 709, 713, 714, 715, 716, 717, 718, 740, 743, 744, 777, 794, 795, 796, 797, 798, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 893, 896, 903, 905, 906, 909, 915, 918, 920, 924, 935, 939, 940, 944, 971, 977, 980, 989, 992, 993, 996, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1033, 1034, 1035, 1037, 1050, 1061, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1142, 1145, 1146, 1149, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "core": [13, 17, 19, 133, 137, 142, 363, 379, 1161], "principl": 13, "oper": [13, 17, 19, 22, 25, 26, 48, 49, 72, 75, 76, 77, 78, 93, 94, 121, 122, 124, 125, 127, 130, 131, 133, 134, 140, 141, 204, 232, 233, 235, 236, 274, 348, 351, 397, 413, 416, 463, 466, 468, 471, 528, 531, 610, 613, 615, 618, 630, 633, 660, 663, 681, 691, 705, 706, 707, 760, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838], "expos": [13, 137, 141, 681, 699], "almost": [13, 18, 126, 131, 138, 140], "ident": [13, 15, 75, 76, 120, 125, 126, 127, 129, 131, 139, 140, 154, 363, 377, 1037, 1050, 1161], "uniqu": [13, 62, 63, 107, 108, 124, 126, 127, 131, 154, 1033, 1034, 1035, 1036, 1037, 1043, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105], "syntax": [13, 14, 135], "There": [13, 17, 18, 122, 125, 127, 130, 131, 132, 135, 137, 140, 154], "onli": [13, 16, 17, 18, 22, 25, 26, 58, 59, 75, 76, 103, 104, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 152, 154, 363, 383, 397, 588, 591, 593, 596, 842, 875, 878, 906, 909, 971, 989, 992, 1037, 1038, 1039, 1047, 1048, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1117, 1126, 1129, 1161, 1196, 1197, 1198, 1199, 1200, 1201], "so": [13, 14, 17, 18, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 118, 119, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 154, 155, 163, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 253, 255, 256, 258, 261, 263, 269, 271, 282, 283, 284, 286, 292, 293, 294, 296, 369, 370, 371, 373, 388, 389, 390, 391, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 676, 677, 678, 679, 682, 683, 684, 686, 694, 695, 696, 698, 714, 715, 716, 718, 755, 756, 757, 759, 765, 766, 767, 768, 778, 779, 780, 782, 794, 795, 796, 798, 814, 815, 816, 817, 822, 823, 824, 826, 832, 833, 834, 836, 843, 844, 845, 847, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 972, 973, 974, 976, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1037, 1038, 1048, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1091, 1092, 1093, 1094, 1112, 1113, 1114, 1116, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161], "wai": [13, 14, 17, 124, 128, 134, 139, 140, 141, 142, 154], "manipul": [13, 55, 100, 118, 142, 153, 972, 975, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1005, 1007, 1010, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032], "unsurprisingli": [13, 122], "fundament": [13, 131, 137], "consist": [13, 75, 76, 130, 132, 134, 842, 863, 866, 1117, 1118, 1121, 1192, 1193], "each": [13, 14, 15, 17, 18, 19, 23, 24, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 62, 63, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 88, 93, 94, 95, 96, 99, 100, 107, 108, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 153, 154, 165, 176, 179, 181, 184, 191, 194, 196, 197, 198, 199, 200, 204, 238, 241, 274, 282, 283, 284, 285, 286, 363, 387, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 493, 496, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 581, 583, 586, 588, 590, 591, 592, 593, 596, 598, 601, 605, 608, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 628, 630, 631, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 863, 866, 875, 878, 888, 891, 893, 896, 903, 905, 915, 918, 920, 924, 971, 981, 984, 997, 1000, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1020, 1025, 1028, 1029, 1032, 1037, 1043, 1050, 1061, 1062, 1080, 1083, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1117, 1118, 1121, 1161, 1167, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1191, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "veri": [13, 14, 17, 18, 118, 119, 122, 124, 127, 131, 133, 134, 138, 140, 141, 142, 154, 1161], "similar": [13, 118, 124, 131, 132, 133, 140, 154, 397, 630, 633, 821, 840, 870, 874, 925, 926, 1180, 1191], "convent": [13, 153, 842, 875, 878, 1117, 1118, 1121], "those": [13, 17, 18, 19, 54, 55, 75, 76, 99, 100, 124, 131, 137, 142, 204, 205, 206, 777, 819, 842, 870, 874, 906, 909, 920, 924, 925, 926, 971, 972, 973, 974, 975, 976], "introduc": [13, 131, 140, 971, 1007, 1010, 1085, 1086, 1090], "2006": 13, "layer": [13, 49, 56, 57, 94, 101, 102, 118, 121, 137, 138, 141, 822, 825, 827, 828, 829, 830, 831, 832, 835, 837, 838, 839, 840, 841, 1055, 1056, 1057, 1058, 1059, 1060, 1161, 1174, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203], "therefor": [13, 18, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 141, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 397, 398, 401, 413, 416, 418, 421, 423, 426, 473, 476, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 681, 713, 821, 828, 832, 835, 841, 842, 843, 846, 858, 861, 971, 1007, 1010, 1055, 1056, 1059, 1085, 1091, 1095, 1117, 1122, 1125, 1150, 1151, 1154], "present": [13, 18, 75, 76, 119, 123, 131, 132, 133, 134, 137], "itself": [13, 17, 18, 119, 125, 131, 134, 141, 153, 154, 681, 687, 1037, 1049], "cut": 13, "cloth": 13, "adher": [13, 14, 121, 123, 137, 142], "semant": [13, 137, 142, 397, 630, 633], "round": [13, 14, 15, 17, 18, 19, 20, 40, 41, 85, 86, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 397, 413, 416, 473, 474, 475, 476, 477, 513, 514, 515, 516, 517, 518, 521, 605, 608, 639, 655, 658, 676, 677, 678, 679, 680, 1161], "up": [13, 14, 15, 16, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 153, 154], "hopefulli": [13, 14, 15, 17, 18, 19, 20, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153], "paint": [13, 137], "pictur": [13, 137], "how": [13, 15, 16, 17, 18, 19, 20, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 153, 154, 1161, 1167, 1180, 1191, 1192, 1193], "pleas": [13, 14, 15, 17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1161], "check": [13, 14, 15, 17, 18, 28, 30, 31, 32, 33, 44, 45, 75, 76, 89, 90, 120, 124, 131, 136, 137, 139, 140, 141, 142, 153, 274, 297, 315, 316, 318, 319, 326, 332, 335, 342, 345, 362, 363, 375, 376, 382, 396, 681, 691, 708, 711, 712, 723, 726, 733, 734, 735, 736, 748, 760, 773, 776, 777, 794, 795, 796, 797, 798, 842, 863, 866, 1037, 1038, 1047, 1048, 1049, 1161], "out": [13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 153, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 287, 288, 289, 290, 291, 304, 306, 308, 363, 388, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 700, 701, 702, 705, 706, 707, 709, 713, 714, 715, 716, 717, 718, 727, 740, 743, 744, 777, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1180, 1188], "discuss": [13, 14, 15, 16, 17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 1161], "faq": [13, 14, 15, 137, 139, 140, 141, 142, 153], "reach": [13, 14, 15, 17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1037, 1049], "discord": [13, 14, 15, 17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 1161], "you": [13, 14, 15, 16, 17, 18, 19, 20, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 153, 154, 1161, 1167], "question": [13, 14, 15, 17, 18, 122, 124, 137, 139, 140, 141, 142, 153, 154, 1161], "With": [14, 15, 17, 22, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 72, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 122, 124, 125, 137, 165, 171, 174, 176, 179, 181, 184, 186, 189, 191, 194, 196, 200, 204, 227, 228, 229, 230, 231, 238, 241, 269, 273, 274, 282, 283, 284, 285, 286, 292, 295, 304, 307, 309, 310, 313, 321, 324, 337, 340, 353, 363, 381, 397, 398, 401, 403, 406, 408, 411, 413, 416, 417, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 458, 461, 462, 468, 471, 473, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 508, 511, 513, 516, 518, 519, 520, 521, 522, 523, 526, 528, 531, 538, 541, 548, 551, 553, 556, 588, 591, 603, 604, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 670, 674, 675, 681, 682, 683, 684, 685, 686, 690, 694, 695, 696, 697, 698, 700, 701, 708, 713, 714, 717, 718, 755, 758, 763, 765, 766, 767, 768, 769, 770, 777, 778, 779, 781, 794, 795, 796, 797, 798, 814, 815, 816, 817, 818, 821, 822, 825, 828, 831, 832, 835, 841, 842, 843, 846, 847, 848, 851, 853, 856, 858, 861, 879, 882, 925, 929, 930, 934, 955, 956, 959, 960, 961, 965, 966, 969, 970, 971, 972, 975, 976, 985, 988, 989, 992, 997, 1000, 1002, 1005, 1006, 1007, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1037, 1040, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1067, 1068, 1072, 1073, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1094, 1095, 1106, 1107, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1150, 1151, 1154], "central": 14, "goal": [14, 19], "being": [14, 15, 17, 18, 75, 76, 119, 122, 124, 129, 130, 131, 132, 133, 134, 135, 137, 140, 153, 154, 204, 205, 206, 681, 742, 749, 1085, 1096, 1100, 1161], "would": [14, 17, 18, 20, 54, 55, 99, 100, 117, 119, 121, 122, 124, 128, 129, 130, 131, 134, 136, 137, 139, 141, 142, 154, 165, 186, 189, 363, 388, 392, 971, 1002, 1003, 1004, 1005, 1006, 1161], "entir": [14, 15, 18, 68, 69, 75, 76, 113, 114, 122, 123, 124, 130, 131, 134, 139, 140, 141, 142, 154, 363, 387, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1189], "forgiven": 14, "rais": [14, 18, 42, 43, 54, 55, 58, 59, 68, 69, 75, 76, 99, 100, 103, 104, 113, 114, 120, 134, 135, 137, 139, 274, 287, 290, 397, 503, 506, 625, 628, 681, 691, 721, 731, 746, 755, 756, 758, 771, 777, 811, 820, 842, 875, 878, 884, 886, 940, 944, 971, 1002, 1003, 1004, 1005, 1006, 1013, 1016, 1017, 1020, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1117, 1122, 1125, 1130, 1133, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1192, 1193, 1196, 1200], "an": [14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 58, 59, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 99, 100, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 153, 154, 165, 176, 179, 181, 184, 191, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 246, 248, 249, 251, 252, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 283, 284, 285, 286, 287, 290, 292, 295, 310, 313, 321, 324, 327, 330, 337, 340, 348, 351, 363, 388, 392, 397, 398, 399, 401, 403, 404, 406, 408, 409, 411, 413, 414, 416, 418, 419, 421, 423, 424, 426, 428, 429, 431, 433, 434, 436, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 496, 498, 499, 503, 504, 506, 508, 511, 513, 514, 516, 518, 519, 521, 523, 524, 526, 528, 529, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 556, 558, 559, 561, 563, 564, 566, 568, 569, 571, 573, 574, 576, 578, 579, 581, 583, 584, 586, 588, 589, 591, 593, 594, 596, 598, 599, 601, 603, 604, 605, 606, 608, 610, 611, 613, 615, 616, 618, 620, 621, 625, 626, 628, 630, 631, 633, 635, 636, 638, 640, 641, 643, 645, 646, 648, 650, 651, 652, 653, 654, 655, 656, 658, 660, 661, 663, 665, 667, 669, 670, 671, 672, 673, 674, 675, 676, 678, 680, 681, 692, 693, 694, 695, 696, 697, 698, 700, 709, 710, 713, 727, 731, 733, 734, 735, 736, 765, 769, 770, 771, 777, 794, 795, 796, 797, 798, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 828, 832, 835, 841, 842, 843, 844, 846, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 874, 875, 878, 884, 886, 888, 891, 893, 896, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 926, 935, 939, 940, 944, 945, 949, 971, 972, 973, 975, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1037, 1043, 1055, 1056, 1059, 1061, 1063, 1064, 1065, 1066, 1067, 1079, 1080, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1172, 1173, 1192, 1193, 1196, 1197, 1198, 1200], "eyebrow": 14, "somehow": 14, "pytorch": [14, 15, 19, 119, 125, 126, 127, 132, 133, 134, 137, 139, 142, 154, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1161, 1196, 1197, 1198, 1199, 1200, 1201], "other": [14, 17, 18, 22, 25, 26, 36, 37, 42, 43, 72, 75, 76, 77, 78, 81, 82, 87, 88, 118, 121, 122, 124, 125, 126, 127, 130, 131, 134, 135, 137, 139, 141, 142, 152, 153, 154, 201, 202, 204, 205, 206, 282, 283, 284, 397, 508, 511, 681, 682, 683, 684, 685, 686, 687, 777, 787, 788, 1061, 1073, 1076, 1085, 1096, 1100, 1117, 1138, 1141, 1146, 1149, 1161], "strong": [14, 154], "industri": 14, "back": [14, 130, 136, 137, 139, 154, 681, 745, 772, 1161, 1167, 1192, 1193, 1196, 1200], "momentum": 14, "won": [14, 15, 18, 142], "ad": [14, 17, 18, 19, 115, 116, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 132, 134, 137, 141, 154, 681, 754, 755, 758, 842, 863, 866, 971, 985, 988, 1202, 1203], "just": [14, 15, 17, 18, 121, 122, 124, 125, 126, 127, 134, 137, 139, 140, 154, 1117, 1118, 1121, 1180, 1189], "make": [14, 15, 17, 18, 19, 118, 119, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142], "problem": [14, 18, 130, 139], "even": [14, 15, 17, 18, 119, 121, 127, 132, 133, 139, 140, 141, 142, 154, 397, 625, 628, 635, 638], "wors": 14, "rather": [14, 18, 44, 45, 75, 76, 89, 90, 118, 121, 124, 131, 142, 154, 204, 205, 206, 363, 387, 681, 733, 734, 736, 777, 794, 795, 796, 797, 798], "funni": 14, "comic": 14, "strip": 14, "easi": [14, 17, 18, 126, 127, 131], "feasibl": 14, "space": [14, 204, 205, 206, 232, 233, 235, 236, 681, 710, 777, 811, 820], "case": [14, 17, 18, 19, 28, 32, 33, 54, 55, 72, 75, 76, 77, 78, 95, 96, 99, 100, 118, 119, 120, 121, 122, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 154, 165, 196, 200, 204, 238, 241, 363, 382, 393, 396, 397, 398, 401, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 468, 471, 473, 476, 478, 481, 483, 486, 503, 506, 508, 511, 513, 516, 558, 561, 563, 566, 573, 576, 578, 581, 588, 591, 605, 608, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 670, 674, 675, 676, 680, 681, 731, 743, 744, 842, 879, 882, 971, 1002, 1003, 1004, 1005, 1006, 1037, 1040, 1046, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1138, 1141, 1142, 1145, 1146, 1149, 1180, 1191, 1192, 1193, 1196, 1200], "unlik": [14, 122, 131], "charger": 14, "charact": [14, 135], "encod": [14, 140, 681, 710], "instant": [14, 1161], "messag": [14, 18, 135, 137, 139, 1205, 1206], "much": [14, 17, 18, 118, 130, 131, 134, 137, 139, 140], "doe": [14, 18, 20, 75, 76, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 132, 134, 137, 139, 140, 154, 397, 468, 471, 681, 731, 870, 874, 925, 926, 971, 1012], "mandat": [14, 124, 134], "adopt": [14, 18, 130], "continu": [14, 15, 123, 124, 135, 154], "own": [14, 15, 17, 120, 121, 124, 135, 137, 154], "signatur": [14, 118, 119, 121, 122, 124, 131, 132, 133, 134, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 645, 648, 655, 658, 660, 663, 842, 858, 861, 971, 985, 988, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125], "replac": [14, 18, 20, 54, 55, 75, 76, 99, 100, 122, 124, 129, 131, 132, 133, 137, 139, 142, 154, 681, 743, 744, 971, 972, 973, 974, 975, 976, 1061, 1062], "your": [14, 15, 16, 17, 19, 20, 118, 121, 140, 141, 154, 1161], "10": [14, 17, 20, 40, 41, 58, 59, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 124, 126, 131, 137, 139, 140, 204, 226, 227, 229, 230, 231, 235, 236, 237, 397, 408, 409, 410, 411, 412, 443, 446, 448, 451, 483, 484, 485, 486, 487, 508, 511, 528, 531, 553, 556, 563, 564, 565, 566, 567, 650, 651, 652, 653, 654, 655, 658, 681, 701, 713, 742, 749, 755, 757, 759, 777, 799, 800, 801, 802, 821, 822, 824, 825, 826, 831, 842, 853, 856, 858, 861, 898, 901, 925, 929, 930, 934, 971, 989, 992, 1012, 1013, 1015, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1080, 1083, 1085, 1086, 1090, 1117, 1118, 1121, 1122, 1125, 1196, 1198], "100": [14, 15, 124, 140, 141, 142, 154, 397, 655, 658, 1161], "despit": [14, 131, 133], "distinct": [14, 17, 121, 131, 134, 136, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1161], "still": [14, 18, 75, 76, 121, 124, 132, 139, 141, 154, 1161], "believ": [14, 18], "share": [14, 75, 76, 122, 124, 126, 127, 128, 131, 137, 274, 357], "bring": [14, 124, 137, 138], "benefit": [14, 15, 17, 18, 130, 131, 134, 139, 140, 154], "unrel": [14, 18], "what": [14, 15, 18, 117, 119, 121, 122, 124, 129, 131, 135, 136, 137, 139, 140, 141, 142, 153, 154, 1161], "again": [14, 15, 18, 118, 122, 124, 131, 134, 140, 142, 154], "contrari": 14, "bumpi": 14, "road": 14, "allud": [14, 140], "most": [14, 17, 75, 76, 118, 119, 124, 127, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 154, 842, 863, 866], "technologi": 14, "sector": [14, 40, 41, 85, 86, 397, 408, 409, 410, 411, 412, 423, 424, 425, 426, 427, 438, 439, 440, 441, 442], "full": [14, 15, 18, 22, 25, 26, 72, 77, 78, 119, 121, 124, 132, 137, 154, 204, 274, 310, 313, 397, 528, 531, 553, 556, 821, 831, 842, 906, 909, 915, 918, 920, 924], "success": 14, "reason": [14, 18, 118, 122, 127, 130, 131, 132, 134, 137, 139, 397, 630, 633], "build": [14, 16, 17, 127, 136, 138, 141, 142, 154, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1161, 1180, 1191, 1192, 1193], "custom": [14, 124, 141], "comput": [14, 15, 17, 22, 25, 26, 40, 41, 42, 43, 44, 45, 52, 53, 73, 74, 75, 76, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 124, 125, 127, 131, 137, 140, 154, 186, 188, 190, 363, 387, 397, 413, 416, 443, 446, 458, 461, 468, 471, 493, 496, 498, 499, 500, 501, 502, 523, 526, 528, 531, 548, 551, 553, 556, 583, 586, 588, 591, 593, 596, 598, 601, 605, 608, 610, 613, 615, 618, 681, 693, 694, 695, 696, 697, 698, 701, 702, 777, 778, 781, 783, 785, 787, 788, 790, 792, 799, 801, 803, 805, 807, 809, 811, 812, 814, 815, 816, 817, 818, 820, 821, 822, 825, 827, 828, 829, 830, 831, 832, 835, 838, 840, 842, 843, 846, 848, 851, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 906, 909, 911, 913, 915, 918, 920, 924, 940, 944, 945, 949, 955, 956, 959, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1037, 1043, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149], "thank": [14, 140], "interoper": 14, "compon": [14, 137, 777, 811, 820], "bio": [14, 17], "hardwar": [14, 17], "initi": [14, 18, 72, 75, 76, 77, 78, 124, 128, 132, 133, 821, 839, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1196, 1200], "pcie": 14, "interfac": [14, 142, 154], "motherboard": 14, "raid": 14, "storag": [14, 140], "virtual": [14, 18, 20], "bluetooth": 14, "wireless": 14, "exchang": 14, "btx": 14, "form": [14, 16, 28, 30, 31, 32, 33, 34, 35, 50, 51, 75, 76, 95, 96, 124, 127, 141, 142, 204, 208, 209, 210, 243, 246, 256, 258, 260, 261, 263, 265, 681, 687, 762, 764, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 888, 891, 893, 896, 903, 905, 906, 909, 915, 918, 920, 924, 925, 929, 935, 939, 1037, 1039, 1049], "factor": [14, 44, 45, 48, 49, 50, 51, 89, 90, 93, 94, 95, 96, 363, 385, 386, 387, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 803, 805, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 842, 843, 844, 845, 846, 847, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1196, 1197, 1198, 1199], "sata": 14, "connect": [14, 17, 141, 142, 1180, 1190, 1191], "host": [14, 154], "bu": 14, "adapt": [14, 777, 803, 805, 1196, 1199], "devic": [14, 18, 22, 25, 26, 34, 35, 39, 42, 43, 58, 59, 75, 76, 79, 80, 84, 87, 88, 103, 104, 117, 118, 120, 126, 127, 129, 132, 139, 140, 154, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 681, 711, 712, 713, 714, 715, 716, 717, 718, 740, 743, 744, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1172, 1173, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203], "html": [14, 20, 121, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 645, 648, 655, 658, 660, 663, 842, 858, 861, 971, 985, 988, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125], "enabl": [14, 17, 18, 72, 75, 76, 77, 78, 124, 127, 130, 131, 134, 136, 137, 138, 140, 142, 154, 777, 811, 820], "anyon": [14, 16, 154], "websit": 14, "tcp": 14, "ip": 14, "node": [14, 75, 76, 131, 1037, 1038, 1047, 1048], "commun": [14, 16, 18, 19, 154, 1161, 1167], "network": [14, 127, 131, 137, 141, 153, 821, 838, 1161, 1169, 1180, 1192, 1193], "smtp": 14, "possibl": [14, 16, 17, 18, 19, 54, 55, 99, 100, 121, 122, 124, 131, 132, 134, 137, 140, 153, 154, 681, 737, 971, 1002, 1003, 1004, 1005, 1006, 1117, 1122, 1125, 1130, 1133], "send": 14, "gmail": 14, "outlook": 14, "pop": 14, "u": [14, 16, 17, 18, 50, 51, 95, 96, 124, 126, 131, 134, 141, 154, 842, 843, 844, 845, 846, 847, 920, 924, 1161], "email": 14, "ieee": [14, 203, 274, 310, 313, 397, 413, 416, 508, 511, 605, 608, 630, 633, 655, 658], "754": [14, 203, 274, 310, 313, 397, 413, 416, 508, 511, 605, 608, 630, 633, 655, 658], "allow": [14, 18, 124, 125, 126, 137, 154, 204, 232, 233, 235, 236, 681, 737, 1192, 1193], "calcul": [14, 52, 53, 72, 75, 76, 77, 78, 97, 98, 121, 165, 196, 200, 397, 398, 401, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 478, 481, 483, 486, 488, 491, 503, 506, 508, 511, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 605, 608, 625, 628, 645, 648, 650, 653, 655, 658, 665, 669, 670, 674, 675, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149], "live": [14, 15], "depend": [14, 17, 18, 22, 25, 26, 121, 124, 125, 129, 131, 132, 137, 154, 165, 196, 200, 274, 277, 280, 397, 398, 401, 403, 406, 408, 411, 418, 421, 423, 426, 428, 431, 433, 436, 478, 481, 483, 486, 503, 506, 508, 511, 558, 561, 563, 566, 568, 571, 573, 576, 625, 628, 645, 648, 650, 653, 670, 674, 675, 842, 863, 866, 906, 909, 915, 918, 920, 924, 1080, 1084, 1106, 1107, 1110, 1112, 1115], "did": [14, 19, 142], "aris": [14, 154], "until": [14, 18, 135, 154, 1161], "substanti": [14, 18, 124, 130], "innov": 14, "growth": 14, "usag": [14, 137, 154, 363, 387], "relev": [14, 17, 19, 122, 131, 132, 140, 1196, 1197, 1198, 1199, 1200, 1201], "area": [14, 40, 41, 85, 86, 134, 152, 397, 408, 409, 410, 411, 412, 423, 424, 425, 426, 427, 438, 439, 440, 441, 442, 1161], "necess": 14, "parti": [14, 154], "could": [14, 15, 17, 18, 122, 124, 131, 132, 134, 137, 139, 140, 141, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "easili": [14, 18, 140, 141, 142, 154, 1161], "engag": [14, 16, 17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "regard": [14, 131], "effect": [14, 119, 121, 130, 131, 154, 204, 238, 241, 777, 807, 809, 1117, 1138, 1141, 1146, 1149], "2015": 14, "sinc": [14, 17, 18, 124, 154], "alongsid": 14, "machin": [14, 17, 127, 153, 274, 310, 313, 321, 324, 842, 888, 891, 903, 905], "given": [14, 15, 17, 18, 19, 20, 42, 43, 52, 53, 54, 55, 58, 59, 75, 76, 87, 88, 97, 98, 99, 100, 103, 104, 118, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 141, 142, 153, 204, 205, 206, 212, 232, 233, 235, 236, 274, 303, 363, 374, 382, 384, 385, 386, 387, 393, 396, 681, 701, 702, 714, 715, 716, 717, 718, 743, 744, 750, 775, 777, 778, 781, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 822, 825, 827, 828, 829, 830, 831, 832, 835, 842, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 975, 985, 988, 989, 992, 997, 1000, 1007, 1008, 1009, 1010, 1011, 1012, 1025, 1028, 1037, 1044, 1045, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1106, 1112, 1115, 1172, 1173], "frame": [14, 153], "less": [14, 18, 22, 25, 26, 40, 41, 58, 59, 85, 86, 103, 104, 119, 122, 131, 136, 137, 397, 403, 406, 408, 411, 418, 421, 433, 436, 473, 476, 552, 558, 561, 563, 566, 573, 576, 625, 628, 630, 633, 640, 643, 655, 658, 842, 888, 891, 903, 905, 945, 949, 1061, 1073, 1074, 1075, 1076, 1077, 1117, 1146, 1149], "matur": [14, 154], "state": [14, 119, 121, 124, 136, 137, 138, 140, 153, 274, 361, 397, 605, 608, 681, 720, 753, 772, 773, 774, 821, 839, 1161, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "than": [14, 18, 22, 25, 26, 44, 45, 58, 59, 62, 63, 75, 76, 89, 90, 103, 104, 107, 108, 118, 122, 124, 131, 134, 137, 140, 141, 142, 154, 204, 205, 206, 274, 310, 313, 363, 387, 397, 403, 406, 408, 411, 418, 421, 433, 436, 453, 456, 463, 466, 473, 476, 513, 516, 518, 521, 558, 561, 563, 566, 573, 576, 603, 625, 628, 630, 633, 640, 643, 655, 658, 676, 680, 681, 733, 734, 736, 777, 794, 795, 796, 797, 798, 842, 848, 851, 875, 878, 888, 891, 903, 905, 945, 949, 971, 972, 975, 989, 992, 1013, 1016, 1061, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1117, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149], "preced": [14, 141], "mention": [14, 17, 18, 119, 122, 127, 134], "aros": 14, "70": [14, 842, 898, 901, 1117, 1118, 1121], "80": [14, 842, 898, 901, 1117, 1118, 1121], "90": [14, 85, 86, 397, 468, 471, 635, 637, 638, 639, 842, 898, 901, 1117, 1118, 1121], "effort": [14, 16, 124, 154], "stage": [14, 16, 18, 20, 117, 135, 1161], "complet": [14, 18, 19, 75, 76, 130, 131, 139, 140, 842, 906, 909], "natur": [14, 122, 130, 131, 153, 397, 503, 506, 558, 561, 568, 571, 842, 911, 913], "like": [14, 17, 18, 20, 44, 45, 89, 90, 117, 118, 119, 121, 122, 124, 125, 126, 133, 134, 136, 137, 139, 140, 141, 142, 153, 154, 777, 794, 795, 796, 797, 798, 1061, 1073, 1076, 1161], "certainli": 14, "mission": [14, 1161], "creat": [14, 16, 17, 18, 20, 34, 35, 42, 43, 58, 59, 75, 76, 79, 80, 87, 88, 103, 104, 117, 120, 124, 125, 126, 132, 133, 134, 137, 138, 141, 152, 153, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 266, 268, 269, 271, 273, 681, 713, 714, 715, 716, 717, 718, 740, 743, 744, 763, 777, 814, 818, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1161, 1167, 1172, 1173, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "At": [14, 19, 120], "process": [14, 15, 16, 17, 18, 20, 124, 126, 127, 131, 137, 142, 363, 382, 396], "ourselv": 14, "lead": [14, 15, 72, 75, 76, 77, 78, 154, 842, 906, 909, 920, 924], "quansight": 14, "compani": 14, "made": [14, 18, 19, 131, 134, 137, 139], "organ": [14, 118, 127, 130, 131], "panda": 14, "scipi": 14, "conda": [14, 17, 20], "dask": [14, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "apach": 14, "onnx": 14, "scikit": 14, "jupyt": 14, "aw": 14, "cupi": 14, "net": [14, 15, 137, 142], "sympi": 14, "rai": [14, 397, 433, 436], "modin": 14, "spyder": 14, "includ": [14, 18, 19, 34, 35, 68, 69, 75, 76, 113, 114, 118, 119, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 135, 153, 154, 204, 205, 206, 208, 209, 210, 243, 246, 681, 726, 776, 842, 945, 949, 1037, 1038, 1061, 1073, 1076, 1080, 1082, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1164, 1166, 1180, 1190, 1191, 1194, 1195], "member": [14, 18], "googl": [14, 1161], "octoml": 14, "einop": [14, 75, 76, 681, 705, 706, 707], "further": [14, 15, 18, 20, 122, 125, 130, 136, 140, 141, 1161], "sponsor": 14, "lg": 14, "electron": 14, "microsoft": 14, "d": [14, 15, 16, 17, 48, 49, 93, 94, 117, 131, 140, 681, 690, 700, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 842, 858, 861, 898, 901, 1037, 1040, 1053, 1054, 1161, 1167], "shaw": 14, "co": [14, 40, 41, 85, 86, 137, 153, 397, 482, 681, 710, 1161], "intel": 14, "togeth": [14, 75, 76, 130, 131, 135, 141, 142, 154, 1202, 1203], "major": [14, 124, 125, 132, 133, 154, 1080, 1083], "involv": [14, 16, 20, 117, 132, 142, 274, 348, 351, 397, 413, 416, 605, 608, 1161, 1167], "anoth": [14, 17, 18, 75, 76, 124, 125, 126, 127, 131, 132, 139, 142, 204, 221, 224, 274, 282, 285, 292, 295], "promis": 14, "sign": [14, 17, 40, 41, 85, 86, 138, 142, 204, 205, 206, 397, 398, 401, 413, 416, 433, 436, 463, 466, 605, 608, 630, 631, 632, 633, 634, 644, 842, 911, 913, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1134, 1137, 1142, 1145], "pursuit": 14, "unif": [14, 16, 139, 1161, 1167], "clearli": [14, 18, 19, 122, 124], "lot": [14, 15, 129, 139, 154], "thought": [14, 17, 18, 119], "care": [14, 18, 142], "attent": [14, 18, 130, 131, 821, 840, 841, 1180, 1191], "gone": [14, 136], "simplifi": [14, 137, 138, 139, 141], "compat": [14, 22, 25, 26, 40, 41, 54, 55, 68, 69, 72, 77, 78, 85, 86, 99, 100, 113, 114, 119, 120, 154, 274, 287, 290, 397, 413, 414, 415, 416, 417, 433, 434, 435, 436, 437, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 615, 616, 617, 618, 619, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 665, 666, 667, 668, 669, 842, 888, 891, 903, 905, 915, 918, 930, 934, 940, 944, 945, 949, 971, 1002, 1003, 1004, 1005, 1006, 1080, 1082, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "excit": [14, 16, 117, 1161], "complianc": 14, "hope": [14, 154], "due": [14, 17, 22, 25, 26, 125, 131, 134, 397, 605, 608], "suit": [14, 17, 117, 123, 124, 140, 153], "some": [14, 15, 17, 18, 19, 75, 76, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 153, 154, 363, 364, 397, 508, 511, 777, 778, 781, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 819, 821, 837, 1161, 1180, 1188], "motiv": [14, 139], "great": [14, 15, 18, 124, 137, 139], "convinc": 14, "celebr": 14, "encourag": [14, 153, 154, 1161, 1167], "foundat": 14, "point": [15, 18, 23, 24, 40, 41, 50, 51, 58, 59, 73, 74, 85, 86, 95, 96, 103, 104, 119, 121, 122, 124, 130, 134, 137, 139, 140, 153, 165, 196, 197, 198, 199, 200, 203, 204, 205, 206, 208, 210, 212, 218, 219, 226, 248, 249, 266, 268, 274, 277, 280, 310, 313, 332, 335, 348, 351, 397, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 468, 471, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 516, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 605, 608, 625, 628, 630, 633, 635, 638, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 670, 671, 672, 673, 674, 675, 676, 680, 842, 843, 844, 845, 846, 847, 853, 856, 863, 866, 867, 869, 870, 873, 888, 891, 903, 905, 906, 909, 915, 918, 920, 924, 945, 949, 1061, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149], "mai": [15, 17, 18, 22, 25, 26, 40, 41, 85, 86, 124, 125, 131, 139, 141, 204, 205, 206, 221, 224, 363, 388, 392, 397, 493, 494, 495, 496, 497, 528, 531, 553, 556, 588, 591, 593, 596, 615, 616, 617, 619, 681, 704, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133], "ask": [15, 137, 139, 154, 1161], "perfectli": 15, "happi": [15, 17, 154], "abund": 15, "better": [15, 117, 120, 125, 126, 135, 136, 139, 140, 141], "ll": [15, 16, 18, 122, 131, 134, 140], "give": [15, 17, 18, 117, 119, 121, 122, 128, 139, 971, 1002, 1005], "two": [15, 17, 34, 35, 50, 51, 72, 77, 78, 95, 96, 121, 122, 124, 125, 126, 130, 131, 136, 140, 142, 204, 205, 206, 218, 219, 238, 241, 256, 258, 260, 261, 263, 265, 274, 347, 357, 397, 463, 466, 635, 638, 681, 689, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 935, 939, 940, 944, 971, 1021, 1024, 1085, 1086, 1090, 1091, 1095, 1096, 1100, 1101, 1105, 1161], "streamlin": 15, "workflow": [15, 18, 19, 140, 152, 1161], "save": [15, 75, 76, 124, 135, 154, 363, 364, 681, 751, 1192, 1193], "week": [15, 18, 1161], "let": [15, 120, 121, 122, 124, 125, 126, 131, 132, 133, 137, 139, 140, 141, 142, 1117, 1126, 1129, 1138, 1141, 1142, 1145, 1146, 1149, 1161], "sai": [15, 17, 129, 139], "deepmind": 15, "releas": [15, 17, 19, 154, 1161], "awesom": 15, "paper": 15, "love": 15, "choic": [15, 17, 134, 140, 1117, 1138, 1141, 1146, 1149], "perceiverio": 15, "happen": [15, 17, 18, 124, 140], "slew": 15, "rush": 15, "f": [15, 18, 20, 117, 124, 131, 135, 137, 140, 142, 681, 728, 732, 870, 874, 925, 926, 1037, 1040, 1053, 1054], "g": [15, 58, 59, 103, 104, 117, 131, 154, 274, 276, 348, 351, 363, 365, 870, 874, 925, 926, 1037, 1040, 1053, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1130, 1133, 1134, 1137, 1142, 1145], "inevit": 15, "deviat": [15, 56, 57, 58, 59, 101, 102, 103, 104, 124, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1068, 1069, 1070, 1071, 1072, 1117, 1138, 1141, 1194, 1195], "origin": [15, 18, 54, 55, 72, 75, 76, 77, 78, 95, 96, 99, 100, 125, 128, 129, 132, 137, 139, 397, 433, 436, 842, 879, 882, 971, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011], "often": [15, 124, 127, 135, 154], "erron": 15, "train": [15, 44, 45, 89, 90, 127, 131, 133, 140, 141, 142, 152, 153, 154, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1161], "poor": 15, "converg": 15, "perform": [15, 68, 69, 75, 76, 113, 114, 118, 119, 122, 124, 126, 127, 128, 130, 131, 133, 134, 137, 140, 154, 165, 186, 189, 204, 232, 233, 235, 236, 681, 701, 705, 706, 707, 729, 730, 731, 745, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 837, 839, 842, 920, 924, 1033, 1034, 1035, 1036, 1037, 1044, 1045, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "issu": [15, 16, 19, 124, 137, 139, 141, 154], "etc": [15, 17, 18, 19, 42, 43, 58, 59, 70, 71, 75, 76, 87, 88, 103, 104, 115, 116, 118, 119, 122, 124, 130, 131, 132, 137, 139, 140, 154, 204, 232, 233, 235, 236, 681, 713, 714, 715, 716, 717, 718, 740, 743, 744, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203], "publish": [15, 154], "manag": [15, 16, 134, 154], "get": [15, 16, 17, 19, 75, 76, 117, 124, 126, 127, 132, 133, 134, 137, 138, 139, 140, 141, 274, 304, 307, 309, 310, 313, 321, 324, 363, 368, 369, 372, 374, 377, 382, 386, 393, 396, 681, 688, 719, 720, 721, 722, 723, 742, 753, 1161, 1167, 1180, 1189], "work": [15, 17, 18, 19, 117, 124, 125, 131, 132, 133, 136, 137, 138, 139, 141, 142, 1161, 1167], "repositori": [15, 17, 18, 20, 123, 135], "pull": [15, 16, 17, 20, 118, 154], "request": [15, 16, 118, 363, 379], "confus": [15, 134], "do": [15, 17, 18, 19, 44, 45, 75, 76, 89, 90, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 397, 630, 633, 681, 731, 777, 794, 795, 796, 797, 798, 819, 1037, 1038, 1047, 1048, 1049], "don": [15, 17, 18, 19, 70, 71, 115, 116, 124, 132, 141, 154], "expect": [15, 18, 124, 154, 681, 688, 1161], "codebas": [15, 16, 117, 118, 134, 136, 363, 385, 386, 1161], "total": [15, 16, 18, 72, 75, 76, 77, 78, 122, 124, 133, 140, 141, 154, 363, 393, 1080, 1083, 1117, 1138, 1141, 1146, 1149], "hour": 15, "spent": 15, "spin": 15, "off": [15, 17, 136, 842, 858, 861, 935, 939], "test": [15, 17, 19, 40, 41, 68, 69, 85, 86, 113, 114, 117, 122, 135, 154, 274, 327, 330, 337, 340, 397, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "error": [15, 17, 18, 40, 41, 75, 76, 85, 86, 119, 120, 122, 124, 130, 133, 135, 139, 154, 165, 166, 169, 397, 498, 499, 500, 501, 502, 842, 925, 929, 1117, 1122, 1125, 1130, 1133, 1192, 1193, 1196, 1200], "iter": [15, 28, 30, 31, 32, 33, 42, 43, 70, 71, 72, 75, 76, 77, 78, 87, 88, 115, 116, 131, 137, 140, 201, 202, 363, 387, 681, 682, 683, 684, 685, 686, 971, 981, 984, 997, 1000, 1012, 1025, 1028, 1029, 1032, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054], "address": [15, 18, 19, 130, 137], "sake": 15, "singl": [15, 18, 58, 59, 75, 76, 103, 104, 118, 119, 122, 124, 127, 129, 131, 134, 137, 140, 141, 142, 154, 681, 770, 776, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090], "multipl": [15, 18, 56, 57, 68, 69, 75, 76, 85, 86, 87, 88, 89, 90, 95, 96, 99, 100, 101, 102, 113, 114, 122, 127, 131, 154, 397, 413, 417, 458, 462, 603, 604, 605, 608, 681, 682, 684, 685, 686, 714, 718, 737, 777, 794, 796, 797, 798, 842, 843, 846, 847, 870, 873, 971, 972, 975, 976, 1007, 1010, 1011, 1012, 1055, 1056, 1057, 1058, 1059, 1060, 1080, 1081, 1082, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1190], "line": [15, 17, 122, 124, 130, 135, 138, 139, 140, 141, 152, 1161, 1167], "convert": [15, 28, 30, 31, 32, 33, 34, 35, 75, 76, 124, 130, 137, 154, 155, 163, 204, 208, 209, 210, 243, 246, 274, 275, 276, 363, 365, 366, 367, 368, 382, 393, 396, 681, 745, 762, 764, 765, 769, 770, 772, 842, 870, 874, 925, 926, 950, 954, 1037, 1039, 1049, 1050, 1173], "directli": [15, 18, 118, 119, 120, 121, 124, 125, 127, 130, 131, 132, 133, 134, 137, 139, 141, 142, 153, 154, 1037, 1049], "graph": [15, 22, 25, 26, 127, 131, 138, 154, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1192, 1193], "guarante": [15, 130, 154, 1085, 1086, 1090], "turn": [15, 17, 122, 124, 131], "4": [15, 20, 22, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 58, 59, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 124, 128, 131, 137, 139, 140, 141, 142, 165, 171, 174, 176, 179, 186, 189, 196, 197, 199, 200, 204, 227, 228, 229, 230, 231, 238, 241, 251, 254, 269, 273, 274, 282, 283, 284, 285, 286, 292, 294, 295, 296, 304, 307, 310, 313, 337, 340, 363, 374, 381, 385, 397, 398, 400, 401, 402, 408, 410, 412, 413, 414, 415, 416, 417, 418, 421, 423, 425, 426, 427, 428, 431, 433, 435, 436, 437, 443, 446, 458, 459, 460, 461, 462, 468, 471, 473, 475, 476, 478, 481, 483, 486, 488, 489, 490, 491, 492, 493, 495, 496, 508, 510, 511, 513, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 538, 541, 548, 549, 550, 551, 552, 553, 556, 603, 604, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 645, 647, 648, 649, 650, 653, 655, 658, 660, 663, 670, 671, 673, 674, 675, 681, 690, 694, 696, 697, 698, 701, 710, 713, 714, 716, 717, 718, 736, 755, 756, 757, 758, 759, 763, 777, 778, 780, 781, 782, 794, 795, 796, 797, 798, 814, 815, 816, 818, 821, 822, 823, 824, 825, 826, 828, 829, 830, 832, 835, 839, 841, 842, 843, 844, 846, 848, 851, 853, 856, 858, 861, 870, 873, 888, 891, 898, 901, 925, 929, 930, 934, 935, 939, 955, 966, 969, 971, 972, 973, 974, 975, 976, 977, 980, 985, 988, 989, 992, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1037, 1040, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1094, 1095, 1106, 1107, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1150, 1151, 1154, 1161, 1196, 1197, 1198, 1199, 1201], "step": [15, 17, 18, 20, 44, 45, 75, 76, 79, 80, 89, 90, 122, 128, 130, 131, 132, 133, 137, 140, 141, 142, 153, 204, 205, 206, 207, 232, 233, 235, 236, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 790, 792, 799, 800, 801, 802, 803, 805, 807, 809, 1033, 1034, 1035, 1036, 1161, 1196, 1197, 1198, 1199, 1200, 1201], "take": [15, 16, 17, 18, 121, 122, 124, 126, 131, 132, 133, 137, 139, 141, 142, 154, 397, 468, 471, 1161, 1167], "few": [15, 18, 124, 127, 131, 132, 133, 134, 135, 138, 139, 140, 141, 152, 1161, 1167], "second": [15, 17, 22, 25, 26, 40, 41, 44, 45, 62, 63, 72, 77, 78, 85, 86, 89, 90, 107, 108, 122, 124, 125, 126, 134, 139, 274, 347, 357, 397, 413, 414, 415, 416, 417, 433, 434, 435, 437, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 493, 494, 496, 518, 521, 523, 524, 528, 529, 531, 548, 549, 551, 553, 554, 556, 578, 579, 581, 583, 584, 586, 593, 594, 596, 598, 599, 601, 605, 606, 608, 615, 616, 618, 625, 626, 628, 665, 666, 667, 668, 669, 681, 689, 742, 749, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 842, 848, 851, 858, 861, 863, 866, 875, 878, 898, 901, 906, 909, 920, 924, 930, 934, 940, 944, 971, 1017, 1020, 1021, 1024, 1033, 1035, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1196, 1197, 1198], "automat": [15, 17, 18, 117, 119, 127, 131, 136, 137, 138, 141, 142, 1161], "convers": [15, 29, 30, 31, 32, 33, 75, 76, 136, 138, 142, 153, 154, 681, 745, 1161, 1167], "everyon": [15, 16, 18, 154], "regardless": [15, 16, 75, 76, 139, 142, 201, 202], "wouldn": 15, "nice": [15, 124], "write": [15, 18, 19, 20, 23, 24, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 73, 74, 75, 76, 79, 80, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 121, 122, 126, 127, 128, 134, 137, 139, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 287, 290, 363, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 701, 702, 705, 706, 707, 709, 713, 714, 715, 716, 717, 718, 727, 740, 743, 744, 777, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1084, 1085, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "onc": [15, 17, 18, 124, 131, 132, 133, 137, 140, 154, 363, 387, 842, 870, 873, 920, 924, 1061, 1062], "know": [15, 18, 124, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "among": [15, 75, 76, 124], "frantic": 15, "port": 15, "lucid": 15, "honk": 15, "improv": [15, 18, 127, 137], "understand": [15, 17, 18, 19, 20, 117, 119, 121, 122, 123, 125, 126, 135, 136], "pattern": [15, 75, 76, 121, 132, 681, 705, 706, 707], "hasn": 15, "chang": [15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 121, 123, 124, 125, 131, 137, 141, 154, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 253, 255, 256, 258, 261, 263, 269, 271, 282, 283, 284, 286, 292, 293, 294, 296, 369, 370, 371, 373, 388, 389, 390, 391, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 676, 677, 678, 679, 682, 683, 684, 686, 694, 695, 696, 698, 714, 715, 716, 718, 755, 756, 757, 759, 765, 766, 767, 768, 778, 779, 780, 782, 794, 795, 796, 798, 814, 815, 816, 817, 822, 823, 824, 826, 832, 833, 834, 836, 842, 843, 844, 845, 847, 848, 851, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 972, 973, 974, 976, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1037, 1039, 1049, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1091, 1092, 1093, 1094, 1112, 1113, 1114, 1116, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1167], "now": [15, 17, 20, 75, 76, 118, 119, 124, 129, 131, 132, 135, 139, 140, 142, 153, 154, 204, 269, 273, 1180, 1191, 1192, 1193], "spend": 15, "torchvis": 15, "probabl": [15, 124, 821, 837, 1061, 1062, 1180, 1188], "sonnet": 15, "about": [15, 17, 18, 123, 124, 136, 137, 141, 142, 154, 274, 310, 313, 321, 324], "next": [15, 17, 18, 20, 121, 122, 128, 129, 135, 139, 140, 274, 310, 313, 1161, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201], "everyth": [15, 18, 19, 124, 126, 138, 154], "zero": [15, 22, 25, 26, 34, 35, 36, 37, 40, 41, 44, 45, 68, 69, 72, 75, 76, 77, 78, 81, 82, 85, 86, 89, 90, 103, 104, 113, 114, 119, 122, 124, 130, 131, 132, 133, 137, 140, 141, 165, 171, 174, 176, 179, 196, 200, 204, 212, 218, 219, 238, 241, 256, 258, 260, 261, 263, 265, 269, 271, 273, 274, 277, 280, 282, 283, 284, 285, 397, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 453, 456, 478, 479, 481, 483, 484, 485, 486, 487, 508, 511, 513, 516, 538, 541, 588, 591, 593, 596, 603, 604, 605, 608, 610, 613, 615, 618, 625, 628, 630, 633, 635, 636, 638, 645, 648, 650, 651, 652, 654, 655, 658, 660, 663, 670, 674, 675, 681, 694, 697, 701, 740, 743, 744, 777, 778, 779, 780, 781, 782, 783, 785, 794, 797, 799, 801, 803, 805, 821, 837, 841, 842, 843, 846, 853, 856, 875, 878, 888, 891, 903, 905, 940, 944, 945, 949, 971, 985, 988, 989, 992, 1007, 1010, 1029, 1032, 1055, 1056, 1059, 1061, 1063, 1065, 1066, 1068, 1070, 1071, 1073, 1075, 1076, 1080, 1081, 1082, 1083, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1196, 1197, 1198, 1199], "need": [15, 17, 18, 19, 20, 42, 43, 87, 88, 118, 121, 122, 123, 125, 126, 127, 130, 131, 134, 137, 139, 140, 153, 154, 681, 693, 694, 695, 696, 697, 698, 971, 972, 975, 985, 988], "said": 15, "high": [15, 19, 58, 59, 103, 104, 140, 1061, 1063, 1064, 1065, 1066, 1067, 1073, 1074, 1075, 1076, 1077], "level": [15, 16, 19, 127, 136, 137, 140, 141, 142, 154], "optim": [15, 134, 138, 140, 142, 153, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1033, 1034, 1035, 1036, 1161, 1197, 1198, 1199, 1201], "trainer": [15, 152, 154, 1161], "statu": 15, "quo": 15, "kera": 15, "dopamin": 15, "ignit": 15, "catalyst": 15, "lightn": 15, "fastai": 15, "haiku": [15, 142], "flax": [15, 142, 154], "trax": [15, 142], "objax": [15, 142], "idea": [15, 120, 125, 135, 153], "fulli": [15, 119, 130, 131, 137, 138, 139, 140, 141, 142, 154, 1180, 1190, 1191], "offer": [15, 141], "strongli": [16, 17, 1161, 1167], "welcom": [16, 17, 18, 1161, 1167], "absolut": [16, 40, 41, 75, 76, 85, 86, 397, 398, 399, 400, 401, 402, 842, 911, 913], "skill": 16, "whether": [16, 17, 22, 25, 26, 28, 30, 31, 32, 33, 42, 43, 44, 45, 54, 55, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 119, 131, 132, 134, 165, 166, 168, 169, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 208, 210, 227, 229, 231, 251, 253, 255, 274, 277, 280, 282, 284, 286, 292, 294, 296, 303, 304, 307, 326, 327, 330, 332, 335, 337, 340, 342, 345, 362, 363, 368, 369, 372, 378, 379, 382, 383, 387, 394, 396, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 546, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 683, 684, 685, 686, 689, 690, 694, 696, 698, 701, 704, 708, 710, 714, 716, 718, 723, 724, 726, 728, 731, 732, 733, 734, 735, 736, 737, 745, 748, 750, 752, 755, 757, 759, 760, 765, 766, 768, 773, 775, 776, 777, 783, 785, 787, 788, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 811, 812, 814, 815, 817, 820, 821, 837, 842, 843, 845, 847, 863, 866, 956, 958, 960, 961, 963, 965, 966, 968, 970, 971, 972, 974, 976, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1043, 1047, 1048, 1049, 1050, 1056, 1058, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1150, 1151, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1172, 1173, 1180, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "vetern": 16, "beginn": 16, "start": [16, 17, 18, 19, 20, 75, 76, 79, 80, 117, 121, 122, 125, 132, 136, 137, 139, 140, 141, 153, 154, 204, 205, 206, 207, 232, 233, 234, 235, 236, 237, 363, 364], "aspect": [16, 140, 1161], "guid": [16, 17, 18, 19, 135, 1161], "through": [16, 18, 19, 117, 122, 124, 125, 126, 127, 128, 131, 135, 136, 137, 139, 140, 141, 142, 153, 397, 433, 436, 1037, 1040], "journei": [16, 1161, 1167], "inclusvi": 16, "big": [16, 154], "team": [16, 17, 18], "board": 16, "contributor": [16, 17, 18, 136, 1161], "split": [16, 18, 22, 25, 26, 75, 76, 136, 137, 154, 363, 385, 386, 387, 681, 737, 971, 1161], "section": [16, 18, 19, 117, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "below": [16, 17, 19, 20, 34, 35, 117, 118, 120, 122, 124, 127, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 153, 165, 196, 200, 204, 256, 258, 260, 261, 263, 265, 397, 433, 436, 443, 446, 468, 471, 483, 486, 675, 842, 853, 856, 858, 861, 935, 939, 971, 985, 988, 989, 992, 1085, 1086, 1090, 1106, 1107, 1110, 1161], "best": [16, 17, 18, 19, 20, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 681, 737], "go": [16, 17, 18, 19, 117, 118, 122, 125, 126, 131, 136, 140, 154, 1037, 1048], "finish": [16, 17, 117, 1161], "dive": [16, 18, 19, 126, 131, 136, 139, 140, 154, 1161], "right": [16, 17, 18, 75, 76, 117, 122, 140, 397, 453, 456, 463, 466, 842, 920, 924], "environ": [16, 18, 20, 153], "basic": [16, 19, 20], "fork": [16, 17, 681, 738], "doc": [16, 19, 119, 121, 137, 140, 141, 1161], "document": [16, 18, 124, 125, 126, 138, 140, 142], "local": [16, 17, 20, 127], "task": [16, 18, 153, 1033, 1034, 1035, 1036, 1161], "help": [16, 17, 122, 124, 125, 128, 130, 131, 139, 140, 141, 152, 681, 687, 1117, 1142, 1145, 1161], "video": [16, 18, 118, 119, 121, 122, 124, 125, 127, 128], "realli": [17, 131, 154], "contribut": [17, 18, 19, 137, 1167], "toward": [17, 54, 55, 99, 100, 137, 971, 1007, 1008, 1009, 1010, 1011, 1161, 1167], "page": [17, 18, 138, 142, 152, 1161, 1167], "explain": [17, 18, 19, 118, 119, 121, 122, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 1161, 1167], "main": [17, 20, 34, 35, 129, 131, 204, 218, 219, 256, 258, 260, 261, 263, 265, 842, 858, 861, 935, 939], "prefer": [17, 125, 131], "mode": [17, 18, 50, 51, 75, 76, 95, 96, 122, 131, 154, 201, 202, 363, 387, 397, 413, 416, 605, 608, 681, 723, 745, 748, 750, 772, 773, 774, 842, 906, 907, 908, 909, 910], "git": [17, 18, 124], "recurs": [17, 20, 28, 30, 31, 32, 33, 75, 76, 127, 131, 141, 154, 1037, 1038, 1039, 1047, 1048, 1049], "submodul": [17, 18, 19, 20, 117, 123, 124, 127, 133, 136, 137, 141, 1161, 1194, 1195, 1202, 1203], "com": 17, "unifyai": [17, 18, 20], "http": [17, 121, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 645, 648, 655, 658, 660, 663, 777, 778, 781, 783, 785, 842, 858, 861, 971, 985, 988, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125], "gh": 17, "your_fold": 17, "id": [17, 130, 131, 135, 363, 368, 1192, 1193], "cours": [17, 18, 122, 140, 154], "whatev": [17, 154], "integr": [17, 274, 277, 280], "familiar": [17, 19], "decid": [17, 75, 76, 125, 1037, 1048], "sure": [17, 18, 19, 123, 124], "elig": 17, "free": [17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 153, 1161], "student": 17, "licenc": 17, "peopl": [17, 18, 117], "seem": [17, 141, 154], "miss": [17, 122, 124, 130, 131, 135, 1196, 1200], "add": [17, 18, 19, 22, 25, 26, 40, 41, 56, 57, 70, 71, 72, 75, 76, 77, 78, 85, 86, 87, 88, 101, 102, 109, 110, 115, 116, 117, 118, 119, 121, 124, 125, 127, 128, 130, 131, 137, 139, 154, 397, 398, 401, 417, 603, 604, 682, 686, 777, 811, 820, 1055, 1056, 1057, 1058, 1059, 1060, 1112, 1116, 1161, 1167, 1194, 1195], "explicit": [17, 20, 131, 132, 134, 137, 154], "remind": 17, "channel": [17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 681, 710, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190], "pace": 17, "updat": [17, 18, 19, 20, 44, 45, 75, 76, 89, 90, 117, 119, 122, 123, 129, 130, 131, 132, 137, 139, 140, 142, 154, 681, 731, 743, 744, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 839, 1033, 1034, 1035, 1037, 1044, 1045, 1053, 1054, 1172, 1173, 1196, 1197, 1198, 1199, 1200, 1201], "suggest": [17, 18, 118, 124], "latest": [17, 18, 19, 20, 121, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 645, 648, 655, 658, 660, 663, 842, 858, 861, 971, 985, 988, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1180, 1189], "packag": [17, 20, 125, 135, 154], "ensur": [17, 18, 119, 120, 124, 125, 130, 132, 135, 681, 731], "align": [17, 75, 76, 137, 139, 1161, 1167], "accord": [17, 20, 36, 37, 75, 76, 81, 82, 125, 127, 132, 274, 292, 293, 294, 295, 296, 303, 310, 313, 397, 413, 416, 463, 466, 605, 608, 681, 713, 743, 744, 842, 940, 944, 971, 981, 984, 1029, 1032, 1117, 1138, 1141, 1146, 1149], "stabl": [17, 64, 65, 87, 88, 109, 110, 137, 154, 681, 721, 722, 746, 747, 754, 755, 757, 758, 759, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116], "pypi": [17, 19, 154], "mayb": [17, 28, 32, 33, 137, 139], "person": [17, 18], "experi": [17, 138, 140, 154], "avoid": [17, 18, 120, 124, 128, 129, 131, 135, 139, 397, 508, 511], "pip": [17, 153, 1161], "instal": [17, 18, 20, 135, 153, 1161], "abil": [17, 138, 154], "certain": [17, 18, 75, 76, 124, 125, 132, 154, 204, 205, 206, 232, 233, 235, 236], "perhap": [17, 139, 140, 141, 154], "keep": [17, 18, 75, 76, 120, 123, 124, 131, 138, 140, 142, 681, 775], "track": [17, 18, 1037, 1049, 1192, 1193], "termin": [17, 18, 20, 72, 75, 76, 77, 78, 131, 137, 140], "run": [17, 20, 44, 45, 89, 90, 119, 122, 123, 124, 126, 128, 135, 137, 138, 139, 140, 141, 142, 153, 154, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1033, 1034, 1035, 1036, 1180, 1191, 1192, 1193], "command": [17, 20, 1161], "ivy_dev": [17, 18, 20], "name": [17, 18, 20, 22, 25, 26, 62, 63, 107, 108, 120, 121, 124, 125, 126, 132, 135, 137, 139, 140, 142, 201, 202, 681, 687, 842, 863, 866, 906, 909, 920, 924, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095], "3": [17, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 58, 59, 72, 73, 74, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 122, 124, 128, 131, 137, 139, 140, 141, 142, 165, 166, 167, 168, 170, 171, 174, 176, 179, 181, 184, 186, 189, 196, 197, 199, 200, 203, 204, 227, 228, 229, 230, 231, 238, 241, 251, 254, 266, 268, 269, 273, 274, 282, 283, 284, 285, 286, 292, 293, 294, 295, 296, 304, 307, 310, 313, 337, 340, 363, 368, 381, 385, 388, 392, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 437, 438, 441, 443, 446, 458, 459, 460, 461, 462, 463, 466, 468, 471, 473, 475, 476, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 538, 541, 548, 549, 550, 551, 552, 553, 556, 588, 591, 603, 604, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 663, 670, 671, 673, 674, 675, 681, 682, 683, 684, 689, 690, 694, 696, 697, 698, 701, 708, 713, 714, 715, 716, 717, 718, 736, 752, 755, 756, 757, 758, 759, 763, 770, 777, 778, 779, 780, 781, 782, 794, 797, 814, 815, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 870, 873, 888, 891, 898, 901, 920, 924, 925, 929, 930, 934, 935, 939, 950, 954, 955, 956, 958, 959, 960, 961, 963, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 985, 988, 989, 992, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1037, 1040, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1094, 1095, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1134, 1137, 1142, 1145, 1150, 1151, 1154, 1161], "8": [17, 20, 22, 25, 26, 40, 41, 42, 43, 52, 53, 54, 55, 58, 59, 64, 65, 72, 77, 78, 85, 86, 87, 88, 89, 90, 93, 94, 97, 98, 103, 104, 109, 110, 122, 124, 131, 136, 140, 165, 181, 184, 196, 200, 204, 227, 230, 269, 273, 274, 303, 309, 310, 313, 363, 374, 393, 397, 413, 416, 417, 423, 426, 427, 443, 446, 473, 476, 483, 486, 518, 519, 520, 521, 522, 523, 526, 528, 531, 548, 551, 553, 556, 588, 591, 603, 604, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 655, 658, 660, 663, 675, 681, 690, 694, 697, 713, 736, 755, 756, 757, 759, 777, 778, 781, 794, 796, 797, 798, 821, 822, 824, 825, 826, 832, 835, 842, 848, 851, 853, 856, 858, 861, 898, 901, 925, 929, 930, 934, 955, 956, 957, 958, 959, 960, 961, 963, 965, 966, 967, 968, 970, 971, 972, 973, 975, 989, 992, 1012, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1084, 1085, 1086, 1090, 1106, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1161, 1180, 1191], "activ": [17, 18, 20, 24, 70, 71, 74, 115, 116, 118, 141, 166, 169, 171, 174, 176, 178, 179, 180, 181, 184, 186, 189, 191, 194, 196, 200, 1161, 1170, 1171], "setup": [17, 18], "click": [17, 18, 121, 1161], "icon": [17, 18], "side": [17, 18], "choos": [17, 18, 142, 363, 388, 392, 397, 588, 591, 593, 596, 1080, 1084, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133], "left": [17, 18, 75, 76, 95, 96, 122, 132, 397, 453, 456, 842, 863, 866, 879, 882, 920, 924, 1080, 1081, 1161], "panel": 17, "select": [17, 18, 124, 137, 139, 142, 154], "drop": [17, 154], "down": [17, 124, 139], "path": [17, 20], "manual": [17, 18, 124, 141, 1037, 1038, 1047, 1048], "builtin": [17, 20, 139, 141, 870, 874, 925, 926], "requir": [17, 20, 118, 119, 120, 121, 122, 124, 126, 129, 130, 132, 133, 139, 154, 201, 202, 397, 655, 658, 842, 863, 866, 971, 1017, 1020, 1172, 1173], "cmd": [17, 20], "directori": [17, 18, 20, 124, 125, 363, 364, 681, 751], "folder": [17, 18, 20, 118, 123, 124, 127], "file": [17, 18, 20, 75, 76, 118, 121, 124, 127, 128, 130, 131, 135, 137, 140, 681, 751, 1192, 1193], "abov": [17, 18, 20, 34, 35, 58, 59, 103, 104, 119, 121, 122, 124, 125, 127, 128, 130, 131, 134, 135, 139, 140, 141, 142, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 605, 608, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 681, 713, 821, 828, 832, 835, 841, 842, 843, 846, 853, 856, 858, 861, 863, 866, 935, 939, 971, 985, 988, 989, 992, 1007, 1010, 1055, 1056, 1059, 1061, 1063, 1064, 1065, 1066, 1067, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1134, 1137, 1138, 1141, 1142, 1145, 1150, 1151, 1154], "m": [17, 18, 20, 34, 35, 50, 51, 58, 59, 85, 86, 95, 96, 103, 104, 117, 137, 204, 238, 241, 256, 258, 260, 261, 263, 265, 583, 585, 587, 681, 690, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 915, 918, 920, 924, 925, 929, 935, 939, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "python3": [17, 18, 20], "script": [17, 18, 20, 122, 137, 154], "bat": [17, 18, 20], "OR": [17, 18, 20, 68, 69, 113, 114, 397, 458, 461, 593, 596, 1150, 1156, 1157, 1158, 1159, 1160], "bin": [17, 18, 20], "mac": [17, 18, 20], "linux": [17, 18, 20], "virtualenv": 17, "found": [17, 18, 72, 75, 76, 77, 78, 121, 130, 131, 135, 363, 377, 870, 874, 925, 926], "o": [17, 117, 137, 681, 690], "note": [17, 18, 118, 121, 122, 124, 126, 131, 132, 397, 630, 633, 842, 863, 866, 920, 924, 971, 1017, 1020, 1085, 1091, 1095, 1117, 1126, 1129], "tick": [17, 18], "abl": [17, 18, 75, 76, 127, 132, 134, 135, 139, 142], "To": [17, 120, 122, 124, 126, 127, 131, 135, 140, 141, 142, 870, 874, 925, 926, 1161], "ivy_test": [17, 18, 126], "test_array_api": [17, 18, 123, 124], "cd": [17, 18, 20], "r": [17, 18, 75, 76, 117, 681, 690, 775, 842, 906, 909, 950, 954], "txt": 17, "visual": [17, 135, 154], "jetbrain": 17, "remot": 17, "mitig": 17, "potenti": [17, 136, 397, 508, 511], "conflict": [17, 18, 140], "addit": [17, 18, 56, 57, 75, 76, 101, 102, 118, 121, 124, 125, 131, 132, 139, 140, 142, 363, 388, 392, 397, 413, 416, 681, 705, 706, 707, 1055, 1056, 1057, 1058, 1059, 1060, 1180, 1190], "yet": [17, 131, 154], "particular": [17, 18, 118, 120, 122, 124, 126, 132, 134, 397, 398, 401, 588, 591], "system": [17, 18, 154, 842, 915, 918], "instruct": [17, 19], "desktop": 17, "wsl": 17, "powershel": 17, "admin": 17, "visit": [17, 18], "link": [17, 125], "imag": [17, 20, 47, 48, 49, 92, 93, 94, 118, 137, 138, 140, 142, 153, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 1161], "profession": 17, "execut": [17, 18, 20, 131, 134, 137, 139, 142, 154, 363, 364, 681, 771], "deploy": 17, "top": [17, 18, 124, 125, 140, 141, 1161], "press": [17, 18, 140, 1161], "ok": 17, "correctli": [17, 75, 76, 95, 96, 119, 124, 126, 131, 132, 135, 141, 154, 842, 879, 882, 1080, 1081], "caus": [17, 18, 122, 124, 131, 134, 135, 154], "earlier": [17, 18], "might": [17, 18, 118, 124, 129, 132, 137, 139, 140, 681, 704], "necessari": [17, 54, 55, 99, 100, 122, 128, 131, 134, 971, 1002, 1003, 1004, 1005, 1006], "virtualis": 17, "sudo": 17, "apt": 17, "ca": 17, "certif": 17, "curl": 17, "gnupg": 17, "lsb": 17, "mkdir": 17, "p": [17, 18, 42, 43, 75, 76, 87, 88, 95, 96, 117, 204, 238, 241, 681, 693, 694, 695, 696, 697, 698, 821, 837, 842, 879, 882, 945, 949, 1180, 1188], "keyr": 17, "fssl": 17, "download": [17, 124], "gpg": 17, "dearmor": 17, "echo": 17, "deb": 17, "arch": 17, "dpkg": 17, "architectur": [17, 142, 154], "lsb_releas": 17, "tee": 17, "list": [17, 19, 20, 28, 30, 31, 32, 33, 34, 35, 36, 37, 48, 49, 56, 57, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 118, 119, 122, 124, 125, 126, 131, 132, 133, 135, 137, 140, 141, 142, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 204, 205, 206, 208, 209, 210, 227, 229, 231, 238, 239, 241, 243, 246, 251, 253, 255, 274, 282, 283, 284, 285, 286, 292, 294, 296, 363, 368, 387, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 690, 694, 696, 698, 714, 716, 718, 755, 757, 759, 763, 765, 766, 768, 775, 777, 778, 780, 782, 794, 796, 798, 811, 814, 815, 817, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 842, 843, 845, 847, 930, 934, 956, 958, 960, 961, 963, 965, 966, 968, 970, 971, 972, 974, 976, 977, 980, 989, 992, 1002, 1004, 1006, 1007, 1009, 1011, 1012, 1017, 1020, 1037, 1038, 1039, 1040, 1043, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1080, 1083, 1085, 1091, 1092, 1094, 1095, 1151, 1153, 1155, 1156, 1158, 1160, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "dev": [17, 38, 39, 75, 76, 83, 84, 127, 133, 137, 139, 141, 363, 373, 377], "null": 17, "ce": 17, "cli": 17, "containerd": 17, "io": 17, "compos": [17, 124, 131, 154], "plugin": 17, "systemctl": 17, "permiss": 17, "relat": [17, 18, 120, 124, 135, 153, 363], "post": [17, 56, 57, 101, 102, 142, 1055, 1056, 1057, 1058, 1059, 1060, 1161, 1167], "gener": [17, 18, 19, 20, 43, 44, 45, 58, 59, 70, 71, 88, 89, 90, 103, 104, 115, 116, 117, 118, 119, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 153, 154, 201, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 630, 633, 645, 648, 655, 658, 660, 663, 682, 685, 687, 688, 689, 690, 691, 692, 693, 694, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 758, 760, 761, 762, 763, 764, 765, 769, 770, 771, 772, 773, 774, 775, 776, 777, 794, 795, 796, 797, 798, 842, 858, 861, 971, 985, 988, 1007, 1010, 1061, 1062, 1063, 1066, 1073, 1074, 1075, 1076, 1077, 1078, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1161, 1196, 1200], "dure": [17, 44, 45, 75, 76, 89, 90, 127, 131, 132, 133, 134, 154, 201, 202, 363, 388, 392, 681, 771, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 842, 875, 878, 1033, 1034, 1035, 1036, 1117, 1138, 1141, 1146, 1149, 1192, 1193, 1196, 1197, 1198, 1200], "detect": [17, 75, 76, 119, 124, 131, 135, 140, 141, 1037, 1038, 1048], "its": [17, 19, 20, 36, 37, 54, 55, 81, 82, 99, 100, 120, 121, 124, 125, 135, 142, 154, 274, 282, 283, 284, 285, 286, 363, 387, 681, 764, 842, 875, 878, 971, 985, 988, 1002, 1005, 1007, 1008, 1009, 1010, 1011, 1021, 1024], "simplest": [17, 122, 124], "valu": [17, 18, 22, 23, 24, 25, 26, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 56, 57, 58, 59, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 107, 108, 119, 121, 122, 124, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 142, 154, 165, 196, 197, 198, 199, 200, 204, 205, 206, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 274, 277, 280, 298, 299, 300, 302, 363, 386, 387, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 416, 418, 419, 420, 421, 422, 428, 429, 430, 431, 432, 433, 434, 435, 437, 473, 476, 488, 489, 490, 492, 493, 496, 498, 501, 503, 505, 507, 508, 510, 512, 513, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 598, 599, 603, 604, 605, 606, 607, 608, 609, 615, 618, 620, 623, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 638, 655, 656, 657, 659, 660, 661, 662, 664, 665, 667, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 699, 704, 710, 713, 714, 715, 716, 717, 718, 725, 728, 732, 742, 743, 744, 746, 747, 749, 776, 777, 778, 779, 780, 781, 782, 783, 785, 787, 788, 799, 801, 811, 812, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 839, 840, 841, 842, 888, 891, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 945, 949, 971, 972, 973, 974, 975, 976, 981, 982, 983, 984, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1029, 1031, 1032, 1033, 1034, 1035, 1037, 1041, 1042, 1043, 1044, 1045, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200], "inform": [17, 18, 124, 131, 135, 274, 310, 313, 321, 324, 681, 687, 777, 812], "becaus": [17, 18, 119, 121, 124, 125, 126, 127, 128, 130, 132, 133, 134, 137, 141, 142, 154], "header": [17, 18], "summari": [17, 18, 75, 76, 81, 82, 124, 274, 298, 299, 300, 302, 354, 355, 681, 699, 703, 725], "recommend": [17, 128, 397, 588, 591, 593, 596, 630, 633, 1117, 1126, 1129], "advanc": [17, 870, 874, 925, 926], "bar": 17, "pytest": [17, 18, 124, 126], "checkbox": 17, "q": [17, 18, 117, 154, 821, 841, 842, 863, 866, 906, 909], "fail": [17, 18, 19, 123, 124, 135, 137, 139], "It": [17, 18, 20, 23, 24, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 73, 74, 79, 80, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 121, 122, 124, 125, 126, 128, 130, 131, 132, 134, 137, 139, 140, 141, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 287, 290, 363, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 701, 705, 706, 707, 709, 714, 715, 716, 717, 718, 727, 740, 743, 744, 777, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 867, 869, 870, 873, 874, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 911, 913, 915, 918, 920, 924, 925, 926, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1084, 1085, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "headach": 17, "arm": [17, 18], "m1": 17, "instead": [17, 18, 19, 119, 121, 122, 124, 126, 127, 131, 134, 137, 139, 140, 154], "featur": [17, 18, 118, 119, 140, 154, 1161], "vm": 17, "azur": 17, "cloud": [17, 153], "mean": [17, 18, 58, 59, 66, 67, 75, 76, 103, 104, 111, 112, 115, 116, 117, 120, 122, 124, 127, 131, 132, 133, 134, 137, 139, 140, 141, 142, 153, 154, 363, 387, 681, 706, 1033, 1034, 1035, 1036, 1037, 1043, 1061, 1063, 1066, 1068, 1069, 1070, 1071, 1072, 1085, 1086, 1090, 1117, 1161, 1174], "configur": [17, 18, 20, 75, 76, 132, 363, 386, 1037, 1050], "defin": [17, 19, 118, 119, 121, 124, 132, 139, 141, 154, 397, 605, 608, 630, 633, 681, 740, 842, 848, 851, 863, 866, 915, 918, 1117, 1122, 1125, 1126, 1129, 1130, 1133], "dockerfil": [17, 20], "longer": [17, 124, 132, 134], "worri": 17, "platform": 17, "agnost": [17, 119, 130, 137, 139, 142, 154, 1161], "usual": [17, 124, 125], "studio": 17, "favourit": 17, "extens": [17, 18, 121, 124, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 553, 556, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 842, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1150, 1151, 1154], "theme": 17, "too": [17, 18, 135, 154, 397, 413, 416, 605, 608], "done": [17, 18, 122, 124, 135, 140], "unsupport": [17, 125, 135, 274, 318, 319, 363, 376, 681, 711, 712], "old": [17, 75, 76, 134], "slow": 17, "ipad": 17, "long": [17, 18, 122, 821, 839], "browser": 17, "cool": [17, 118], "requisit": 17, "head": [17, 131, 821, 840, 1161, 1180, 1191], "pane": [17, 18], "readi": 17, "begin": [17, 1037, 1038, 1048], "outlin": [17, 18, 19, 117, 121, 124, 127, 131, 134, 139], "green": [17, 18, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 1205, 1206], "dropdown": 17, "tab": [17, 140, 1161], "master": [17, 18, 131], "v": [17, 18, 124, 137, 140, 141, 142, 821, 841, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1200, 1202, 1203], "view": [17, 18, 204, 221, 224, 821, 828, 832, 835], "built": [17, 18, 124, 138, 204, 205, 206, 1180, 1191, 1192, 1193], "bottom": 17, "box": 17, "patient": 17, "upto": [17, 18], "15": [17, 40, 41, 58, 59, 79, 80, 87, 88, 103, 104, 122, 124, 204, 227, 229, 230, 231, 274, 310, 313, 397, 443, 446, 488, 491, 523, 524, 548, 549, 630, 631, 633, 635, 636, 638, 640, 641, 681, 694, 697, 755, 757, 759, 821, 822, 825, 828, 842, 858, 861, 898, 901, 925, 929, 930, 934, 971, 1007, 1010, 1061, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1080, 1083, 1085, 1086, 1090, 1117, 1118, 1121], "minut": 17, "launch": 17, "12": [17, 40, 41, 58, 59, 85, 86, 93, 94, 99, 100, 101, 102, 103, 104, 122, 124, 131, 397, 443, 446, 468, 471, 483, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 635, 638, 650, 652, 654, 681, 694, 697, 701, 722, 777, 778, 781, 822, 824, 826, 842, 858, 861, 898, 901, 930, 934, 971, 989, 992, 1007, 1010, 1013, 1015, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1066, 1068, 1069, 1071, 1073, 1074, 1075, 1080, 1084, 1085, 1086, 1090, 1117, 1118, 1121], "output": [17, 18, 23, 24, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 73, 74, 79, 80, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 117, 118, 119, 121, 122, 124, 126, 127, 130, 131, 133, 134, 137, 139, 141, 142, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 287, 290, 363, 387, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 692, 693, 694, 695, 696, 697, 698, 701, 702, 705, 706, 707, 709, 713, 714, 715, 716, 717, 718, 727, 740, 743, 744, 745, 772, 777, 787, 788, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1037, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1084, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191], "That": [17, 18, 124, 139, 140, 141, 397, 630, 633], "alreadi": [17, 18, 75, 76, 119, 128, 131, 132, 139, 154, 397, 473, 476, 513, 516, 605, 608, 635, 638, 676, 680, 842, 898, 901, 1161], "refer": [17, 18, 68, 69, 113, 114, 119, 124, 125, 127, 132, 154, 204, 218, 219, 397, 508, 511, 568, 571, 777, 778, 781, 783, 785, 842, 940, 944, 950, 954, 1117, 1138, 1141, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1190], "approach": [17, 18, 124, 127, 131, 139, 140, 154], "colour": 17, "applic": [17, 132, 133, 141, 821, 840, 841, 1037, 1043, 1049], "good": [17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 141], "chanc": 17, "vscode": 17, "show": [17, 18, 75, 76, 122, 124, 134, 153, 154, 1161], "explor": [17, 18, 138, 142, 153], "troubleshoot": 17, "sometim": [17, 18, 124], "ever": [17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "64": [17, 48, 49, 93, 94, 103, 104, 124, 140, 141, 274, 309, 397, 655, 658, 660, 663, 681, 755, 758, 821, 831, 832, 833, 834, 835, 836, 842, 898, 901, 925, 929, 1068, 1070, 1117, 1118, 1121, 1161, 1180, 1191], "bit": [17, 122, 124, 127, 131, 139, 274, 309, 310, 313, 321, 324, 397, 448, 451, 453, 456, 463, 466, 1117, 1134, 1137, 1142, 1145], "usr": 17, "nutshel": [17, 119], "hook": 17, "lint": 17, "accept": [17, 18, 28, 119, 121, 122, 124, 126, 127, 130, 131, 133, 134, 139, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 588, 591, 593, 596, 603, 604, 615, 618, 630, 633, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 681, 713, 821, 828, 832, 835, 841, 842, 843, 846, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1055, 1056, 1059, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1126, 1129, 1150, 1151, 1154, 1161], "fix": [17, 18], "attempt": [17, 135, 154], "succe": 17, "problemat": 17, "appli": [17, 18, 19, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 119, 120, 121, 122, 124, 127, 129, 131, 132, 133, 134, 137, 139, 140, 141, 142, 152, 154, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 253, 255, 256, 258, 261, 263, 269, 271, 274, 282, 283, 284, 286, 292, 293, 294, 296, 348, 351, 369, 370, 371, 373, 388, 389, 390, 391, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 676, 677, 678, 679, 681, 682, 683, 684, 686, 694, 695, 696, 698, 705, 706, 707, 714, 715, 716, 718, 755, 756, 757, 759, 765, 766, 767, 768, 777, 778, 779, 780, 782, 794, 795, 796, 798, 799, 801, 803, 805, 814, 815, 816, 817, 821, 822, 823, 824, 826, 832, 833, 834, 836, 838, 840, 841, 842, 843, 844, 845, 847, 888, 891, 903, 905, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 976, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1017, 1020, 1033, 1034, 1035, 1037, 1043, 1046, 1049, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1091, 1092, 1093, 1094, 1112, 1113, 1114, 1116, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1169, 1170, 1171, 1194, 1195], "proce": [17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "modifi": [17, 18, 121, 127, 132, 133, 135, 137], "properli": [17, 117], "enter": [17, 18, 119, 130, 132, 133, 363, 777, 811, 820], "unsur": [17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "feel": [17, 18, 19, 20, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 1161], "server": [18, 1161], "appropri": [18, 70, 71, 115, 116, 124, 129, 397, 413, 416, 605, 608, 1080, 1081], "context": [18, 122, 124, 131, 132, 133, 363, 681, 738, 821, 840, 1180, 1191], "suitabl": [18, 118, 131], "quick": [18, 117, 141], "alwai": [18, 19, 44, 45, 54, 55, 75, 76, 89, 90, 99, 100, 118, 119, 121, 124, 127, 128, 130, 131, 134, 135, 137, 139, 154, 274, 277, 280, 397, 413, 416, 605, 608, 681, 731, 777, 794, 795, 796, 797, 798, 812, 971, 1002, 1003, 1004, 1005, 1006], "correct": [18, 19, 66, 67, 111, 112, 117, 119, 127, 131, 132, 133, 135, 274, 357, 971, 972, 975, 1117, 1138, 1139, 1140, 1141, 1146, 1147, 1148, 1149, 1161], "tendenc": 18, "land": 18, "end": [18, 131, 134, 136, 153, 154, 204, 205, 206, 397, 433, 436, 1161, 1167], "world": 18, "come": [18, 124, 141, 152, 1161, 1167], "fly": 18, "hard": [18, 139], "receiv": [18, 124, 132, 133, 681, 688, 737, 870, 874, 925, 926, 1180, 1190], "respons": [18, 20], "internship": 18, "comment": [18, 135], "trigger": 18, "unansw": 18, "label": [18, 52, 53, 97, 98, 137, 138, 142, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "respond": 18, "remov": [18, 19, 20, 75, 76, 121, 124, 127, 132, 134, 142, 842, 858, 861, 875, 878, 935, 939, 971, 1013, 1016, 1033, 1034, 1035], "someon": [18, 154], "els": [18, 19, 58, 59, 103, 104, 118, 120, 126, 127, 128, 134, 137, 139, 141, 142, 154, 274, 303, 681, 691, 704, 708, 1037, 1047, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "strive": [18, 124, 154], "repli": 18, "newli": [18, 124, 134, 201, 202, 274, 277, 280, 681, 692], "place": [18, 34, 35, 54, 55, 75, 76, 79, 80, 99, 100, 117, 118, 119, 120, 121, 122, 124, 125, 127, 131, 133, 135, 142, 165, 196, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 265, 266, 268, 269, 271, 273, 274, 292, 295, 327, 330, 337, 340, 363, 388, 392, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 681, 713, 729, 730, 731, 821, 828, 832, 835, 841, 842, 843, 846, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1008, 1009, 1010, 1011, 1055, 1056, 1059, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1150, 1151, 1154, 1196, 1197, 1198, 1199, 1200, 1201], "bug": [18, 124], "serv": [18, 119, 124, 127, 130, 131, 136, 1161], "suspect": 18, "behaviour": [18, 119, 121, 124, 125, 130, 131, 134, 139], "observ": 18, "confid": 18, "noth": [18, 75, 76], "wrong": 18, "someth": [18, 118, 140, 141, 154], "bet": 18, "act": [18, 122, 125, 154], "placehold": [18, 119, 130, 135, 1037, 1049], "sub": [18, 19, 75, 76, 95, 96, 117, 124, 125, 131, 139, 140, 141, 842, 858, 861, 971, 1012, 1033, 1034, 1035, 1036, 1161], "mark": [18, 124], "ii": [18, 1117, 1118, 1121], "iii": 18, "titl": [18, 1161], "issue_numb": 18, "delet": [18, 20], "No": [18, 137], "wait": [18, 72, 75, 76, 77, 78], "progress": [18, 131, 138, 142], "pr": 18, "soon": [18, 131, 152, 154, 1161, 1167], "partial": [18, 75, 76, 1192, 1193], "solut": [18, 124, 131, 842, 915, 918], "review": [18, 118], "merg": 18, "everi": [18, 19, 20, 34, 35, 42, 43, 87, 88, 119, 122, 123, 124, 127, 128, 129, 131, 132, 134, 137, 139, 141, 204, 226, 227, 228, 230, 681, 682, 683, 684, 685, 686], "shape": [18, 22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 121, 122, 124, 126, 132, 133, 134, 137, 139, 140, 141, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 363, 383, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 701, 705, 706, 707, 709, 714, 715, 716, 717, 718, 724, 727, 740, 743, 744, 750, 762, 764, 774, 777, 778, 780, 782, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1083, 1084, 1092, 1093, 1094, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1194, 1195], "move": [18, 75, 76, 118, 363, 388, 392], "within": [18, 28, 32, 33, 124, 126, 141, 154, 204, 205, 206, 1061, 1073, 1076], "7": [18, 20, 22, 25, 26, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 58, 59, 64, 65, 72, 77, 78, 85, 86, 87, 88, 89, 90, 93, 94, 97, 98, 101, 102, 103, 104, 109, 110, 122, 124, 127, 131, 134, 165, 171, 174, 176, 179, 196, 200, 274, 310, 313, 321, 324, 363, 374, 397, 398, 401, 413, 414, 415, 416, 417, 423, 425, 443, 446, 448, 451, 458, 459, 460, 461, 462, 468, 471, 473, 476, 483, 485, 486, 487, 488, 489, 491, 493, 494, 496, 503, 506, 513, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 531, 548, 550, 551, 552, 553, 556, 588, 591, 603, 604, 630, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 648, 650, 653, 655, 658, 670, 674, 675, 681, 690, 694, 697, 701, 713, 736, 755, 756, 757, 759, 777, 778, 779, 780, 781, 782, 783, 785, 794, 795, 797, 799, 801, 821, 822, 823, 824, 825, 826, 831, 832, 835, 841, 842, 848, 851, 853, 856, 858, 861, 898, 901, 925, 929, 930, 934, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 975, 985, 988, 989, 992, 1012, 1021, 1024, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1084, 1085, 1086, 1090, 1106, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121], "dai": 18, "close": [18, 121, 124, 397, 508, 511, 635, 638, 842, 920, 924], "likewis": [18, 119, 121, 127, 131, 132, 140], "freed": 18, "flag": [18, 44, 45, 75, 76, 89, 90, 132, 134, 139, 363, 368, 777, 794, 795, 796, 797, 798], "purpos": [18, 20, 119, 120, 122, 124, 127, 129, 130, 131, 136, 139, 397, 508, 511, 1161], "remain": [18, 54, 55, 99, 100, 122, 154, 397, 413, 416, 605, 608, 630, 633, 971, 1002, 1003, 1004, 1005, 1006, 1037, 1043], "access": [18, 20, 75, 76, 125, 132], "more": [18, 22, 25, 26, 62, 63, 107, 108, 117, 118, 119, 122, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 153, 154, 204, 205, 206, 274, 282, 285, 397, 508, 511, 842, 870, 874, 875, 878, 925, 926, 971, 989, 992, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1161], "short": [18, 141, 821, 839], "basi": [18, 123, 140], "situat": [18, 142], "alloc": [18, 34, 35, 154, 204, 256, 258, 260, 261, 263, 265, 274, 277, 280], "upon": [18, 122, 124, 134, 154], "period": 18, "prevent": [18, 44, 45, 89, 90, 134, 135, 139, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1117, 1142, 1145, 1196, 1197, 1198], "unabl": 18, "obvious": 18, "never": [18, 54, 55, 99, 100, 124, 131, 971, 1002, 1003, 1004, 1005, 1006], "reflect": [18, 130], "qualiti": 18, "hypothet": 18, "frustrat": 18, "delai": 18, "busi": 18, "fine": [18, 139, 142], "inact": 18, "limit": [18, 72, 75, 76, 77, 78, 122, 124, 135, 137, 140, 142, 154, 274, 310, 313, 321, 324, 681, 693, 694, 697, 971, 972, 975], "me": 18, "unfairli": 18, "definit": [18, 50, 51, 95, 96, 127, 132, 139, 842, 843, 844, 845, 846, 847, 848, 851], "investig": 18, "Then": [18, 20, 120, 125, 139, 154], "practic": 18, "separ": [18, 124, 126, 130, 131, 135, 137, 139, 140], "branch": [18, 131, 154, 201, 202, 397, 433, 436], "simpli": [18, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 119, 121, 122, 124, 125, 127, 130, 131, 133, 134, 137, 141, 142, 154, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 253, 255, 256, 258, 261, 263, 269, 271, 282, 283, 284, 286, 292, 293, 294, 296, 369, 370, 371, 373, 388, 389, 390, 391, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 676, 677, 678, 679, 682, 683, 684, 686, 694, 695, 696, 698, 714, 715, 716, 718, 755, 756, 757, 759, 765, 766, 767, 768, 778, 779, 780, 782, 794, 795, 796, 798, 814, 815, 816, 817, 822, 823, 824, 826, 832, 833, 834, 836, 843, 844, 845, 847, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 972, 973, 974, 976, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1091, 1092, 1093, 1094, 1112, 1113, 1114, 1116, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160], "role": [18, 125, 138], "kept": [18, 72, 75, 76, 77, 78, 134, 1033, 1034, 1035], "date": 18, "upstream": [18, 123], "complic": [18, 126, 137], "root": [18, 20, 40, 41, 85, 86, 140, 397, 655, 656, 657, 658, 659, 1061, 1062, 1068, 1071, 1196, 1197, 1198, 1199, 1201], "merge_with_upstream": 18, "sh": 18, "name_of_your_branch": 18, "resolv": [18, 1117, 1134, 1137, 1142, 1145], "clone": [18, 20, 75, 76], "push": [18, 123, 135], "both": [18, 119, 120, 121, 122, 124, 125, 126, 127, 131, 133, 134, 137, 139, 140, 141, 142, 153, 154, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 347, 397, 398, 401, 413, 416, 418, 421, 423, 426, 473, 476, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 625, 628, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 681, 713, 777, 778, 781, 821, 828, 832, 835, 841, 842, 843, 846, 848, 851, 858, 861, 870, 874, 875, 878, 925, 926, 940, 944, 971, 1007, 1010, 1055, 1056, 1059, 1085, 1091, 1095, 1117, 1122, 1125, 1150, 1151, 1154], "abort": 18, "tediou": 18, "resolut": [18, 274, 310, 313], "stash": 18, "reinstat": 18, "correspond": [18, 36, 37, 40, 41, 42, 43, 54, 55, 72, 75, 76, 77, 78, 81, 82, 85, 86, 99, 100, 119, 121, 122, 123, 124, 127, 130, 131, 132, 274, 282, 283, 284, 285, 286, 397, 433, 434, 435, 436, 437, 625, 626, 628, 755, 756, 842, 848, 851, 863, 866, 915, 918, 971, 977, 980, 1007, 1008, 1009, 1010, 1011, 1061, 1062, 1080, 1081, 1082, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149], "fetch": 18, "uncommit": 18, "unstag": 18, "untrack": 18, "comprehens": 18, "explan": [18, 119, 121, 125, 131, 139], "atlassian": 18, "tutori": [18, 125], "wrote": 18, "piec": [18, 127, 129, 130, 137], "tag": 18, "describ": [18, 124, 138, 142, 1117, 1118, 1121, 1134, 1137, 1138, 1141, 1142, 1145], "navig": [18, 117], "blame": 18, "revis": 18, "author": [18, 1161], "log": [18, 40, 41, 85, 86, 127, 131, 134, 137, 140, 204, 235, 236, 397, 562, 568, 571, 578, 581, 842, 911, 913, 1161], "eg": [18, 124], "16": [18, 40, 41, 42, 43, 50, 51, 58, 59, 85, 86, 103, 104, 122, 124, 140, 274, 309, 321, 324, 397, 635, 636, 670, 671, 673, 674, 681, 755, 756, 758, 821, 831, 832, 835, 842, 843, 844, 846, 858, 861, 898, 901, 925, 929, 1063, 1064, 1067, 1068, 1070, 1073, 1075, 1077, 1080, 1084, 1117, 1118, 1121], "5": [18, 20, 22, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 50, 51, 54, 55, 56, 57, 58, 59, 64, 65, 72, 73, 74, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 99, 100, 101, 102, 103, 104, 109, 110, 119, 122, 124, 126, 128, 139, 140, 141, 165, 171, 174, 176, 179, 186, 189, 196, 197, 199, 200, 204, 227, 228, 229, 230, 231, 238, 241, 251, 254, 266, 268, 269, 273, 274, 282, 283, 284, 285, 286, 292, 294, 295, 296, 304, 307, 310, 313, 337, 340, 363, 381, 385, 397, 398, 400, 401, 402, 408, 411, 413, 414, 415, 416, 417, 418, 421, 423, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 458, 459, 460, 461, 462, 463, 466, 468, 471, 473, 474, 475, 476, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 508, 509, 510, 511, 513, 514, 515, 516, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 538, 541, 548, 549, 550, 551, 552, 553, 556, 588, 591, 603, 604, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 648, 649, 655, 658, 660, 663, 670, 671, 673, 674, 675, 681, 682, 683, 690, 694, 696, 697, 698, 701, 713, 714, 717, 718, 736, 755, 756, 757, 758, 759, 763, 777, 778, 780, 781, 782, 794, 797, 814, 818, 821, 822, 824, 825, 826, 828, 830, 831, 832, 835, 841, 842, 843, 844, 846, 848, 851, 853, 856, 858, 861, 870, 873, 898, 901, 925, 929, 930, 934, 935, 939, 955, 966, 969, 971, 972, 973, 974, 975, 976, 977, 980, 985, 988, 989, 992, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1016, 1021, 1024, 1037, 1040, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1150, 1151, 1154, 1180, 1191], "past": 18, "l": [18, 50, 51, 85, 86, 95, 96, 117, 583, 585, 587, 842, 843, 844, 845, 846, 847, 863, 866, 875, 878, 935, 939], "filepath": [18, 75, 76], "grep": 18, "commit_id": 18, "handi": [18, 124], "histori": 18, "toggl": 18, "vertic": 18, "highlight": [18, 122], "previou": [18, 119, 124, 125, 142, 154, 274, 361, 681, 772, 773, 774, 777, 783, 785, 799, 801], "shown": [18, 70, 71, 75, 76, 115, 116, 119, 120, 122, 124, 125, 135, 137, 139, 154, 165, 196, 200, 397, 433, 436, 443, 446, 468, 471, 483, 486, 675, 842, 853, 856, 971, 985, 988, 989, 992, 1085, 1086, 1090, 1106, 1107, 1110], "whenev": [18, 124, 126, 139, 140], "think": [18, 122], "gain": [18, 136, 141, 1174], "quit": [18, 121, 124, 127, 129, 130], "repeat": [18, 54, 55, 75, 76, 99, 100, 121, 122, 124, 128, 130, 131, 132, 135, 681, 707, 971, 1001, 1025, 1028], "yourself": [18, 19, 124, 153], "simpler": [18, 139], "cannot": [18, 120, 125, 128, 132, 142], "least": [18, 122, 124, 127, 130, 842, 875, 878], "final": [18, 121, 122, 127, 130, 132, 134, 135, 137, 139, 140, 204, 232, 233, 235, 236, 681, 710, 1180, 1191], "tickbox": 18, "lower": [18, 34, 35, 50, 51, 58, 59, 95, 96, 103, 104, 122, 124, 137, 154, 204, 218, 219, 256, 258, 260, 397, 603, 842, 843, 844, 845, 846, 847, 1061, 1073, 1074, 1075, 1076, 1077], "corner": 18, "without": [18, 75, 76, 118, 119, 120, 122, 125, 127, 130, 131, 133, 135, 137, 139, 140, 141, 153, 154, 681, 742, 749, 971, 1002, 1005, 1037, 1039, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "detail": [18, 19, 118, 119, 123, 124, 126, 127, 128, 129, 131, 140, 141, 204, 221, 224, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "span": 18, "intent": [18, 134], "larg": [18, 140, 397, 413, 416, 605, 608], "discourag": 18, "philosophi": 18, "increment": [18, 681, 730], "frequent": [18, 19], "valuabl": 18, "infrequ": 18, "earli": [18, 1161], "wast": 18, "spot": [18, 127], "mistak": [18, 135], "propos": 18, "mountain": 18, "around": [18, 72, 75, 76, 77, 78, 119, 127, 130, 139, 154], "advoc": [18, 154], "individu": [18, 19, 127], "per": [18, 48, 49, 93, 94, 124, 140, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "style": [18, 1080, 1083], "ve": [18, 136, 139, 1061, 1062, 1161], "were": [18, 75, 76, 118, 124, 131, 135], "actual": [18, 117, 127, 134, 136, 139, 141, 154], "aim": [18, 136], "part": [18, 34, 35, 118, 123, 124, 127, 137, 138, 142, 153, 154, 204, 256, 258, 260, 261, 263, 265, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1192, 1193], "subsect": 18, "session": [18, 1161], "block": [18, 124, 127, 135, 136, 138, 142, 154, 363, 777, 811, 820, 1161], "smaller": [18, 54, 55, 99, 100, 137, 142, 971, 972, 975, 1007, 1008, 1009, 1010, 1011, 1117, 1134, 1137, 1142, 1145], "edit": 18, "exact": [18, 73, 74, 75, 76, 137, 166, 168, 170, 1085, 1086, 1090], "beauti": 18, "particularli": [18, 124, 140, 154], "concern": [18, 117, 122, 131, 134, 136], "effici": [18, 119, 124, 127, 131, 134, 135, 137, 140, 154], "difficult": [18, 124, 154, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "undo": 18, "stress": 18, "frequenc": [18, 681, 710], "advantag": 18, "nifti": 18, "reassur": 18, "isol": 18, "bash": [18, 20], "shell": 18, "rm": 18, "structur": [18, 20, 72, 75, 76, 77, 78, 118, 127, 130, 131, 140, 141, 681, 699, 1037, 1050], "fact": [18, 124, 140], "mount": 18, "local_path_to_ivi": 18, "overwrit": [18, 75, 76, 134, 137, 363, 387], "subfold": [18, 118, 124, 126], "insid": [18, 20, 118, 124, 131, 132], "wide": [18, 124], "via": [18, 118, 131, 132, 133, 134, 137, 139, 140, 153, 1037, 1038, 1047, 1048], "dep": 18, "fresh": 18, "copi": [18, 20, 34, 35, 36, 37, 42, 43, 54, 55, 75, 76, 79, 80, 81, 82, 87, 88, 99, 100, 121, 128, 132, 137, 139, 140, 153, 154, 204, 208, 209, 210, 211, 221, 224, 274, 277, 278, 279, 280, 281, 363, 388, 392, 681, 700, 765, 766, 767, 768, 769, 770, 971, 1002, 1003, 1004, 1005, 1006, 1037, 1039, 1106, 1112, 1115], "arsen": 18, "button": 18, "declar": [18, 870, 874, 925, 926], "exec": 18, "rf": 18, "cp": 18, "ivy_contain": 18, "test_ivi": [18, 124, 126], "test_funct": [18, 124], "test_cor": 18, "test_imag": 18, "test_random_crop": 18, "array_api_test": 18, "test_creation_funct": 18, "test_arang": 18, "window": [18, 20, 48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "variou": [18, 119, 121, 129, 153], "cpu": [18, 42, 43, 58, 59, 75, 76, 87, 88, 103, 104, 133, 154, 204, 232, 233, 235, 236, 269, 273, 363, 368, 369, 372, 374, 379, 382, 384, 385, 388, 392, 393, 395, 396, 681, 713, 714, 715, 716, 717, 718, 740, 743, 744, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203], "gpu": [18, 133, 139, 363, 368, 374, 378, 380, 384, 385, 386, 393, 395], "combin": [18, 72, 75, 76, 77, 78, 122, 124, 127, 130, 131, 142, 681, 711, 712, 842, 848, 851], "text": [18, 121], "ctrl": 18, "prompt": [18, 1161], "instanc": [18, 19, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 119, 121, 122, 124, 125, 126, 127, 130, 132, 134, 140, 141, 142, 155, 163, 165, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 232, 233, 235, 236, 238, 241, 243, 244, 248, 249, 251, 252, 253, 254, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 282, 283, 284, 292, 293, 294, 295, 304, 307, 310, 313, 321, 324, 327, 330, 337, 340, 363, 369, 370, 371, 384, 388, 389, 390, 391, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 443, 444, 445, 446, 448, 449, 450, 453, 454, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 483, 484, 485, 486, 488, 489, 490, 493, 494, 495, 498, 499, 500, 503, 504, 505, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 523, 524, 525, 528, 529, 530, 531, 533, 534, 535, 538, 539, 540, 541, 543, 544, 545, 548, 549, 550, 553, 554, 555, 556, 558, 559, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 598, 599, 600, 603, 604, 605, 606, 607, 610, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 625, 626, 627, 630, 631, 632, 635, 636, 637, 638, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 654, 655, 656, 657, 658, 660, 661, 662, 663, 665, 667, 668, 670, 672, 673, 674, 675, 676, 678, 679, 681, 682, 683, 684, 694, 695, 696, 698, 700, 713, 714, 715, 716, 731, 750, 755, 756, 763, 765, 767, 768, 769, 770, 778, 779, 780, 782, 794, 795, 796, 814, 816, 817, 821, 822, 823, 824, 828, 831, 832, 833, 834, 835, 841, 842, 843, 844, 845, 846, 848, 851, 853, 856, 858, 861, 870, 874, 925, 926, 929, 955, 956, 957, 958, 959, 961, 962, 963, 966, 967, 968, 971, 972, 973, 974, 985, 988, 989, 992, 997, 998, 999, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1021, 1024, 1055, 1056, 1057, 1058, 1059, 1063, 1064, 1065, 1068, 1069, 1070, 1073, 1074, 1075, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1093, 1094, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1117, 1118, 1121, 1122, 1125, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1172, 1173], "shift": [18, 54, 55, 79, 80, 99, 100, 119, 122, 227, 229, 231, 397, 453, 456, 463, 466, 971, 1007, 1008, 1009, 1010, 1011], "whole": 18, "multipli": [18, 40, 41, 85, 86, 122, 128, 130, 397, 609, 681, 701], "cursor": 18, "alt": 18, "j": [18, 85, 86, 117, 583, 585, 587, 681, 689, 690, 842, 935, 939, 1117, 1118, 1121], "locat": [18, 118, 124, 126, 128, 133, 1061, 1062], "blog": 18, "debug": [18, 124, 131, 140], "breakpoint": 18, "gutter": 18, "caret": 18, "f8": 18, "f9": 18, "toolbar": 18, "method": [18, 19, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 118, 119, 121, 122, 124, 125, 126, 127, 130, 135, 137, 138, 141, 142, 154, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 208, 209, 213, 214, 221, 222, 224, 227, 228, 229, 231, 243, 244, 251, 252, 253, 255, 256, 258, 261, 263, 269, 271, 273, 274, 282, 283, 284, 286, 292, 293, 294, 296, 304, 307, 310, 313, 321, 324, 369, 370, 371, 373, 388, 389, 390, 391, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 602, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 684, 686, 694, 695, 696, 698, 699, 700, 713, 714, 715, 716, 718, 743, 744, 755, 756, 757, 759, 763, 765, 766, 767, 768, 769, 770, 777, 778, 779, 780, 782, 794, 795, 796, 798, 799, 801, 803, 805, 811, 814, 815, 816, 817, 820, 821, 822, 823, 824, 826, 831, 832, 833, 834, 836, 841, 842, 843, 844, 845, 847, 848, 851, 853, 856, 870, 874, 925, 926, 929, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 972, 973, 974, 976, 985, 988, 989, 992, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1021, 1024, 1037, 1038, 1048, 1049, 1050, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1116, 1117, 1118, 1121, 1122, 1125, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1180, 1191, 1192, 1193], "result": [18, 22, 23, 24, 25, 26, 34, 35, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 119, 121, 122, 124, 125, 126, 130, 131, 132, 134, 140, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 287, 290, 348, 351, 363, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 701, 702, 705, 706, 707, 709, 713, 714, 715, 716, 717, 718, 727, 740, 743, 744, 777, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1037, 1040, 1050, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1090, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "Into": 18, "f7": 18, "smart": 18, "sever": [18, 118, 154, 842, 870, 873], "interest": 18, "consol": [18, 139], "store": [18, 75, 76, 121, 128, 130, 131, 137, 139, 140, 141, 204, 269, 273, 681, 710, 777, 819, 842, 935, 939, 971, 1012, 1192, 1193], "variabl": [18, 22, 25, 26, 27, 28, 30, 31, 32, 33, 44, 45, 56, 57, 75, 76, 89, 90, 101, 102, 119, 120, 121, 124, 128, 131, 132, 134, 135, 140, 141, 142, 154, 681, 691, 729, 730, 731, 732, 733, 734, 736, 760, 777, 783, 785, 787, 788, 790, 792, 794, 795, 796, 797, 798, 799, 801, 803, 805, 807, 809, 812, 815, 819, 821, 840, 842, 915, 918, 1033, 1034, 1035, 1036, 1055, 1056, 1057, 1058, 1059, 1060, 1161, 1172, 1173, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "fragment": 18, "except": [18, 58, 59, 68, 69, 75, 76, 103, 104, 113, 114, 120, 121, 130, 134, 135, 139, 154, 274, 287, 290, 681, 691, 704, 731, 771, 842, 903, 905, 971, 977, 980, 1017, 1020, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "pychram": 18, "depth": [18, 140, 141, 142, 153, 681, 725, 740, 1037, 1049, 1192, 1193], "dummi": 18, "wherein": [18, 124], "evalu": [18, 40, 41, 75, 76, 85, 86, 131, 397, 503, 504, 505, 506, 507, 508, 510, 511, 512, 558, 559, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 588, 590, 592, 610, 611, 612, 613, 614, 620, 621, 622, 624, 640, 641, 642, 643, 644, 660, 663, 1037, 1038, 1047, 1048, 1150, 1151, 1154, 1156, 1159], "failur": [18, 123], "wherebi": [19, 131, 1037, 1049], "broad": 19, "distribut": [19, 52, 53, 58, 59, 75, 76, 97, 98, 103, 104, 124, 133, 154, 821, 837, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1180, 1188, 1192, 1193], "across": [19, 75, 76, 95, 96, 119, 122, 124, 127, 131, 132, 363, 385, 386, 681, 689, 690, 1037, 1043, 1080, 1082], "todo": 19, "commit": [19, 124], "NOT": [19, 397, 588, 591], "static": [19, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 121, 122, 127, 154, 166, 170, 171, 175, 176, 180, 181, 185, 186, 190, 191, 195, 196, 197, 201, 202, 227, 231, 251, 255, 282, 286, 292, 296, 369, 373, 397, 398, 402, 403, 407, 408, 412, 413, 417, 418, 422, 423, 427, 428, 432, 433, 437, 438, 442, 443, 447, 448, 452, 453, 457, 458, 462, 463, 467, 468, 472, 473, 477, 478, 482, 483, 487, 488, 492, 493, 497, 498, 502, 503, 507, 508, 511, 512, 513, 517, 518, 522, 523, 527, 528, 532, 533, 537, 538, 542, 543, 547, 548, 552, 553, 557, 558, 562, 563, 567, 568, 572, 573, 577, 578, 582, 583, 587, 588, 592, 593, 597, 598, 602, 605, 609, 610, 614, 615, 619, 620, 624, 625, 629, 630, 634, 635, 639, 640, 644, 645, 649, 655, 659, 660, 664, 665, 666, 670, 671, 676, 677, 682, 686, 714, 718, 755, 757, 759, 765, 766, 794, 798, 814, 815, 822, 826, 832, 836, 843, 847, 870, 874, 925, 926, 956, 960, 961, 965, 966, 970, 972, 976, 997, 1001, 1002, 1006, 1007, 1011, 1056, 1060, 1063, 1067, 1068, 1072, 1073, 1077, 1091, 1092, 1112, 1116, 1151, 1155, 1156, 1160], "revers": [19, 22, 25, 26, 72, 77, 78, 121, 122, 142, 154, 681, 704, 971, 989, 992], "resourc": 19, "content": [19, 20, 75, 76, 125, 134, 137, 140], "thei": [19, 75, 76, 117, 118, 122, 124, 127, 129, 131, 132, 133, 134, 135, 139, 140, 141, 142, 154, 274, 347, 1033, 1034, 1035, 1061, 1062, 1161, 1202, 1203], "hypothesi": [19, 126], "cover": [19, 121, 122, 124, 127, 129, 136], "lambda": [19, 137, 140, 1196, 1199, 1201], "direct": [19, 125, 141, 142, 153, 1106, 1112, 1115], "bind": [19, 131], "def": [19, 118, 119, 120, 122, 124, 125, 126, 127, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 870, 874, 925, 926, 1161], "special": [19, 22, 25, 26, 72, 77, 78, 118, 119, 121, 122, 130, 165, 196, 200, 397, 398, 401, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 468, 471, 473, 476, 478, 481, 483, 486, 503, 506, 508, 511, 513, 516, 558, 561, 563, 566, 573, 576, 578, 581, 588, 591, 605, 608, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 670, 674, 675, 676, 680, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1138, 1141, 1142, 1145, 1146, 1149], "aforement": 19, "categori": [19, 118, 125, 130, 131, 132, 136, 1161], "parent": [19, 139, 777, 811, 820], "arraywithelementwis": [19, 22, 25, 26, 40, 130], "containerwithmanipul": [19, 72, 77, 78, 99], "hint": [19, 118, 119, 121, 127, 130, 134, 135, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 681, 713, 821, 828, 832, 835, 841, 842, 843, 846, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1055, 1056, 1059, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1150, 1151, 1154], "docstr": [19, 20, 22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 117, 118, 119, 127, 131, 135, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 238, 241, 243, 244, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 282, 283, 284, 286, 292, 293, 294, 295, 296, 310, 313, 321, 324, 369, 370, 371, 373, 388, 389, 390, 391, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 683, 684, 686, 694, 695, 696, 698, 714, 715, 716, 718, 755, 756, 757, 759, 765, 766, 767, 768, 778, 779, 780, 782, 794, 795, 796, 798, 814, 815, 816, 817, 822, 823, 824, 826, 832, 833, 834, 836, 842, 843, 844, 845, 847, 853, 856, 858, 861, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 972, 973, 974, 976, 985, 988, 989, 992, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1116, 1117, 1122, 1125, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160], "thorough": [19, 119, 121, 124], "transpil": [19, 125, 136, 138, 1161, 1167], "verifi": [19, 120, 124, 132, 133, 139, 1161, 1167], "builder": [20, 152, 154, 1161], "maco": 20, "ubuntu": 20, "uid": 20, "make_docs_without_dock": 20, "rel": [20, 54, 55, 79, 80, 99, 100, 126, 227, 229, 231, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 842, 858, 861, 888, 891, 903, 905, 935, 939, 971, 989, 992, 1007, 1008, 1009, 1010, 1011, 1106, 1107, 1110, 1112, 1115, 1161], "synchron": 20, "rest": [20, 138, 142], "remove_doc": 20, "_": [20, 40, 41, 85, 86, 121, 124, 131, 134, 139, 140, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 509, 510, 511, 513, 516, 538, 541, 603, 604, 615, 618, 645, 648, 655, 658, 660, 663, 777, 778, 781, 783, 785, 842, 858, 861, 925, 929, 950, 954, 971, 985, 988, 1007, 1010, 1085, 1086, 1090, 1106, 1107, 1110, 1117, 1122, 1125], "indic": [20, 42, 43, 48, 49, 54, 55, 56, 57, 75, 76, 87, 88, 93, 94, 99, 100, 101, 102, 125, 135, 138, 142, 165, 186, 189, 204, 208, 210, 397, 640, 643, 681, 713, 714, 715, 716, 717, 718, 727, 740, 743, 744, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 842, 945, 949, 971, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1037, 1038, 1040, 1042, 1044, 1045, 1046, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1080, 1081, 1082, 1083, 1085, 1086, 1090, 1096, 1100, 1106, 1107, 1110, 1112, 1115, 1161, 1164, 1166, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1192, 1193], "privat": [20, 124, 1196, 1200], "fulfil": [20, 136, 1161], "autogenerated_sourc": 20, "format": [20, 75, 76, 117, 121, 132, 133, 137, 139, 140, 274, 304, 307, 363, 369, 372, 1117, 1118, 1121, 1161], "png": [20, 140], "_imag": 20, "lastli": 20, "rst": 20, "skip": [20, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 124, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 251, 253, 255, 282, 284, 286, 292, 294, 296, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 794, 796, 798, 814, 815, 817, 843, 845, 847, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 1002, 1004, 1006, 1007, 1009, 1011, 1037, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1151, 1153, 1155, 1156, 1158, 1160], "read": [20, 75, 76, 1161], "partial_sourc": 20, "conf": 20, "create_rst_fil": 20, "filter": [20, 48, 49, 93, 94, 124, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "repres": [20, 23, 24, 40, 41, 73, 74, 85, 86, 124, 139, 165, 196, 197, 198, 199, 200, 204, 238, 241, 274, 309, 397, 408, 409, 410, 411, 412, 413, 416, 423, 424, 425, 426, 427, 438, 439, 440, 441, 442, 483, 484, 485, 486, 487, 605, 608, 650, 651, 652, 653, 654, 675, 777, 811, 820, 821, 838, 842, 911, 913, 915, 918], "overal": [20, 121, 131, 132, 133, 142], "markup": 20, "6": [20, 22, 25, 26, 34, 35, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 58, 59, 64, 65, 72, 77, 78, 79, 80, 85, 86, 87, 88, 93, 94, 97, 98, 101, 102, 103, 104, 109, 110, 122, 124, 128, 131, 139, 140, 141, 165, 171, 174, 176, 179, 186, 189, 196, 200, 204, 227, 228, 229, 230, 231, 269, 273, 274, 282, 285, 304, 307, 310, 313, 363, 381, 397, 398, 399, 400, 401, 402, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 426, 428, 430, 431, 432, 433, 435, 436, 437, 443, 446, 448, 451, 458, 459, 460, 461, 462, 468, 471, 473, 474, 475, 476, 478, 480, 481, 482, 483, 486, 488, 490, 491, 492, 493, 494, 495, 496, 508, 510, 513, 516, 518, 520, 521, 522, 523, 525, 526, 527, 528, 531, 538, 541, 548, 550, 551, 552, 553, 556, 588, 591, 603, 604, 610, 613, 630, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 655, 658, 660, 663, 670, 674, 675, 681, 690, 694, 697, 701, 713, 714, 717, 718, 736, 755, 756, 757, 758, 759, 763, 777, 778, 779, 781, 821, 822, 823, 824, 825, 826, 828, 831, 832, 835, 841, 842, 848, 851, 853, 856, 858, 861, 898, 901, 920, 924, 925, 929, 930, 934, 955, 956, 958, 959, 960, 961, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 977, 980, 985, 988, 989, 992, 997, 1000, 1007, 1010, 1012, 1013, 1016, 1021, 1024, 1037, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1084, 1085, 1086, 1090, 1091, 1095, 1106, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1134, 1137], "extract": [20, 118, 120], "get_functions_and_class": 20, "doctr": 20, "readm": [20, 154], "module_nam": 20, "copy_readme_to_rst": 20, "tabl": 20, "toc": 20, "tree": 20, "append": [20, 75, 76, 124, 137, 140, 397, 453, 456, 842, 858, 861, 875, 878], "append_toctree_to_rst": 20, "9": [20, 22, 25, 26, 40, 41, 42, 43, 44, 45, 48, 49, 54, 55, 58, 59, 72, 77, 78, 85, 86, 87, 88, 89, 90, 93, 94, 103, 104, 109, 110, 122, 124, 140, 141, 274, 303, 310, 313, 321, 324, 397, 403, 404, 413, 414, 415, 416, 417, 423, 426, 438, 439, 440, 442, 443, 446, 448, 451, 488, 489, 490, 491, 492, 493, 494, 495, 496, 518, 520, 521, 522, 588, 591, 603, 604, 635, 637, 638, 639, 640, 643, 655, 658, 660, 663, 681, 694, 697, 713, 736, 755, 756, 757, 758, 759, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 794, 797, 799, 800, 801, 802, 821, 822, 823, 824, 825, 826, 828, 831, 832, 835, 842, 848, 851, 853, 856, 858, 861, 898, 901, 920, 924, 925, 929, 930, 934, 971, 972, 973, 975, 989, 992, 1007, 1010, 1012, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1084, 1085, 1086, 1090, 1106, 1112, 1114, 1115, 1116, 1117, 1118, 1121, 1196, 1197, 1198], "index": [20, 34, 35, 42, 43, 62, 63, 75, 76, 79, 80, 87, 88, 107, 108, 127, 131, 139, 203, 204, 218, 219, 238, 239, 240, 241, 242, 363, 384, 681, 687, 713, 714, 715, 716, 717, 718, 971, 1017, 1020, 1037, 1040, 1041, 1044, 1045, 1046, 1051, 1053, 1080, 1081, 1082, 1083, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1110, 1164, 1166], "create_index_rst": 20, "14": [20, 40, 41, 58, 59, 85, 86, 101, 102, 103, 104, 122, 124, 131, 274, 310, 313, 321, 324, 397, 403, 405, 406, 407, 423, 426, 433, 434, 435, 436, 437, 468, 471, 640, 644, 650, 652, 654, 777, 778, 781, 821, 822, 825, 841, 842, 858, 861, 898, 901, 1056, 1058, 1060, 1063, 1064, 1067, 1068, 1069, 1070, 1073, 1074, 1075, 1085, 1086, 1090, 1117, 1118, 1121], "\u03c0": [20, 203, 397, 403, 406, 418, 421, 428, 431, 433, 436], "namespac": [20, 118, 132, 137, 142], "arraywithactiv": [22, 23, 25, 26], "arraywithcr": [22, 25, 26, 34], "arraywithdatatyp": [22, 25, 26, 36], "arraywithdevic": [22, 25, 26, 38, 139], "arraywithgener": [22, 25, 26, 42, 139], "arraywithgradi": [22, 25, 26, 44, 139], "arraywithimag": [22, 25, 26, 46, 139], "arraywithlay": [22, 25, 26, 48], "arraywithlinearalgebra": [22, 25, 26, 50], "arraywithloss": [22, 25, 26, 52], "arraywithmanipul": [22, 25, 26, 54], "arraywithnorm": [22, 25, 26, 56], "arraywithrandom": [22, 25, 26, 58, 139], "arraywithsearch": [22, 25, 26, 60], "arraywithset": [22, 25, 26, 62], "arraywithsort": [22, 25, 26, 64], "arraywithstatist": [22, 25, 26, 66], "arraywithutil": [22, 25, 26, 68], "properti": [22, 25, 26, 75, 76, 122, 124, 126, 127, 131, 139, 140, 141, 1192, 1193, 1196, 1197, 1198, 1199, 1201], "__add__": [22, 25, 26, 72, 77, 78, 119, 121, 122, 130, 131, 139], "variant": [22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 121, 122, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 253, 255, 256, 258, 261, 263, 269, 271, 282, 283, 284, 286, 292, 293, 294, 296, 369, 370, 371, 373, 388, 389, 390, 391, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 676, 677, 678, 679, 682, 683, 684, 686, 694, 695, 696, 698, 714, 715, 716, 718, 755, 756, 757, 759, 765, 766, 767, 768, 778, 779, 780, 782, 794, 795, 796, 798, 814, 815, 816, 817, 822, 823, 824, 826, 832, 833, 834, 836, 843, 844, 845, 847, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 972, 973, 974, 976, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1091, 1092, 1093, 1094, 1112, 1113, 1114, 1116, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160], "wrap": [22, 23, 24, 25, 26, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 116, 117, 119, 121, 124, 127, 128, 130, 131, 132, 133, 134, 137, 139, 142, 154, 155, 163, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 253, 255, 256, 258, 261, 263, 269, 271, 282, 283, 284, 286, 292, 293, 294, 296, 369, 370, 371, 373, 388, 389, 390, 391, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 676, 677, 678, 679, 681, 682, 683, 684, 686, 692, 694, 695, 696, 698, 714, 715, 716, 718, 755, 756, 757, 759, 765, 766, 767, 768, 777, 778, 779, 780, 782, 794, 795, 796, 798, 814, 815, 816, 817, 819, 822, 823, 824, 826, 832, 833, 834, 836, 843, 844, 845, 847, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 972, 973, 974, 976, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1091, 1092, 1093, 1094, 1112, 1113, 1114, 1116, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160], "minim": [22, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 68, 69, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 121, 134, 137, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 213, 214, 221, 222, 227, 228, 229, 231, 243, 244, 251, 252, 253, 255, 256, 258, 261, 263, 269, 271, 282, 283, 284, 286, 292, 293, 294, 296, 369, 370, 371, 373, 388, 389, 390, 391, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 605, 606, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 625, 626, 627, 629, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 676, 677, 678, 679, 682, 683, 684, 686, 694, 695, 696, 698, 714, 715, 716, 718, 755, 756, 757, 759, 765, 766, 767, 768, 778, 779, 780, 782, 794, 795, 796, 798, 814, 815, 816, 817, 822, 823, 824, 826, 832, 833, 834, 836, 843, 844, 845, 847, 956, 957, 958, 960, 961, 962, 963, 965, 966, 967, 968, 970, 972, 973, 974, 976, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1056, 1057, 1058, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1091, 1092, 1093, 1094, 1112, 1113, 1114, 1116, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160], "self": [22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 130, 131, 137, 139, 140, 141, 142, 166, 167, 168, 171, 172, 173, 176, 177, 178, 181, 182, 183, 186, 187, 188, 191, 192, 193, 196, 198, 199, 208, 209, 213, 214, 215, 221, 222, 223, 227, 228, 229, 231, 238, 239, 240, 243, 244, 245, 251, 252, 253, 255, 256, 258, 259, 261, 263, 264, 269, 271, 272, 277, 278, 279, 282, 283, 284, 287, 288, 289, 292, 293, 294, 304, 305, 306, 310, 311, 312, 321, 322, 323, 327, 328, 329, 332, 333, 334, 337, 338, 339, 342, 343, 344, 348, 349, 350, 363, 369, 370, 371, 388, 390, 391, 398, 399, 400, 403, 404, 405, 408, 409, 410, 413, 414, 415, 418, 419, 420, 423, 424, 425, 428, 429, 430, 433, 434, 435, 438, 439, 440, 443, 444, 445, 448, 449, 450, 453, 454, 455, 458, 459, 460, 463, 464, 465, 468, 469, 470, 473, 474, 475, 478, 479, 480, 483, 484, 485, 488, 489, 490, 493, 494, 495, 498, 499, 500, 503, 504, 505, 508, 509, 510, 513, 514, 515, 518, 519, 520, 523, 524, 525, 528, 529, 530, 533, 534, 535, 538, 539, 540, 543, 544, 545, 548, 549, 550, 553, 554, 555, 558, 559, 560, 563, 564, 565, 568, 569, 570, 573, 574, 575, 578, 579, 580, 583, 584, 585, 588, 589, 590, 593, 594, 595, 598, 599, 600, 605, 606, 607, 610, 611, 612, 615, 616, 617, 620, 621, 622, 625, 626, 627, 630, 631, 632, 635, 636, 637, 640, 641, 642, 645, 646, 647, 650, 651, 652, 655, 656, 657, 660, 661, 662, 665, 667, 668, 670, 672, 673, 676, 678, 679, 682, 683, 684, 694, 695, 696, 714, 715, 716, 755, 756, 757, 765, 766, 767, 768, 778, 779, 780, 783, 784, 790, 791, 794, 795, 796, 799, 800, 803, 804, 807, 808, 814, 816, 817, 822, 823, 824, 832, 833, 834, 843, 844, 845, 847, 848, 849, 850, 853, 854, 855, 858, 859, 860, 863, 864, 865, 867, 868, 870, 871, 872, 875, 876, 877, 879, 880, 881, 884, 885, 888, 889, 890, 893, 894, 895, 898, 899, 900, 903, 904, 906, 907, 908, 911, 912, 915, 916, 917, 920, 922, 923, 925, 927, 928, 930, 932, 933, 935, 937, 938, 940, 942, 943, 945, 947, 948, 950, 952, 953, 956, 957, 958, 961, 962, 963, 966, 967, 968, 972, 973, 974, 977, 978, 979, 981, 982, 983, 985, 986, 987, 989, 990, 991, 993, 994, 995, 997, 998, 999, 1002, 1003, 1004, 1007, 1008, 1009, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1056, 1057, 1058, 1063, 1064, 1065, 1068, 1069, 1070, 1073, 1074, 1075, 1086, 1088, 1089, 1091, 1093, 1094, 1096, 1098, 1099, 1101, 1103, 1104, 1107, 1108, 1109, 1112, 1113, 1114, 1118, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1196, 1200], "input": [22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 154, 155, 163, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 309, 310, 313, 321, 324, 327, 330, 332, 335, 337, 340, 342, 345, 347, 348, 351, 353, 357, 362, 363, 368, 369, 372, 381, 387, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 717, 718, 723, 724, 726, 727, 729, 730, 731, 733, 734, 735, 736, 740, 743, 744, 745, 748, 752, 755, 756, 758, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 787, 788, 794, 795, 796, 797, 798, 812, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1040, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1194, 1195], "numer": [22, 25, 26, 40, 41, 58, 59, 72, 77, 78, 85, 86, 87, 88, 103, 104, 118, 126, 141, 204, 238, 241, 274, 277, 280, 397, 398, 399, 400, 401, 402, 413, 414, 415, 416, 417, 473, 474, 475, 476, 477, 488, 491, 508, 511, 513, 514, 515, 516, 517, 518, 521, 533, 536, 538, 541, 543, 546, 548, 551, 588, 591, 593, 596, 605, 608, 610, 611, 612, 613, 614, 615, 618, 620, 621, 622, 624, 625, 628, 630, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 660, 663, 665, 666, 668, 669, 676, 680, 681, 721, 722, 746, 747, 754, 755, 757, 758, 759, 842, 848, 851, 875, 878, 898, 901, 920, 924, 930, 934, 935, 939, 940, 944, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1117, 1122, 1125, 1134, 1137, 1142, 1145, 1174], "broadcast": [22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 121, 122, 124, 131, 132, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 263, 265, 266, 268, 269, 271, 273, 274, 277, 280, 282, 283, 284, 285, 286, 287, 290, 363, 388, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 693, 694, 695, 696, 697, 698, 701, 705, 706, 707, 709, 714, 715, 716, 717, 718, 727, 740, 743, 744, 777, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1084, 1085, 1101, 1105, 1106, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "element": [22, 23, 24, 25, 26, 34, 35, 40, 41, 42, 43, 54, 55, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 99, 100, 107, 108, 121, 124, 126, 137, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 226, 227, 228, 229, 230, 231, 256, 258, 260, 261, 263, 265, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 689, 690, 693, 694, 697, 701, 702, 709, 727, 755, 756, 757, 759, 765, 766, 767, 768, 769, 770, 777, 811, 820, 821, 837, 842, 848, 851, 863, 866, 875, 878, 906, 909, 920, 924, 971, 972, 973, 974, 975, 976, 989, 992, 997, 1000, 1002, 1003, 1004, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1037, 1040, 1061, 1062, 1080, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1154, 1156, 1159, 1180, 1188], "wise": [22, 25, 26, 40, 41, 72, 73, 74, 75, 76, 77, 78, 85, 86, 137, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 397, 398, 401, 403, 406, 413, 414, 415, 416, 417, 418, 421, 428, 431, 433, 436, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 615, 616, 617, 618, 619, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 665, 666, 667, 668, 669, 681, 709, 971, 972, 975, 1196, 1199], "sum": [22, 25, 26, 40, 41, 66, 67, 72, 75, 76, 77, 78, 85, 86, 111, 112, 127, 131, 132, 134, 137, 363, 387, 397, 413, 414, 415, 416, 417, 578, 581, 665, 666, 668, 681, 702, 706, 743, 744, 821, 841, 842, 920, 924, 935, 939, 945, 949, 1117, 1118, 1121, 1138, 1141], "promot": [22, 23, 24, 25, 26, 36, 37, 40, 41, 50, 51, 72, 73, 74, 77, 78, 81, 82, 85, 86, 95, 96, 121, 127, 132, 165, 196, 197, 198, 199, 200, 274, 277, 280, 292, 293, 294, 295, 296, 347, 348, 351, 357, 397, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 503, 504, 505, 506, 507, 508, 510, 511, 512, 518, 519, 520, 522, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 598, 601, 605, 606, 607, 608, 609, 625, 626, 627, 628, 629, 630, 631, 633, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 842, 843, 844, 845, 846, 847, 848, 851, 870, 873, 875, 878, 888, 891, 898, 901, 903, 905, 915, 918, 940, 944, 945, 949, 971, 1017, 1020, 1117, 1126, 1129], "y": [22, 23, 24, 25, 26, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 109, 110, 113, 114, 118, 122, 125, 128, 131, 137, 139, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 226, 227, 228, 229, 230, 231, 238, 241, 248, 249, 251, 254, 269, 273, 274, 277, 280, 282, 283, 284, 285, 286, 304, 307, 310, 313, 321, 324, 363, 369, 372, 377, 381, 386, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 448, 451, 458, 459, 460, 461, 462, 463, 466, 468, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 503, 506, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 548, 549, 550, 551, 552, 553, 556, 583, 584, 585, 586, 587, 588, 591, 603, 604, 610, 613, 615, 618, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 663, 670, 671, 672, 673, 674, 675, 681, 682, 683, 684, 685, 686, 689, 690, 694, 695, 696, 697, 698, 700, 701, 708, 709, 713, 714, 715, 716, 717, 718, 752, 755, 756, 757, 758, 759, 763, 765, 766, 767, 768, 769, 770, 777, 787, 788, 814, 815, 816, 817, 818, 821, 831, 832, 833, 834, 835, 836, 838, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 870, 873, 898, 901, 925, 929, 930, 934, 935, 939, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 985, 988, 989, 992, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1021, 1024, 1037, 1040, 1053, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1091, 1092, 1093, 1094, 1095, 1106, 1107, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1125, 1138, 1141, 1142, 1145, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160], "z": [22, 25, 26, 40, 41, 42, 43, 52, 53, 58, 59, 72, 77, 78, 85, 86, 87, 88, 97, 98, 103, 104, 122, 128, 131, 137, 139, 363, 377, 397, 413, 414, 415, 416, 417, 433, 434, 435, 436, 437, 443, 446, 458, 459, 460, 461, 462, 468, 471, 523, 525, 526, 527, 528, 531, 538, 541, 548, 550, 551, 552, 553, 556, 583, 584, 585, 587, 603, 604, 681, 689, 690, 713, 714, 715, 716, 718, 752, 755, 756, 757, 758, 759, 842, 848, 851, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 970, 971, 972, 975, 1037, 1040, 1053, 1061, 1063, 1064, 1065, 1068, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1080, 1081, 1117, 1118, 1121, 1122, 1125, 1134, 1137], "mix": [22, 25, 26, 36, 37, 40, 41, 42, 43, 72, 77, 78, 81, 82, 85, 86, 97, 98, 103, 104, 117, 122, 124, 137, 274, 282, 283, 284, 285, 286, 348, 351, 363, 381, 397, 413, 416, 443, 446, 458, 461, 468, 471, 488, 489, 491, 493, 494, 495, 496, 518, 519, 520, 521, 522, 523, 526, 528, 531, 548, 551, 553, 556, 615, 618, 630, 631, 632, 633, 634, 681, 682, 683, 700, 708, 713, 714, 717, 763, 765, 769, 770, 821, 822, 825, 828, 831, 832, 835, 841, 842, 843, 846, 930, 934, 955, 956, 959, 960, 961, 965, 966, 969, 970, 971, 972, 975, 1055, 1056, 1059, 1063, 1067, 1068, 1072, 1073, 1077, 1080, 1084, 1106, 1112, 1115, 1117, 1118, 1121, 1126, 1129], "__le__": [22, 25, 26], "equal": [22, 25, 26, 34, 35, 40, 41, 42, 43, 58, 59, 75, 76, 85, 86, 87, 88, 103, 104, 122, 131, 132, 204, 218, 219, 226, 227, 228, 230, 274, 277, 280, 397, 453, 456, 463, 466, 497, 533, 536, 538, 541, 625, 628, 635, 638, 681, 682, 683, 684, 685, 686, 689, 690, 842, 858, 861, 888, 891, 903, 905, 971, 972, 975, 981, 984, 1012, 1029, 1032, 1061, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1126, 1129, 1138, 1141, 1142, 1145, 1146, 1149], "bool": [22, 25, 26, 28, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 115, 116, 120, 122, 131, 132, 134, 135, 142, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 208, 210, 226, 227, 229, 231, 251, 253, 255, 274, 277, 280, 282, 284, 286, 292, 293, 294, 295, 296, 298, 299, 300, 302, 303, 304, 307, 326, 327, 328, 330, 332, 333, 335, 337, 338, 340, 342, 343, 345, 353, 362, 363, 368, 369, 372, 378, 379, 382, 383, 387, 394, 396, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 455, 457, 458, 460, 461, 462, 463, 465, 467, 468, 470, 471, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 605, 607, 609, 610, 612, 614, 615, 616, 617, 618, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 683, 684, 685, 686, 689, 690, 694, 696, 698, 701, 704, 708, 710, 714, 716, 718, 720, 723, 724, 726, 731, 733, 734, 735, 736, 752, 753, 755, 757, 759, 765, 766, 768, 775, 776, 777, 794, 795, 796, 797, 798, 811, 812, 814, 815, 817, 820, 842, 843, 844, 845, 846, 847, 879, 882, 920, 924, 945, 949, 956, 958, 960, 961, 963, 965, 966, 968, 970, 971, 972, 974, 976, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1043, 1047, 1048, 1049, 1056, 1058, 1061, 1062, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1080, 1081, 1082, 1091, 1092, 1094, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1196, 1197, 1198, 1199, 1200, 1201], "true": [22, 23, 24, 25, 26, 36, 37, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 122, 124, 125, 126, 127, 131, 132, 134, 135, 137, 139, 140, 141, 142, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 233, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 274, 277, 278, 279, 280, 281, 282, 284, 286, 287, 289, 291, 292, 293, 294, 295, 296, 299, 301, 304, 306, 308, 310, 312, 314, 315, 317, 318, 320, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 337, 339, 340, 341, 342, 344, 345, 346, 348, 350, 352, 362, 363, 368, 379, 383, 384, 397, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 446, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 471, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 595, 596, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 618, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 683, 684, 685, 686, 689, 690, 691, 692, 694, 696, 698, 701, 708, 710, 714, 716, 718, 720, 723, 726, 727, 734, 736, 745, 748, 750, 752, 753, 755, 757, 759, 763, 765, 766, 768, 770, 772, 773, 774, 776, 777, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 817, 820, 821, 837, 842, 843, 844, 845, 846, 847, 848, 850, 852, 853, 855, 857, 858, 860, 862, 863, 865, 870, 872, 875, 877, 879, 881, 882, 883, 884, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 906, 908, 910, 911, 912, 914, 915, 917, 919, 920, 921, 922, 923, 924, 925, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 945, 946, 948, 949, 950, 951, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 976, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1011, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1047, 1048, 1050, 1056, 1058, 1060, 1061, 1062, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1124, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1141, 1142, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201], "__radd__": [22, 25, 26, 72, 77, 78, 121, 122], "adam_upd": [22, 25, 26, 89, 90, 141, 777], "invok": [22, 25, 26], "function_nam": [22, 25, 26], "arang": [22, 25, 26, 72, 77, 78, 132, 204, 232, 233, 235, 236, 1117, 1118, 1121, 1161], "arg_info": [22, 25, 26, 72, 77, 78, 681], "arg_nam": [22, 25, 26, 72, 77, 78, 681], "argmax": [22, 25, 26, 72, 77, 78, 1080, 1161], "argmin": [22, 25, 26, 72, 77, 78, 1080, 1161], "array_equ": [22, 25, 26, 72, 77, 78, 681], "arrays_equ": [22, 25, 26, 72, 75, 76, 77, 78, 681], "as_ivy_dev": [22, 25, 26, 72, 77, 78, 139, 363], "as_ivy_dtyp": [22, 25, 26, 72, 77, 78, 125, 274], "as_native_dev": [22, 25, 26, 72, 77, 78, 363], "as_native_dtyp": [22, 25, 26, 72, 77, 78, 274], "assert_supports_inplac": [22, 25, 26, 72, 77, 78, 681], "cache_fn": [22, 25, 26, 72, 77, 78, 127, 681], "clear_mem_on_dev": [22, 25, 26, 72, 77, 78, 363], "clip_matrix_norm": [22, 25, 26, 72, 77, 78, 681], "closest_valid_dtyp": [22, 25, 26, 72, 77, 78, 274], "container_typ": [22, 25, 26, 72, 77, 78, 681], "conv1d_transpos": [22, 25, 26, 72, 77, 78, 821], "conv2d": [22, 25, 26, 72, 77, 78, 821, 1161, 1180], "conv2d_transpos": [22, 25, 26, 72, 77, 78, 821], "conv3d": [22, 25, 26, 72, 77, 78, 821, 1180], "conv3d_transpos": [22, 25, 26, 72, 77, 78, 821], "copy_arrai": [22, 25, 26, 72, 77, 78, 681], "cumprod": [22, 25, 26, 72, 77, 78, 142, 681], "cumsum": [22, 25, 26, 72, 77, 78, 681, 1161], "current_backend_str": [22, 25, 26, 72, 77, 78, 120, 681], "default_devic": [22, 25, 26, 72, 77, 78, 133, 137, 363, 381, 384, 385, 395], "default_dtyp": [22, 25, 26, 72, 77, 78, 127, 132, 274], "default_float_dtyp": [22, 25, 26, 72, 77, 78, 132, 274], "default_int_dtyp": [22, 25, 26, 72, 77, 78, 132, 274], "default_uint_dtyp": [22, 25, 26, 72, 77, 78, 274, 356, 361], "dev_util": [22, 25, 26, 72, 77, 78, 133, 363], "dropout": [22, 25, 26, 72, 77, 78, 140, 821, 1180, 1191], "dtype": [22, 25, 26, 34, 35, 36, 37, 58, 59, 66, 67, 75, 76, 79, 80, 81, 82, 87, 88, 103, 104, 111, 112, 118, 120, 122, 124, 125, 126, 127, 132, 133, 135, 139, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 309, 310, 313, 315, 316, 318, 319, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 347, 348, 349, 351, 353, 354, 355, 356, 361, 362, 363, 383, 397, 463, 466, 681, 689, 690, 711, 712, 740, 765, 766, 768, 769, 821, 837, 971, 985, 988, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1106, 1112, 1115, 1117, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1150, 1151, 1154, 1161, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1202, 1203], "dtype_bit": [22, 25, 26, 72, 77, 78, 274], "einops_rearrang": [22, 25, 26, 75, 76, 681], "einops_reduc": [22, 25, 26, 75, 76, 681], "einops_repeat": [22, 25, 26, 75, 76, 681], "empti": [22, 25, 26, 72, 75, 76, 77, 78, 130, 132, 133, 204, 205, 206, 777, 811, 820, 1117, 1138, 1141, 1142, 1145, 1150, 1151, 1154, 1156, 1159], "execute_with_gradi": [22, 25, 26, 72, 77, 78, 131, 140, 141, 142, 154, 777, 1161], "ey": [22, 25, 26, 72, 77, 78, 142, 204, 821, 828, 832, 835], "floormod": [22, 25, 26, 72, 77, 78, 681, 1161], "fourier_encod": [22, 25, 26, 72, 77, 78, 681], "function_supported_devic": [22, 25, 26, 72, 77, 78, 363], "function_supported_devices_and_dtyp": [22, 25, 26, 72, 77, 78, 681], "function_supported_dtyp": [22, 25, 26, 72, 77, 78, 120, 274], "function_unsupported_devic": [22, 25, 26, 72, 77, 78, 363], "function_unsupported_devices_and_dtyp": [22, 25, 26, 72, 77, 78, 681], "function_unsupported_dtyp": [22, 25, 26, 72, 77, 78, 120, 274], "gather": [22, 25, 26, 42, 43, 75, 76, 87, 88, 681, 714, 715, 716, 717, 718], "get_all_arrays_in_memori": [22, 25, 26, 72, 77, 78, 681], "get_all_ivy_arrays_on_dev": [22, 25, 26, 72, 77, 78, 133, 363], "get_array_mod": [22, 25, 26, 72, 77, 78, 681, 745, 772], "get_min_bas": [22, 25, 26, 72, 77, 78, 681], "get_min_denomin": [22, 25, 26, 72, 77, 78, 681], "get_nestable_mod": [22, 25, 26, 72, 77, 78, 681, 748, 773], "get_num_dim": [22, 25, 26, 72, 77, 78, 681, 1161], "get_referrers_recurs": [22, 25, 26, 72, 77, 78, 681], "gpu_is_avail": [22, 25, 26, 72, 77, 78, 363], "gradient_descent_upd": [22, 25, 26, 89, 90, 777, 1033, 1034, 1035, 1036, 1161], "handle_nest": [22, 25, 26, 72, 77, 78, 127, 131, 155], "handle_out_argu": [22, 25, 26, 72, 77, 78, 119, 129, 132, 133, 134, 155], "has_nan": [22, 25, 26, 75, 76, 681], "indices_wher": [22, 25, 26, 72, 77, 78, 135, 681, 1161], "infer_devic": [22, 25, 26, 72, 77, 78, 119, 132, 133, 155], "infer_dtyp": [22, 25, 26, 72, 77, 78, 119, 132, 133, 155], "inplace_arrays_support": [22, 25, 26, 72, 77, 78, 681], "inplace_decr": [22, 25, 26, 72, 77, 78, 681], "inplace_incr": [22, 25, 26, 72, 77, 78, 681], "inplace_upd": [22, 25, 26, 75, 76, 134, 681, 1172, 1173], "inplace_variables_support": [22, 25, 26, 72, 77, 78, 681], "inputs_to_native_arrai": [22, 25, 26, 72, 77, 78, 130, 155], "invalid_dtyp": [22, 25, 26, 72, 77, 78, 120, 132, 274], "is_arrai": [22, 25, 26, 125, 681], "is_ivy_arrai": [22, 25, 26, 134, 139, 681], "is_ivy_contain": [22, 25, 26, 72, 77, 78, 681], "is_native_arrai": [22, 25, 26, 139, 681], "is_vari": [22, 25, 26, 44, 45, 89, 90, 134, 777, 798], "boolean": [22, 25, 26, 40, 41, 42, 43, 44, 45, 54, 55, 75, 76, 85, 86, 87, 88, 89, 90, 99, 100, 124, 126, 131, 204, 208, 210, 226, 274, 277, 280, 326, 362, 363, 378, 394, 397, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 681, 682, 683, 684, 685, 686, 689, 690, 726, 727, 728, 732, 733, 734, 735, 736, 745, 748, 750, 760, 776, 777, 794, 795, 796, 797, 798, 811, 820, 971, 1002, 1003, 1004, 1005, 1006, 1033, 1034, 1035, 1037, 1047, 1117, 1130, 1133], "trainabl": [22, 25, 26, 44, 45, 89, 90, 121, 138, 140, 141, 777, 794, 795, 796, 797, 798, 1172, 1173, 1192, 1193, 1202], "lamb_upd": [22, 25, 26, 89, 90, 777], "lars_upd": [22, 25, 26, 89, 90, 777], "linear": [22, 25, 26, 72, 73, 74, 77, 78, 121, 137, 140, 141, 142, 165, 166, 169, 171, 174, 176, 178, 179, 180, 681, 710, 821, 837, 915, 918, 1161, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "linspac": [22, 25, 26, 72, 77, 78, 137, 204, 205, 206, 1161], "logspac": [22, 25, 26, 72, 77, 78, 137, 204], "lstm_updat": [22, 25, 26, 72, 77, 78, 137, 821], "mt": [22, 25, 26, 139], "match_kwarg": [22, 25, 26, 72, 77, 78, 681], "matrix_pow": [22, 25, 26, 95, 96, 842], "maximum": [22, 25, 26, 42, 43, 54, 55, 72, 75, 76, 77, 78, 87, 88, 99, 100, 122, 137, 140, 142, 363, 387, 397, 681, 693, 694, 695, 696, 697, 698, 710, 777, 799, 801, 971, 972, 973, 974, 975, 976, 1037, 1049, 1080, 1081, 1117, 1122, 1125, 1130, 1133, 1161], "minimum": [22, 25, 26, 42, 43, 54, 55, 75, 76, 87, 88, 99, 100, 137, 142, 397, 398, 401, 681, 721, 722, 746, 747, 754, 755, 756, 757, 758, 759, 971, 972, 973, 974, 975, 976, 1080, 1082, 1117, 1122, 1125, 1130, 1133, 1161], "multi_head_attent": [22, 25, 26, 72, 77, 78, 131, 134, 821], "multinomi": [22, 25, 26, 72, 77, 78, 1061], "multiprocess": [22, 25, 26, 72, 75, 76, 77, 78, 140, 154, 681], "ndim": [22, 25, 26, 124, 139, 842, 906, 909, 920, 924], "dimens": [22, 25, 26, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 68, 69, 72, 75, 76, 77, 78, 93, 94, 95, 96, 97, 98, 99, 100, 107, 108, 113, 114, 122, 124, 125, 126, 137, 140, 165, 186, 189, 204, 256, 258, 260, 261, 263, 265, 681, 705, 706, 707, 710, 724, 740, 775, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 839, 842, 843, 844, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 903, 905, 906, 909, 915, 918, 920, 924, 925, 929, 935, 939, 940, 944, 945, 949, 955, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 977, 980, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1033, 1034, 1035, 1036, 1061, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1190, 1191], "ax": [22, 25, 26, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 95, 96, 99, 100, 113, 114, 118, 122, 124, 132, 139, 186, 188, 190, 363, 387, 681, 701, 842, 879, 882, 915, 918, 930, 931, 932, 933, 934, 945, 949, 971, 981, 984, 989, 992, 993, 994, 995, 996, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1021, 1024, 1029, 1032, 1080, 1081, 1082, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "nonzero": [22, 25, 26, 72, 77, 78, 397, 413, 416, 605, 608, 1080], "num_arrays_in_memori": [22, 25, 26, 72, 77, 78, 681], "num_cpu_cor": [22, 25, 26, 72, 77, 78, 133, 363], "num_gpu": [22, 25, 26, 72, 77, 78, 124, 133, 363], "num_ivy_arrays_on_dev": [22, 25, 26, 72, 77, 78, 363], "one_hot": [22, 25, 26, 72, 77, 78, 142, 681, 1161], "ones": [22, 25, 26, 34, 35, 58, 59, 72, 75, 76, 77, 78, 79, 80, 103, 104, 124, 137, 139, 140, 204, 218, 219, 227, 228, 230, 251, 252, 253, 254, 255, 269, 273, 397, 473, 476, 681, 740, 1063, 1064, 1065, 1068, 1069, 1070, 1073, 1074, 1075, 1161], "optimizer_upd": [22, 25, 26, 89, 90, 777], "outputs_to_ivy_arrai": [22, 25, 26, 72, 77, 78, 119, 130, 132, 133, 155], "percent_used_mem_on_dev": [22, 25, 26, 72, 77, 78, 363], "print_all_arrays_in_memori": [22, 25, 26, 72, 77, 78, 681], "print_all_ivy_arrays_on_dev": [22, 25, 26, 72, 77, 78, 363], "promote_typ": [22, 25, 26, 72, 77, 78, 274], "queue_timeout": [22, 25, 26, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 681], "scaled_dot_product_attent": [22, 25, 26, 72, 77, 78, 821], "scatter_flat": [22, 25, 26, 72, 77, 78, 681], "scatter_nd": [22, 25, 26, 72, 77, 78, 139, 681, 1161], "seed": [22, 25, 26, 72, 75, 76, 77, 78, 1061, 1161], "set_array_mod": [22, 25, 26, 72, 77, 78, 681, 720, 772], "set_default_devic": [22, 25, 26, 72, 77, 78, 133, 363, 395], "set_default_dtyp": [22, 25, 26, 72, 77, 78, 127, 132, 274], "set_default_float_dtyp": [22, 25, 26, 72, 77, 78, 132, 274], "set_default_int_dtyp": [22, 25, 26, 72, 77, 78, 132, 274], "set_default_uint_dtyp": [22, 25, 26, 72, 77, 78, 274, 303, 361], "set_min_bas": [22, 25, 26, 72, 77, 78, 681], "set_min_denomin": [22, 25, 26, 72, 77, 78, 681], "set_nestable_mod": [22, 25, 26, 72, 77, 78, 681, 723, 773], "set_queue_timeout": [22, 25, 26, 72, 77, 78, 681], "set_shape_array_mod": [22, 25, 26, 72, 77, 78, 681, 753, 774], "set_split_factor": [22, 25, 26, 72, 77, 78, 363], "set_tmp_dir": [22, 25, 26, 72, 77, 78, 681], "set_with_grad": [22, 25, 26, 72, 77, 78, 777, 820], "shape_array_mod": [22, 25, 26, 72, 77, 78, 681, 750, 774], "shuffl": [22, 25, 26, 75, 76, 1061, 1161], "size": [22, 25, 26, 54, 55, 72, 75, 76, 77, 78, 95, 96, 99, 100, 124, 126, 139, 140, 204, 232, 233, 235, 236, 363, 385, 386, 387, 681, 743, 821, 841, 842, 858, 861, 879, 882, 898, 901, 906, 909, 920, 924, 925, 929, 940, 944, 971, 985, 988, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1061, 1062, 1080, 1081, 1083, 1150, 1151, 1154, 1156, 1159, 1180, 1181, 1182], "product": [22, 25, 26, 40, 41, 131, 397, 605, 606, 608, 681, 701, 821, 840, 841, 842, 848, 851, 875, 878, 898, 901, 930, 934, 940, 944, 1117, 1118, 1121, 1134, 1137, 1180, 1191], "unknown": [22, 25, 26], "model": [22, 25, 26, 140, 141, 1161], "slogdet": [22, 25, 26, 95, 96, 842], "split_factor": [22, 25, 26, 72, 77, 78, 363, 385], "split_func_cal": [22, 25, 26, 72, 77, 78, 363], "stable_divid": [22, 25, 26, 72, 77, 78, 127, 681], "stop_gradi": [22, 25, 26, 72, 75, 76, 77, 78, 89, 90, 141, 363, 387, 777, 783, 784, 785, 786, 790, 791, 792, 793, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 1033, 1034, 1035, 1036, 1161, 1196, 1197, 1198, 1199, 1200, 1201], "supports_inplac": [22, 25, 26, 72, 77, 78, 681], "tmp_dir": [22, 25, 26, 72, 77, 78, 681], "to_ivy_shap": [22, 25, 26, 72, 77, 78, 681], "to_list": [22, 25, 26, 75, 76, 681, 1161], "to_native_arrays_and_back": [22, 25, 26, 72, 77, 78, 119, 129, 155], "to_native_shap": [22, 25, 26, 72, 77, 78, 681], "to_scalar": [22, 25, 26, 72, 77, 78, 681], "total_mem_on_dev": [22, 25, 26, 72, 77, 78, 133, 363], "tpu_is_avail": [22, 25, 26, 72, 77, 78, 363], "try_else_non": [22, 25, 26, 72, 77, 78, 681], "type_promote_arrai": [22, 25, 26, 72, 77, 78, 274], "unset_array_mod": [22, 25, 26, 72, 77, 78, 681], "unset_default_devic": [22, 25, 26, 72, 77, 78, 363], "unset_default_dtyp": [22, 25, 26, 72, 77, 78, 274, 353], "unset_default_float_dtyp": [22, 25, 26, 72, 77, 78, 274], "unset_default_int_dtyp": [22, 25, 26, 72, 77, 78, 274], "unset_default_uint_dtyp": [22, 25, 26, 72, 77, 78, 274], "unset_nestable_mod": [22, 25, 26, 72, 77, 78, 681], "unset_shape_array_mod": [22, 25, 26, 72, 77, 78, 681, 772], "unset_with_grad": [22, 25, 26, 72, 77, 78, 777], "unstack": [22, 25, 26, 75, 76, 131, 137, 140, 681, 1161], "used_mem_on_dev": [22, 25, 26, 72, 77, 78, 363], "valid_dtyp": [22, 25, 26, 72, 77, 78, 274], "value_is_nan": [22, 25, 26, 72, 77, 78, 681], "variable_data": [22, 25, 26, 72, 77, 78, 777], "with_grad": [22, 25, 26, 72, 77, 78, 777, 811], "abc": [23, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 139, 363, 364, 681, 708, 1037, 1054, 1192, 1193, 1196, 1200], "gelu": [23, 24, 73, 74, 165, 170, 1169], "approxim": [23, 24, 73, 74, 121, 165, 166, 167, 168, 169, 170, 196, 200, 397, 403, 406, 408, 411, 418, 421, 423, 426, 428, 431, 433, 436, 478, 481, 483, 486, 503, 506, 508, 511, 558, 561, 563, 566, 568, 571, 573, 576, 625, 628, 645, 648, 650, 653, 670, 674, 675, 842, 888, 891, 903, 905], "185": [23, 24, 73, 74, 166, 167, 168, 170], "046": [23, 24, 73, 74, 166, 167, 168, 170], "leaky_relu": [23, 24, 73, 74, 124, 165, 175, 1161], "alpha": [23, 24, 73, 74, 124, 125, 165, 171, 172, 173, 174, 175], "39": [23, 24, 58, 59, 73, 74, 103, 104, 165, 171, 172, 173, 174, 175, 397, 423, 426, 503, 506, 777, 778, 781, 842, 898, 901, 1061, 1068, 1069, 1070, 1071, 1072, 1117, 1118, 1121], "85": [23, 24, 58, 59, 73, 74, 103, 104, 165, 171, 172, 173, 174, 175, 397, 468, 471, 1061, 1063, 1064, 1068, 1069, 1070, 1073, 1074, 1076], "17": [23, 24, 73, 74, 93, 94, 103, 104, 122, 131, 165, 171, 172, 173, 174, 175, 397, 488, 491, 822, 824, 826, 842, 858, 861, 925, 929, 1061, 1063, 1065, 1067, 1068, 1070, 1073, 1075, 1076, 1077], "relu": [23, 24, 70, 71, 73, 74, 140, 141, 165, 171, 173, 174, 175, 180, 1161], "sigmoid": [23, 24, 73, 74, 137, 140, 141, 165, 185, 1161], "269": [23, 24, 73, 74, 165, 181, 182, 183, 184, 185], "731": [23, 24, 73, 74, 165, 181, 182, 183, 184, 185], "881": [23, 24, 40, 41, 73, 74, 85, 86, 165, 181, 182, 183, 184, 185, 397, 423, 424, 425, 426], "softmax": [23, 24, 70, 71, 73, 74, 165, 190, 821, 840, 841, 1161], "axi": [23, 24, 50, 51, 52, 53, 54, 55, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 79, 80, 95, 96, 97, 98, 99, 100, 109, 110, 111, 112, 113, 114, 119, 122, 124, 125, 127, 131, 132, 134, 135, 137, 139, 142, 153, 165, 186, 187, 188, 189, 190, 204, 232, 233, 234, 235, 236, 237, 363, 387, 681, 701, 702, 713, 775, 842, 848, 849, 850, 851, 852, 858, 861, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 955, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 977, 978, 979, 980, 981, 984, 985, 986, 987, 988, 989, 990, 991, 992, 997, 998, 999, 1000, 1001, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1061, 1079, 1080, 1081, 1082, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "422": [23, 24, 73, 74, 165, 186, 187, 188, 189, 190], "155": [23, 24, 73, 74, 165, 186, 187, 188, 189, 190], "softplu": [23, 24, 73, 74, 165, 195, 1161], "3461": [23, 24, 73, 74, 165, 191, 192, 193, 194, 195], "6491": [23, 24, 73, 74, 165, 191, 192, 193, 194, 195], "535": [23, 24, 73, 74, 165, 191, 192, 193, 194, 195], "42": [23, 24, 58, 59, 73, 74, 101, 102, 103, 104, 142, 165, 191, 192, 193, 194, 195, 777, 778, 781, 842, 898, 901, 1056, 1058, 1060, 1061, 1068, 1069, 1070, 1078, 1117, 1118, 1121], "tanh": [23, 24, 40, 41, 73, 74, 85, 86, 137, 165, 197, 397, 1161], "whose": [23, 24, 34, 35, 40, 41, 50, 51, 54, 55, 62, 63, 73, 74, 79, 80, 85, 86, 95, 96, 99, 100, 107, 108, 121, 124, 165, 196, 197, 198, 199, 200, 204, 227, 229, 231, 256, 258, 260, 261, 263, 265, 397, 408, 409, 410, 411, 412, 423, 424, 425, 426, 427, 438, 439, 440, 441, 442, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 625, 626, 628, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 670, 671, 672, 673, 674, 675, 681, 692, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 915, 918, 920, 924, 925, 929, 935, 939, 971, 989, 992, 1007, 1008, 1009, 1010, 1011, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1117, 1118, 1121], "hyperbol": [23, 24, 40, 41, 73, 74, 85, 86, 165, 196, 197, 198, 199, 200, 397, 408, 409, 410, 411, 412, 423, 424, 425, 426, 427, 438, 439, 440, 441, 442, 483, 484, 485, 486, 487, 650, 651, 652, 653, 654, 675], "angl": [23, 24, 40, 41, 73, 74, 85, 86, 153, 165, 196, 197, 198, 199, 200, 397, 433, 436, 483, 484, 485, 486, 487, 650, 651, 652, 653, 654, 675], "real": [23, 24, 40, 41, 73, 74, 85, 86, 165, 196, 197, 198, 199, 200, 397, 403, 404, 405, 407, 408, 409, 418, 419, 420, 422, 428, 429, 430, 432, 433, 434, 435, 437, 488, 489, 490, 492, 503, 505, 507, 508, 510, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 598, 599, 605, 606, 607, 609, 625, 626, 627, 629, 630, 631, 632, 634, 655, 656, 657, 659, 660, 661, 662, 664, 665, 667, 675, 676, 677, 678, 679], "float": [23, 24, 34, 35, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 58, 59, 73, 74, 79, 80, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 103, 104, 119, 120, 121, 124, 126, 127, 131, 132, 134, 139, 141, 165, 171, 174, 196, 197, 198, 199, 200, 203, 204, 205, 206, 208, 210, 212, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 266, 268, 274, 277, 280, 299, 300, 310, 313, 332, 335, 348, 351, 363, 374, 382, 385, 386, 393, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 468, 471, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 493, 494, 496, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 516, 518, 521, 523, 526, 528, 531, 538, 541, 548, 551, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 669, 670, 671, 672, 673, 674, 675, 676, 680, 681, 693, 694, 695, 696, 697, 698, 710, 721, 722, 746, 747, 754, 755, 758, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 828, 832, 835, 841, 842, 843, 844, 845, 846, 847, 853, 856, 863, 866, 867, 869, 870, 873, 888, 891, 903, 905, 906, 909, 915, 918, 920, 924, 945, 949, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1033, 1034, 1035, 1036, 1055, 1056, 1057, 1058, 1059, 1061, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1196, 1197, 1198, 1199, 1200, 1201], "tangent": [23, 24, 40, 41, 73, 74, 85, 86, 121, 165, 196, 197, 198, 199, 200, 397, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 670, 671, 672, 673, 674, 675], "762": [23, 24, 40, 41, 73, 74, 85, 86, 165, 196, 198, 199, 200, 397, 675], "964": [23, 24, 40, 41, 73, 74, 85, 86, 165, 196, 198, 199, 200, 397, 675], "collect": [28, 75, 76, 124, 126, 153, 165, 201, 363, 681, 777, 821, 955, 1037, 1050, 1055, 1061, 1169, 1180, 1194, 1196], "args_to_contain": 28, "include_deriv": [28, 29, 30, 31, 32, 33, 1037, 1039, 1049], "args_to_ivi": 28, "keyword": [28, 30, 31, 72, 75, 76, 77, 78, 118, 119, 124, 125, 126, 132, 133, 134, 140, 204, 238, 241, 681, 688, 737, 1037, 1043, 1117, 1142, 1145, 1192, 1193], "nest": [28, 30, 31, 32, 33, 72, 75, 76, 77, 78, 118, 124, 127, 130, 131, 139, 140, 141, 154, 681, 763, 777, 811, 820, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201], "unchang": [28, 30, 31, 32, 33], "posit": [28, 30, 31, 40, 41, 50, 51, 54, 55, 85, 86, 95, 96, 99, 100, 119, 124, 125, 126, 140, 153, 203, 204, 218, 219, 274, 310, 313, 397, 398, 401, 533, 536, 538, 539, 540, 541, 542, 605, 608, 624, 630, 633, 681, 710, 842, 843, 844, 845, 846, 847, 971, 985, 988, 1007, 1008, 1009, 1010, 1011, 1061, 1078, 1080, 1083, 1150, 1151, 1154, 1156, 1159, 1172, 1173], "deriv": [28, 30, 31, 32, 33, 34, 35, 44, 45, 79, 80, 89, 90, 132, 133, 139, 141, 204, 213, 214, 216, 227, 228, 230, 251, 252, 253, 254, 255, 269, 271, 273, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1037, 1039, 1049, 1192, 1196, 1200, 1202], "tupl": [28, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 54, 55, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 124, 125, 126, 131, 132, 133, 135, 139, 140, 141, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 204, 208, 209, 210, 227, 229, 231, 243, 246, 251, 253, 255, 274, 282, 284, 286, 287, 290, 292, 294, 296, 315, 316, 318, 319, 357, 363, 368, 375, 376, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 694, 696, 698, 710, 714, 716, 718, 755, 757, 759, 765, 766, 768, 794, 796, 798, 814, 815, 817, 821, 828, 831, 832, 833, 834, 835, 836, 839, 842, 843, 845, 847, 888, 891, 903, 905, 920, 921, 922, 923, 924, 930, 934, 945, 949, 956, 958, 960, 961, 963, 965, 966, 968, 970, 971, 972, 974, 976, 977, 980, 981, 984, 989, 992, 993, 996, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1016, 1017, 1020, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1042, 1044, 1045, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1080, 1083, 1085, 1091, 1092, 1094, 1095, 1096, 1100, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "kei": [28, 30, 31, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 124, 126, 131, 135, 140, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 251, 253, 255, 282, 284, 286, 292, 294, 296, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 687, 694, 696, 698, 699, 714, 716, 718, 755, 757, 759, 765, 766, 768, 794, 796, 798, 814, 815, 817, 821, 840, 841, 843, 845, 847, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 1002, 1004, 1006, 1007, 1009, 1011, 1033, 1034, 1035, 1037, 1040, 1046, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1151, 1153, 1155, 1156, 1158, 1160, 1172, 1173, 1180, 1191, 1196, 1200], "word": [28, 30, 31, 131, 204, 205, 206, 1061, 1073, 1076, 1172, 1173], "args_to_n": [28, 134, 139], "to_ivi": [28, 75, 76, 139, 1037, 1050], "leaf": [28, 32, 33, 75, 76, 127, 131, 140, 1037, 1038, 1047, 1048], "union": [28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 68, 69, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 118, 119, 120, 122, 127, 130, 131, 132, 133, 134, 135, 137, 142, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 265, 266, 268, 269, 271, 273, 274, 275, 276, 277, 280, 282, 283, 284, 285, 286, 287, 290, 292, 294, 296, 297, 298, 299, 300, 302, 303, 304, 307, 309, 310, 313, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 347, 348, 351, 353, 354, 355, 356, 357, 362, 363, 365, 366, 367, 368, 369, 370, 372, 374, 377, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 679, 680, 681, 682, 684, 685, 686, 689, 690, 693, 694, 696, 697, 698, 701, 702, 705, 706, 707, 709, 710, 713, 714, 715, 716, 717, 718, 724, 726, 727, 729, 730, 731, 736, 740, 743, 744, 752, 755, 756, 757, 758, 759, 762, 763, 764, 765, 766, 768, 769, 770, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 794, 796, 797, 798, 799, 801, 803, 805, 807, 809, 812, 814, 815, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 843, 845, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 921, 922, 923, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1048, 1049, 1053, 1054, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1094, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1196, 1197, 1198, 1200], "nativearrai": [28, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 58, 59, 73, 74, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 113, 114, 118, 119, 122, 127, 130, 131, 134, 135, 137, 139, 142, 155, 163, 165, 166, 169, 170, 171, 174, 175, 176, 179, 180, 181, 184, 185, 186, 189, 190, 191, 194, 195, 196, 200, 204, 205, 206, 208, 210, 213, 216, 227, 230, 232, 233, 235, 236, 238, 241, 243, 244, 246, 251, 254, 255, 256, 260, 261, 265, 269, 273, 274, 277, 280, 282, 283, 284, 285, 286, 287, 290, 292, 295, 304, 307, 310, 313, 321, 324, 327, 330, 332, 335, 337, 340, 342, 345, 348, 351, 357, 363, 368, 369, 372, 381, 387, 388, 392, 397, 398, 401, 402, 403, 406, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 481, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 506, 507, 508, 511, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 541, 542, 543, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 566, 567, 568, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 640, 643, 644, 645, 648, 650, 653, 655, 658, 659, 660, 663, 664, 665, 666, 667, 668, 669, 670, 674, 675, 676, 677, 680, 681, 682, 683, 685, 689, 690, 693, 694, 697, 698, 700, 701, 702, 705, 706, 707, 709, 710, 713, 714, 715, 716, 717, 718, 724, 726, 727, 729, 730, 731, 736, 740, 743, 744, 745, 752, 755, 756, 757, 758, 759, 763, 765, 766, 769, 770, 772, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 794, 797, 798, 799, 801, 803, 805, 807, 809, 812, 814, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 841, 842, 843, 846, 847, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1005, 1006, 1007, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1037, 1039, 1040, 1049, 1053, 1054, 1055, 1056, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1090, 1091, 1095, 1096, 1100, 1101, 1105, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1154, 1155, 1156, 1159, 1160], "travers": [28, 32, 33, 75, 76, 131, 137, 139, 1037, 1049], "lowest": [28, 32, 33, 58, 59, 75, 76, 103, 104, 127, 154, 1037, 1049, 1061, 1063, 1064, 1065, 1066, 1067], "leav": [28, 32, 33, 72, 75, 76, 77, 78, 119, 121, 122, 124, 127, 131, 132, 134, 140, 141, 971, 1017, 1020, 1037, 1038, 1039, 1047, 1048, 1049], "to_n": [28, 75, 76], "item": [28, 33, 70, 71, 75, 76, 87, 88, 132, 137, 139, 140, 142, 274, 298, 363, 368, 681, 699, 725, 754, 755, 757, 758, 759, 1037, 1042, 1043, 1044, 1045, 1049, 1053, 1054, 1161, 1192, 1193], "asarrai": [34, 35, 42, 43, 72, 77, 78, 87, 88, 124, 126, 134, 204, 681, 755, 756, 757, 758, 759, 821, 822, 825, 1085, 1091, 1095], "nativedtyp": [34, 35, 58, 59, 79, 80, 103, 104, 118, 119, 132, 133, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 266, 268, 269, 271, 273, 274, 276, 277, 280, 299, 300, 302, 303, 304, 307, 309, 347, 353, 362, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1117, 1142, 1145], "datatyp": [34, 35, 75, 76, 81, 82, 204, 208, 209, 227, 228, 230, 243, 244, 246, 274, 297, 347, 353], "nativedevic": [34, 35, 38, 39, 58, 59, 79, 80, 103, 104, 118, 119, 132, 133, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 243, 244, 246, 248, 249, 251, 252, 253, 254, 255, 266, 268, 269, 271, 273, 363, 366, 367, 368, 369, 370, 372, 374, 377, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 396, 681, 740, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1196, 1197, 1198, 1200], "interpret": [34, 35, 204, 208, 209, 210, 243, 244, 246], "empty_lik": [34, 35, 79, 80, 204], "uniniti": [34, 35, 204, 212, 213, 214, 216], "from_dlpack": [34, 35, 79, 80, 204], "full_lik": [34, 35, 79, 80, 120, 204, 231], "fill_valu": [34, 35, 79, 80, 120, 126, 132, 204, 226, 227, 228, 229, 230, 231, 397, 528, 531, 553, 556], "scalar": [34, 35, 73, 74, 79, 80, 132, 137, 142, 154, 171, 173, 175, 204, 227, 228, 229, 230, 231, 681, 740, 770, 776, 842, 945, 949], "fill": [34, 35, 58, 59, 75, 76, 79, 80, 103, 104, 126, 204, 212, 226, 227, 228, 229, 230, 231, 248, 249, 251, 252, 253, 254, 255, 266, 268, 269, 271, 273, 1061, 1063, 1064, 1065, 1066, 1067], "int": [34, 35, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 79, 80, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 114, 118, 119, 120, 122, 125, 126, 127, 131, 132, 133, 134, 135, 142, 165, 186, 189, 201, 202, 204, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 256, 258, 260, 261, 263, 265, 274, 287, 290, 302, 309, 310, 313, 321, 324, 337, 340, 363, 379, 380, 381, 387, 388, 392, 397, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 681, 687, 701, 702, 705, 706, 707, 710, 713, 724, 740, 743, 755, 758, 775, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 821, 822, 823, 824, 825, 826, 828, 830, 831, 832, 833, 834, 835, 836, 842, 843, 845, 847, 848, 851, 858, 861, 930, 934, 935, 939, 940, 944, 945, 949, 955, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 977, 980, 981, 984, 985, 988, 989, 992, 993, 996, 997, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1016, 1017, 1020, 1021, 1024, 1025, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1040, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1078, 1080, 1081, 1082, 1106, 1107, 1110, 1112, 1115, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "000123": [34, 35, 204, 227, 228, 230], "meshgrid": [34, 35, 79, 80, 204], "xy": [34, 35, 79, 80, 204, 238, 239, 240, 241, 242], "ones_lik": [34, 35, 79, 80, 142, 204, 255, 1161], "tril": [34, 35, 79, 80, 204], "k": [34, 35, 58, 59, 79, 80, 85, 86, 103, 104, 117, 125, 126, 137, 204, 218, 219, 220, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 583, 585, 587, 681, 689, 821, 841, 842, 875, 878, 906, 909, 915, 918, 920, 924, 925, 929, 935, 939, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083], "n": [34, 35, 58, 59, 68, 69, 85, 86, 95, 96, 103, 104, 113, 114, 117, 124, 204, 238, 241, 256, 258, 260, 261, 263, 265, 583, 585, 587, 681, 690, 821, 837, 842, 858, 861, 875, 878, 884, 885, 886, 887, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 920, 924, 925, 929, 935, 939, 940, 944, 945, 949, 950, 954, 971, 981, 984, 985, 988, 993, 996, 1017, 1020, 1029, 1032, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1117, 1126, 1129, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "innermost": [34, 35, 50, 51, 95, 96, 204, 256, 258, 260, 261, 263, 265, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 888, 891, 893, 896, 903, 905, 906, 909, 915, 918, 920, 924, 925, 929, 935, 939], "mxn": [34, 35, 204, 256, 258, 260, 261, 263, 265, 842, 858, 861, 888, 891, 893, 896, 903, 905, 906, 909, 925, 929, 935, 939], "matric": [34, 35, 50, 51, 95, 96, 153, 204, 238, 241, 256, 258, 260, 261, 263, 265, 821, 838, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 884, 886, 888, 891, 893, 896, 903, 905, 906, 909, 915, 918, 920, 924, 925, 929, 935, 939], "diagon": [34, 35, 50, 51, 95, 96, 204, 218, 219, 256, 258, 260, 261, 263, 265, 842, 935, 939], "triangular": [34, 35, 50, 51, 95, 96, 204, 256, 258, 260, 261, 263, 265, 842, 843, 844, 845, 846, 847, 906, 909], "triu": [34, 35, 79, 80, 204], "upper": [34, 35, 50, 51, 58, 59, 95, 96, 103, 104, 124, 204, 218, 219, 261, 263, 265, 842, 843, 844, 845, 846, 847, 906, 909, 1061, 1073, 1074, 1075, 1076, 1077], "zeros_lik": [34, 35, 79, 80, 125, 204, 821, 832, 835, 971, 972, 975, 1161], "creation": [35, 72, 75, 76, 77, 78, 80, 118, 120, 124, 126, 132, 133, 137, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 243, 246, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273], "data_typ": [36, 37, 81, 82, 118, 120, 124, 132, 274, 275, 276, 277, 280, 282, 285, 287, 290, 292, 295, 297, 298, 299, 300, 302, 303, 304, 307, 309, 310, 313, 315, 316, 318, 319, 321, 324, 326, 327, 330, 332, 335, 337, 340, 342, 345, 347, 348, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "astyp": [36, 37, 48, 49, 81, 82, 93, 94, 125, 132, 134, 274, 832, 833, 834, 836], "broadcast_arrai": [36, 37, 81, 82, 274, 286], "arbitrari": [36, 37, 75, 76, 81, 82, 119, 124, 127, 131, 134, 141, 154, 204, 238, 241, 274, 282, 283, 284, 285, 286, 348, 351], "x1": [36, 37, 40, 41, 42, 43, 81, 82, 85, 86, 87, 88, 95, 96, 119, 122, 125, 204, 269, 273, 274, 282, 283, 284, 285, 286, 304, 307, 357, 363, 381, 397, 413, 416, 417, 433, 436, 437, 443, 446, 447, 453, 456, 457, 458, 461, 462, 463, 466, 467, 468, 471, 472, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 531, 532, 548, 549, 551, 552, 553, 556, 557, 578, 581, 582, 583, 586, 587, 593, 596, 597, 598, 601, 602, 603, 604, 605, 608, 609, 615, 618, 619, 625, 628, 629, 630, 631, 632, 633, 634, 665, 666, 669, 681, 682, 683, 684, 685, 686, 689, 821, 830, 842, 848, 851, 852, 875, 878, 898, 901, 902, 915, 918, 919, 930, 931, 934, 940, 941, 944, 1080, 1084], "x2": [36, 37, 40, 41, 42, 43, 50, 51, 75, 76, 81, 82, 85, 86, 87, 88, 95, 96, 119, 122, 125, 204, 269, 273, 274, 282, 283, 284, 285, 286, 357, 363, 381, 397, 413, 414, 415, 416, 417, 433, 434, 435, 436, 437, 443, 444, 445, 446, 447, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 615, 616, 617, 618, 619, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 665, 666, 667, 668, 669, 681, 682, 683, 684, 685, 686, 821, 830, 842, 848, 849, 850, 851, 852, 875, 876, 877, 878, 898, 899, 900, 901, 902, 915, 916, 917, 918, 919, 930, 931, 932, 933, 934, 940, 941, 942, 943, 944, 1080, 1084], "x3": [36, 37, 204, 269, 273, 274, 282, 283, 285, 363, 381], "broadcast_to": [36, 37, 81, 82, 132, 274], "can_cast": [36, 37, 81, 82, 127, 132, 274, 296, 310, 313], "cast": [36, 37, 81, 82, 125, 126, 127, 132, 274, 277, 280, 292, 293, 294, 295, 296, 971, 977, 980, 1117, 1134, 1137, 1142, 1145, 1161], "occur": [36, 37, 62, 63, 81, 82, 107, 108, 274, 292, 293, 294, 295, 296, 1080, 1081, 1082, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105], "rule": [36, 37, 50, 51, 81, 82, 95, 96, 122, 124, 127, 130, 131, 132, 135, 274, 277, 280, 292, 293, 294, 295, 296, 348, 351, 397, 438, 441, 463, 466, 488, 491, 605, 608, 630, 633, 842, 843, 844, 845, 846, 847, 848, 851, 898, 901, 915, 918], "float32": [36, 37, 48, 49, 81, 82, 87, 88, 93, 94, 122, 124, 132, 204, 269, 273, 274, 275, 276, 292, 293, 294, 296, 304, 307, 309, 310, 313, 326, 337, 340, 362, 681, 765, 766, 769, 832, 833, 834, 836], "float64": [36, 37, 58, 59, 103, 104, 124, 132, 274, 277, 280, 292, 293, 295, 310, 313, 326, 337, 340, 353, 362, 1061, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "as_n": [36, 37, 38, 39, 81, 82, 83, 84, 132, 274, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 363, 368, 369, 370, 371, 372, 373, 384], "finfo": [36, 37, 81, 82, 274], "iinfo": [36, 37, 81, 82, 135, 274], "is_bool_dtyp": [36, 37, 81, 82, 274], "is_float_dtyp": [36, 37, 81, 82, 120, 274], "is_int_dtyp": [36, 37, 81, 82, 120, 126, 274, 681, 770], "is_uint_dtyp": [36, 37, 81, 82, 120, 126, 274], "result_typ": [36, 37, 81, 82, 132, 274], "arrays_and_dtyp": [36, 37, 81, 82, 274, 348, 349, 350, 351, 352], "to_devic": [38, 39, 75, 76, 83, 84, 363, 368, 389], "stream": [38, 39, 83, 84, 363, 388, 389, 390, 391, 392], "ab": [40, 41, 85, 86, 124, 129, 397, 402, 625, 628, 842, 925, 929, 945, 949, 1161], "aco": [40, 41, 85, 86, 397, 407, 1161], "invers": [40, 41, 85, 86, 139, 153, 397, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 842, 870, 873, 903, 905], "cosin": [40, 41, 85, 86, 397, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487], "57": [40, 41, 85, 86, 363, 374, 397, 403, 404, 405, 406, 407, 408, 411, 418, 421, 423, 426, 433, 434, 436, 468, 471, 483, 486], "69": [40, 41, 103, 104, 403, 404, 1068, 1070, 1073, 1077], "acosh": [40, 41, 85, 86, 274, 315, 316, 318, 319, 397, 1161], "32": [40, 41, 44, 45, 58, 59, 85, 86, 87, 88, 103, 104, 124, 140, 165, 171, 174, 274, 309, 397, 408, 409, 410, 411, 412, 468, 471, 635, 636, 640, 641, 755, 757, 759, 778, 779, 821, 828, 831, 832, 835, 842, 898, 901, 1061, 1063, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1076, 1077, 1080, 1084, 1117, 1118, 1121], "99": [40, 41, 85, 86, 103, 104, 397, 408, 409, 410, 411, 412, 423, 426, 478, 479, 1068, 1070, 1117, 1118, 1121], "asin": [40, 41, 85, 86, 397, 422, 1161], "sine": [40, 41, 85, 86, 397, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654], "asinh": [40, 41, 85, 86, 397, 427, 1161], "82": [40, 41, 103, 104, 423, 424, 1068, 1070, 1073, 1075], "atan": [40, 41, 85, 86, 397, 432, 1161], "785": [40, 41, 85, 86, 397, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "464": [40, 41, 103, 104, 397, 428, 429, 433, 436, 1068, 1072], "atan2": [40, 41, 85, 86, 397, 437, 1161], "coordin": [40, 41, 85, 86, 204, 238, 241, 397, 433, 434, 435, 436, 437], "quotient": [40, 41, 85, 86, 397, 433, 434, 435, 436, 437], "245": [40, 41, 433, 434], "atanh": [40, 41, 85, 86, 397, 442, 1161], "549": [40, 41, 85, 86, 397, 438, 439, 440, 441, 442], "47": [40, 41, 58, 59, 85, 86, 103, 104, 397, 438, 439, 440, 442, 655, 658, 1061, 1068, 1070, 1073, 1074, 1076], "bitwise_and": [40, 41, 85, 86, 397, 447], "integ": [40, 41, 58, 59, 68, 69, 75, 76, 85, 86, 95, 96, 103, 104, 113, 114, 124, 126, 131, 132, 139, 204, 205, 206, 226, 274, 321, 324, 337, 340, 348, 351, 397, 398, 401, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 513, 516, 518, 521, 598, 601, 625, 628, 630, 633, 635, 638, 676, 680, 842, 884, 886, 940, 944, 945, 949, 971, 1012, 1061, 1063, 1064, 1065, 1066, 1067, 1078, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "bitwise_invert": [40, 41, 85, 86, 397, 452], "bitiwse_invert": [40, 41, 448, 449], "bitwise_left_shift": [40, 41, 85, 86, 397, 457], "bitwise_or": [40, 41, 85, 86, 397, 462], "bitwise_right_shift": [40, 41, 85, 86, 397, 467], "bitwise_xor": [40, 41, 85, 86, 397, 472], "ceil": [40, 41, 85, 86, 204, 205, 206, 397, 477, 1161], "express": [40, 41, 85, 86, 121, 135, 137, 142, 397, 403, 406, 418, 421, 428, 431, 433, 436, 478, 479, 480, 481, 482, 645, 646, 647, 648, 649, 670, 671, 672, 673, 674], "radian": [40, 41, 85, 86, 121, 397, 403, 406, 418, 421, 428, 431, 433, 436, 478, 479, 480, 481, 482, 645, 646, 647, 648, 649, 670, 671, 672, 673, 674], "54": [40, 41, 85, 86, 101, 102, 103, 104, 122, 397, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 655, 658, 821, 841, 842, 898, 901, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1117, 1118, 1121], "416": [40, 41, 397, 478, 479, 481], "cosh": [40, 41, 85, 86, 397, 408, 412, 487, 1161], "76": [40, 41, 73, 74, 85, 86, 103, 104, 196, 197, 274, 321, 324, 397, 408, 410, 412, 483, 484, 485, 486, 487, 650, 652, 654, 777, 778, 781, 842, 930, 934, 1068, 1070, 1117, 1118, 1121], "23": [40, 41, 58, 59, 79, 80, 85, 86, 103, 104, 204, 227, 229, 230, 231, 397, 433, 436, 468, 471, 483, 484, 485, 487, 538, 541, 630, 633, 635, 636, 640, 643, 650, 651, 652, 653, 654, 821, 831, 842, 858, 861, 925, 929, 1063, 1064, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1080, 1084], "03": [40, 41, 85, 86, 103, 104, 483, 484, 485, 487, 821, 841, 1055, 1056, 1059, 1068, 1070, 1073, 1077], "81": [40, 41, 42, 43, 87, 88, 103, 104, 274, 321, 324, 397, 483, 484, 635, 638, 660, 663, 681, 755, 756, 757, 758, 759, 1061, 1073, 1075, 1076, 1117, 1118, 1121], "divid": [40, 41, 75, 76, 85, 86, 122, 130, 397, 492, 518, 521, 681, 754, 971, 1012], "dividend": [40, 41, 85, 86, 397, 488, 489, 490, 491, 492, 518, 519, 520, 522, 630, 631, 633], "divisor": [40, 41, 44, 45, 85, 86, 89, 90, 397, 488, 489, 490, 491, 492, 518, 519, 520, 522, 523, 525, 527, 630, 631, 633, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1117, 1138, 1141, 1146, 1149, 1196, 1197, 1198], "375": [40, 41, 397, 493, 494, 496], "erf": [40, 41, 85, 86, 397, 502], "exponenti": [40, 41, 42, 43, 85, 86, 87, 88, 397, 498, 499, 500, 501, 502, 503, 504, 506, 578, 581, 625, 626, 628, 681, 755, 756, 757, 758, 759], "gauss": [40, 41, 85, 86, 397, 498, 499, 500, 501, 502], "exp": [40, 41, 85, 86, 397, 507, 508, 511, 578, 581, 1161], "expm1": [40, 41, 85, 86, 397, 512], "244": [40, 41, 508, 509], "918": [40, 41, 508, 509], "48": [40, 41, 85, 86, 103, 104, 165, 171, 174, 397, 408, 410, 411, 412, 508, 509, 655, 658, 777, 778, 781, 842, 898, 901, 1068, 1070, 1073, 1077, 1117, 1118, 1121], "147": [40, 41, 165, 186, 189, 397, 508, 509, 511], "floor": [40, 41, 85, 86, 397, 463, 466, 517, 681, 709, 1161], "floor_divid": [40, 41, 85, 86, 397, 522], "13": [40, 41, 48, 49, 58, 59, 87, 88, 93, 94, 103, 104, 122, 124, 131, 274, 321, 324, 363, 374, 397, 443, 446, 468, 471, 483, 486, 508, 511, 518, 519, 521, 655, 658, 681, 694, 697, 698, 701, 777, 778, 781, 821, 822, 823, 824, 826, 841, 842, 858, 861, 898, 901, 925, 929, 1063, 1064, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1080, 1084, 1085, 1086, 1090, 1117, 1118, 1121], "greater": [40, 41, 58, 59, 85, 86, 103, 104, 397, 403, 406, 418, 421, 433, 436, 453, 456, 463, 466, 513, 516, 518, 521, 527, 625, 628, 630, 633, 640, 643, 676, 680, 842, 848, 851, 971, 1013, 1016, 1061, 1073, 1074, 1075, 1076, 1077], "greater_equ": [40, 41, 85, 86, 397, 532, 578, 580, 582], "isfinit": [40, 41, 85, 86, 124, 397, 537], "out_i": [40, 41, 85, 86, 397, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547], "self_i": [40, 41, 85, 86, 533, 534, 535, 538, 539, 540, 543, 544, 545], "finit": [40, 41, 85, 86, 397, 413, 416, 433, 436, 533, 534, 535, 536, 537, 605, 608, 625, 628, 630, 633], "isinf": [40, 41, 85, 86, 397, 542], "neg": [40, 41, 54, 55, 58, 59, 68, 69, 73, 74, 85, 86, 99, 100, 103, 104, 113, 114, 127, 131, 134, 165, 171, 173, 174, 175, 204, 205, 206, 218, 219, 397, 533, 536, 538, 539, 540, 541, 542, 605, 608, 614, 625, 628, 630, 633, 842, 920, 924, 940, 944, 945, 949, 971, 989, 992, 1007, 1008, 1009, 1010, 1011, 1061, 1068, 1069, 1070, 1071, 1072, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "infin": [40, 41, 85, 86, 121, 165, 196, 200, 203, 274, 277, 280, 397, 398, 401, 408, 411, 413, 416, 423, 426, 428, 431, 433, 436, 473, 476, 478, 481, 483, 486, 503, 506, 508, 511, 513, 516, 518, 521, 533, 536, 538, 539, 540, 541, 542, 558, 561, 563, 566, 573, 576, 578, 581, 588, 591, 605, 608, 625, 628, 630, 633, 635, 638, 645, 648, 650, 653, 655, 658, 670, 674, 675, 676, 680, 842, 945, 949, 1117, 1122, 1125, 1130, 1133, 1150, 1151, 1154, 1156, 1159], "isnan": [40, 41, 85, 86, 397, 547], "nan": [40, 41, 75, 76, 85, 86, 118, 121, 124, 165, 196, 200, 203, 274, 277, 280, 397, 398, 401, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 473, 476, 478, 481, 483, 486, 503, 506, 508, 511, 513, 516, 533, 536, 543, 544, 545, 546, 547, 558, 561, 563, 566, 573, 576, 578, 581, 588, 591, 605, 608, 625, 628, 630, 633, 635, 638, 645, 648, 650, 653, 655, 658, 670, 674, 675, 676, 680, 681, 726, 776, 821, 841, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1154, 1156, 1159], "less_equ": [40, 41, 85, 86, 397, 557], "log10": [40, 41, 85, 86, 397, 567], "logarithm": [40, 41, 85, 86, 397, 503, 506, 558, 561, 563, 564, 565, 566, 567, 568, 571, 573, 574, 575, 576, 577, 578, 581, 842, 911, 913], "log1p": [40, 41, 85, 86, 397, 572], "log2": [40, 41, 85, 86, 397, 577], "logaddexp": [40, 41, 85, 86, 397], "logical_and": [40, 41, 85, 86, 397, 587, 1161], "logical_not": [40, 41, 85, 86, 397, 592, 1161], "logical_or": [40, 41, 85, 86, 397, 597, 1161], "logical_xor": [40, 41, 85, 86, 397, 602], "not_equ": [40, 41, 85, 86, 397, 619], "pow": [40, 41, 85, 86, 397, 629], "expon": [40, 41, 42, 43, 87, 88, 397, 625, 626, 628, 681, 755, 756, 757, 758, 759], "remaind": [40, 41, 75, 76, 85, 86, 397, 634, 681, 709, 971, 1012], "respect": [40, 41, 44, 45, 85, 86, 89, 90, 119, 120, 122, 124, 130, 131, 132, 135, 204, 238, 241, 397, 398, 401, 413, 416, 433, 436, 443, 446, 453, 456, 458, 461, 463, 466, 468, 471, 488, 491, 493, 496, 518, 521, 523, 526, 528, 531, 548, 551, 553, 556, 578, 581, 583, 586, 593, 596, 598, 601, 605, 608, 615, 618, 630, 631, 632, 633, 634, 665, 669, 777, 778, 779, 780, 781, 782, 783, 785, 787, 788, 790, 792, 799, 801, 803, 805, 807, 809, 842, 906, 909, 1033, 1034, 1035, 1036], "x2_i": [40, 41, 85, 86, 397, 413, 416, 433, 436, 443, 446, 453, 456, 458, 461, 463, 466, 468, 471, 488, 491, 493, 496, 518, 521, 523, 526, 528, 531, 548, 551, 553, 556, 578, 581, 583, 586, 593, 596, 598, 601, 605, 608, 615, 618, 625, 628, 630, 631, 632, 633, 634, 665, 669], "11": [40, 41, 44, 45, 48, 49, 58, 59, 72, 77, 78, 85, 86, 93, 94, 99, 100, 103, 104, 122, 124, 131, 397, 413, 415, 416, 417, 428, 431, 443, 446, 508, 510, 630, 631, 633, 635, 638, 681, 701, 713, 778, 779, 821, 822, 823, 824, 825, 826, 842, 858, 861, 898, 901, 925, 929, 955, 966, 969, 971, 989, 992, 1013, 1015, 1037, 1054, 1061, 1063, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1080, 1084, 1085, 1086, 1090, 1117, 1118, 1121], "18": [40, 41, 58, 59, 85, 86, 103, 104, 122, 131, 397, 433, 436, 468, 471, 488, 491, 630, 631, 650, 651, 652, 653, 654, 842, 858, 861, 898, 901, 1061, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1077, 1117, 1118, 1121], "94": [40, 41, 58, 59, 85, 86, 103, 104, 423, 427, 635, 636, 640, 641, 1073, 1074, 1075], "256": [40, 41, 635, 636, 640, 641, 681, 755, 758, 821, 831], "0001": [40, 41, 635, 636, 640, 641, 1196, 1197, 1198], "36": [40, 41, 397, 433, 436, 635, 636, 640, 641, 681, 755, 758, 842, 898, 901, 925, 929, 1117, 1118, 1121], "37": [40, 41, 85, 86, 397, 423, 426, 427, 635, 636, 650, 652, 654, 670, 674, 1061, 1068, 1071], "67": [40, 41, 85, 86, 103, 104, 131, 397, 468, 471, 483, 485, 486, 487, 635, 636, 640, 641, 650, 652, 654, 1073, 1075], "45": [40, 41, 85, 86, 103, 104, 124, 397, 433, 435, 436, 437, 488, 490, 491, 492, 635, 636, 640, 641, 777, 778, 781, 842, 898, 901, 971, 1012, 1055, 1056, 1059, 1068, 1070, 1073, 1075, 1117, 1118, 1121], "24": [40, 41, 93, 94, 101, 102, 103, 104, 397, 468, 471, 635, 636, 640, 641, 655, 658, 681, 701, 777, 778, 781, 822, 824, 826, 842, 858, 861, 898, 901, 1055, 1056, 1058, 1059, 1060, 1063, 1065, 1068, 1070, 1073, 1075, 1117, 1118, 1121], "678": [40, 41, 635, 636, 640, 641], "25": [40, 41, 42, 43, 50, 51, 52, 53, 58, 59, 85, 86, 87, 88, 93, 94, 101, 102, 103, 104, 131, 397, 488, 490, 491, 492, 635, 636, 650, 653, 655, 658, 660, 663, 755, 756, 757, 759, 822, 824, 826, 842, 843, 844, 846, 858, 861, 870, 873, 955, 961, 962, 964, 1055, 1056, 1058, 1059, 1060, 1063, 1064, 1068, 1069, 1070, 1072, 1073, 1075, 1117, 1118, 1121], "33": [40, 41, 56, 57, 58, 59, 85, 86, 87, 88, 397, 423, 425, 428, 431, 635, 636, 694, 696, 842, 898, 901, 1037, 1054, 1055, 1056, 1057, 1059, 1063, 1064, 1117, 1118, 1121], "sin": [40, 41, 85, 86, 130, 137, 397, 649, 681, 710, 1161], "841": [40, 41, 85, 86, 397, 645, 646, 647, 648, 649], "909": [40, 41, 85, 86, 397, 645, 646, 647, 648, 649], "141": [40, 41, 85, 86, 397, 645, 646, 647, 648, 649], "sinh": [40, 41, 85, 86, 397, 654, 1161], "63": [40, 41, 44, 45, 85, 86, 95, 96, 397, 650, 651, 652, 653, 654, 655, 658, 778, 779, 842, 843, 845, 846, 847, 898, 901, 1117, 1118, 1121], "232": [40, 41, 85, 86, 397, 650, 651, 652, 653, 654], "51": [40, 41, 103, 104, 397, 468, 471, 650, 651, 653, 1068, 1072, 1073, 1075], "sqrt": [40, 41, 85, 86, 397, 659, 842, 945, 949], "squar": [40, 41, 50, 51, 85, 86, 95, 96, 124, 397, 655, 656, 657, 658, 659, 664, 821, 828, 842, 843, 844, 845, 846, 847, 853, 856, 863, 866, 867, 869, 870, 873, 884, 886, 911, 913, 915, 918, 920, 924], "subtract": [40, 41, 85, 86, 122, 130, 397, 666], "tan": [40, 41, 85, 86, 119, 121, 125, 127, 131, 134, 137, 397, 418, 421, 423, 426, 671, 842, 858, 861, 1085, 1086, 1090, 1106, 1107, 1110, 1161], "56": [40, 41, 58, 59, 85, 86, 122, 397, 655, 658, 670, 671, 672, 673, 674, 777, 778, 781, 842, 898, 901, 925, 929, 1068, 1069, 1117, 1118, 1121], "19": [40, 41, 58, 59, 85, 86, 103, 104, 122, 397, 423, 425, 427, 468, 471, 670, 671, 672, 673, 674, 842, 858, 861, 1061, 1063, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1077, 1106, 1112, 1115], "trunc": [40, 41, 85, 86, 397, 677], "elementwis": [41, 75, 76, 86, 118, 127, 137, 142, 398, 401, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 438, 441, 443, 446, 448, 451, 453, 456, 458, 461, 463, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 496, 498, 501, 503, 506, 508, 511, 513, 516, 518, 521, 523, 526, 528, 531, 533, 536, 538, 541, 543, 546, 548, 551, 553, 556, 558, 561, 563, 566, 568, 571, 573, 576, 578, 581, 583, 586, 588, 591, 593, 596, 598, 601, 603, 604, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 669, 670, 674, 675, 676, 680], "all_equ": [42, 43, 87, 88, 681, 686], "equality_matrix": [42, 43, 87, 88, 681, 682, 683, 684, 685, 686], "compar": [42, 43, 75, 76, 87, 88, 124, 126, 135, 140, 681, 682, 683, 684, 685, 686, 689, 690, 842, 925, 929, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1106, 1107, 1110, 1112, 1115], "matrix": [42, 43, 50, 51, 75, 76, 87, 88, 95, 96, 204, 238, 241, 256, 260, 261, 265, 681, 682, 683, 684, 685, 686, 693, 821, 838, 842, 843, 844, 845, 846, 847, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 884, 886, 888, 891, 893, 896, 903, 905, 906, 909, 915, 918, 920, 924, 925, 929, 935, 939, 950, 954, 1180, 1190], "clip_vector_norm": [42, 43, 87, 88, 681, 698], "max_norm": [42, 43, 87, 88, 681, 693, 694, 695, 696, 697, 698], "norm": [42, 43, 57, 75, 76, 87, 88, 95, 96, 102, 118, 681, 693, 694, 695, 696, 697, 698, 842, 879, 882, 945, 949, 1056, 1057, 1058, 1059, 1060, 1161, 1195, 1196, 1198], "vector": [42, 43, 75, 76, 87, 88, 95, 96, 153, 204, 238, 241, 681, 694, 695, 696, 697, 698, 821, 838, 842, 848, 851, 863, 866, 875, 878, 898, 901, 920, 924, 925, 929, 940, 944, 945, 949, 950, 951, 954, 1180, 1190], "downscal": [42, 43, 87, 88, 681, 693, 694, 695, 696, 697, 698], "max": [42, 43, 66, 67, 75, 76, 87, 88, 111, 112, 274, 310, 313, 321, 324, 397, 603, 681, 693, 694, 695, 696, 697, 698, 706, 743, 744, 842, 888, 891, 903, 905, 1117, 1196, 1198], "894": [42, 43, 87, 88, 681, 694, 695, 697, 698, 1055, 1056, 1059], "79": [42, 43, 87, 88, 103, 104, 397, 468, 471, 488, 491, 681, 694, 695, 697, 698, 1073, 1075], "gather_nd": [42, 43, 75, 76, 87, 88, 681, 718, 1161], "cuda": [42, 43, 58, 59, 75, 76, 87, 88, 103, 104, 137, 140, 154, 204, 232, 233, 235, 236, 363, 365, 384, 385, 681, 713, 714, 715, 716, 717, 718, 740, 743, 744, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1202, 1203], "stable_pow": [42, 43, 87, 88, 681, 759], "min_bas": [42, 43, 87, 88, 681, 755, 756, 757, 758, 759], "_min_bas": [42, 43, 56, 57, 101, 102, 681, 755, 756, 758, 1055, 1056, 1057, 1058, 1059, 1060, 1194, 1195], "power": [42, 43, 124, 139, 140, 141, 397, 463, 466, 503, 506, 625, 628, 681, 721, 746, 755, 756, 758, 842, 884, 886, 1174], "625": [42, 43, 50, 51, 755, 756, 842, 843, 844, 846], "1300": [42, 43, 141, 681, 755, 756, 758], "216": [42, 43, 755, 756, 777, 778, 781], "49": [42, 43, 58, 59, 165, 186, 189, 397, 655, 658, 755, 756, 1068, 1069, 1117, 1118, 1121], "512": [42, 43, 755, 756], "6560": [42, 43, 755, 756], "to_numpi": [42, 43, 75, 76, 87, 88, 140, 681, 766, 1161], "adam_step": [44, 45, 89, 90, 777, 782], "mw": [44, 45, 89, 90, 141, 777, 778, 779, 780, 781, 782, 783, 785], "vw": [44, 45, 89, 90, 141, 777, 778, 779, 780, 781, 782, 783, 785], "beta1": [44, 45, 89, 90, 141, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 799, 800, 801, 802, 1196, 1197, 1198], "beta2": [44, 45, 89, 90, 141, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 799, 800, 801, 802, 1196, 1197, 1198], "999": [44, 45, 73, 74, 85, 86, 89, 90, 141, 165, 196, 197, 199, 200, 397, 675, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 799, 800, 801, 802, 1196, 1197, 1198], "epsilon": [44, 45, 52, 53, 56, 57, 89, 90, 97, 98, 101, 102, 127, 131, 134, 141, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 799, 800, 801, 802, 842, 888, 891, 903, 905, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1055, 1056, 1057, 1058, 1059, 1060, 1194, 1195, 1196, 1197, 1198], "1e": [44, 45, 52, 53, 56, 57, 89, 90, 97, 98, 101, 102, 126, 127, 131, 134, 141, 142, 274, 310, 313, 681, 722, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 799, 800, 801, 802, 842, 920, 924, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1055, 1056, 1057, 1058, 1059, 1060, 1161, 1196, 1197, 1198, 1199, 1201], "07": [44, 45, 52, 53, 85, 86, 89, 90, 97, 98, 103, 104, 141, 397, 433, 435, 436, 437, 640, 643, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 799, 800, 801, 802, 842, 925, 929, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1068, 1070, 1196, 1197, 1198], "cost": [44, 45, 89, 90, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1033, 1034, 1035, 1036], "weight": [44, 45, 89, 90, 127, 131, 141, 142, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 821, 838, 839, 841, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1192, 1193, 1196, 1198, 1199], "w": [44, 45, 48, 49, 75, 76, 85, 86, 89, 90, 93, 94, 137, 140, 141, 583, 585, 587, 681, 690, 777, 778, 779, 780, 781, 782, 783, 785, 786, 790, 792, 793, 799, 801, 802, 803, 805, 806, 807, 809, 810, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836], "dc": [44, 45, 89, 90, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809], "dw": [44, 45, 89, 90, 777, 778, 779, 780, 781, 782, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809], "averag": [44, 45, 89, 90, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1033, 1034, 1035], "moment": [44, 45, 89, 90, 128, 154, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1196, 1197, 1198], "forget": [44, 45, 89, 90, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1196, 1197, 1198], "adam": [44, 45, 89, 90, 140, 141, 142, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1161, 1196, 1198], "divis": [44, 45, 89, 90, 127, 397, 463, 466, 488, 491, 518, 521, 630, 633, 681, 709, 722, 747, 754, 777, 778, 779, 780, 781, 782, 783, 785, 799, 801, 1196, 1197, 1198], "delta": [44, 45, 89, 90, 777, 778, 779, 780, 781, 782], "dcdw": [44, 45, 89, 90, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 790, 791, 792, 793, 799, 800, 801, 802, 803, 804, 805, 806], "adam_step_delta": [44, 45, 89, 90, 777, 778, 779, 780, 781, 782], "639": [44, 45, 777, 778, 779, 781], "00121": [44, 45, 778, 779], "0102": [44, 45, 778, 779], "0397": [44, 45, 778, 779], "exclus": [44, 45, 75, 76, 89, 90, 124, 127, 131, 142, 204, 205, 206, 681, 701, 733, 734, 736, 777, 794, 795, 796, 797, 798, 1061, 1063, 1066], "is_var": [44, 45, 89, 90, 777, 794, 795, 796, 797, 798], "gradient": [45, 75, 76, 90, 118, 131, 140, 141, 153, 154, 363, 387, 778, 779, 780, 781, 782, 783, 785, 787, 788, 790, 792, 794, 797, 799, 801, 803, 805, 807, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 1033, 1034, 1035, 1036, 1161, 1196, 1197, 1198, 1199, 1200, 1201], "conv1d": [48, 49, 93, 94, 821, 826, 1180], "stride": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "pad": [48, 49, 93, 94, 681, 710, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 971, 981, 984, 1029, 1032, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "data_format": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "nwc": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 1180, 1181, 1182], "dilat": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "batch_siz": [48, 49, 93, 94, 140, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1061, 1062], "d_in": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836], "convolut": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "fw": [48, 49, 93, 94, 124, 126, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836], "d_out": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831], "slide": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "valid": [48, 49, 68, 69, 93, 94, 113, 114, 124, 125, 126, 132, 137, 274, 297, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 971, 1017, 1020, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "algorithm": [48, 49, 73, 74, 93, 94, 154, 166, 168, 170, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187], "ncw": [48, 49, 93, 94, 821, 822, 823, 824, 825, 826, 827, 1180, 1181, 1182], "wio": [48, 49, 821, 822, 823, 825], "20": [48, 49, 58, 59, 85, 86, 87, 88, 103, 104, 139, 397, 468, 471, 503, 506, 508, 511, 635, 637, 638, 639, 655, 658, 755, 757, 759, 822, 823, 842, 858, 861, 898, 901, 930, 934, 1061, 1063, 1064, 1065, 1066, 1080, 1083, 1084, 1117, 1118, 1121], "depthwise_conv2d": [48, 49, 93, 94, 821, 836, 1161], "nhwc": [48, 49, 93, 94, 821, 828, 829, 832, 833, 834, 835, 836, 1180, 1183, 1184, 1187], "h": [48, 49, 93, 94, 117, 131, 821, 828, 829, 830, 831, 832, 833, 834, 835, 836, 1037, 1040, 1053], "fh": [48, 49, 93, 94, 821, 828, 829, 830, 831, 832, 833, 834, 835, 836], "nchw": [48, 49, 93, 94, 821, 828, 829, 832, 833, 834, 835, 836, 1180, 1183, 1184, 1187], "randint": [48, 49, 58, 59, 93, 94, 103, 104, 832, 833, 834, 836, 1061, 1067, 1161], "255": [48, 49, 93, 94, 832, 833, 834, 836], "128": [48, 49, 93, 94, 274, 321, 324, 821, 831, 832, 833, 834, 836, 842, 898, 901], "random_norm": [48, 49, 58, 59, 93, 94, 103, 104, 124, 821, 828, 831, 832, 833, 834, 835, 836, 842, 920, 924, 1061, 1072, 1085, 1086, 1090], "linear_algebra": [50, 51, 95, 96, 118, 139, 842, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 879, 882, 884, 886, 888, 891, 893, 896, 898, 901, 903, 905, 906, 909, 911, 913, 915, 918, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954], "choleski": [50, 51, 95, 96, 842, 847], "symmetr": [50, 51, 95, 96, 131, 842, 843, 844, 845, 846, 847, 863, 866, 867, 869, 950, 954], "cross": [50, 51, 52, 53, 95, 96, 97, 98, 842, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1161], "det": [50, 51, 95, 96, 842], "offset": [50, 51, 56, 57, 95, 96, 101, 102, 842, 858, 859, 860, 861, 862, 935, 936, 937, 938, 939, 1055, 1056, 1057, 1058, 1059, 1060], "axis1": [50, 51, 54, 55, 95, 96, 99, 100, 842, 858, 859, 860, 861, 862, 971, 1021, 1022, 1023, 1024], "axis2": [50, 51, 95, 96, 842, 858, 859, 860, 861, 862], "eigh": [50, 51, 95, 96, 842], "namedtupl": [50, 51, 62, 63, 95, 96, 107, 108, 842, 863, 864, 865, 866, 906, 907, 909, 920, 924, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1100], "eigvalsh": [50, 51, 72, 77, 78, 842], "inv": [50, 51, 95, 96, 139, 842, 1161], "matmul": [50, 51, 95, 96, 118, 124, 128, 137, 842, 920, 924, 1161], "matrix_norm": [50, 51, 75, 76, 95, 96, 842], "ord": [50, 51, 75, 76, 95, 96, 842, 879, 880, 881, 882, 883, 945, 946, 947, 948, 949], "fro": [50, 51, 95, 96, 842, 879, 880, 881, 882, 883], "keepdim": [50, 51, 66, 67, 68, 69, 75, 76, 95, 96, 111, 112, 113, 114, 135, 681, 775, 842, 879, 880, 881, 882, 883, 945, 946, 947, 948, 949, 1080, 1081, 1082, 1117, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "matrix_rank": [50, 51, 95, 96, 842], "rtol": [50, 51, 95, 96, 126, 842, 888, 889, 890, 891, 892, 903, 904, 905], "matrix_transpos": [50, 51, 95, 96, 139, 842], "outer": [50, 51, 95, 96, 842, 1033, 1034, 1035, 1036], "pinv": [50, 51, 72, 77, 78, 842, 1161], "qr": [50, 51, 95, 96, 842], "reduc": [50, 51, 68, 69, 75, 76, 95, 96, 113, 114, 139, 363, 387, 681, 706, 842, 906, 907, 908, 909, 910, 1080, 1081, 1082, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "solv": [50, 51, 95, 96, 138, 153, 842], "svd": [50, 51, 95, 96, 842, 925, 929, 1161], "full_matric": [50, 51, 95, 96, 842, 920, 921, 922, 923, 924], "svdval": [50, 51, 95, 96, 842], "tensordot": [50, 51, 95, 96, 842], "trace": [50, 51, 75, 76, 95, 96, 137, 154, 681, 733, 734, 736, 842], "vecdot": [50, 51, 95, 96, 842], "vector_norm": [50, 51, 75, 76, 95, 96, 842], "vector_to_skew_symmetric_matrix": [50, 51, 95, 96, 842, 1161], "binary_cross_entropi": [52, 53, 97, 98, 955, 960], "pred": [52, 53, 97, 98, 127, 131, 134, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "predict": [52, 53, 97, 98, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "amount": [52, 53, 97, 98, 133, 363, 393, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "smooth": [52, 53, 97, 98, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "binari": [52, 53, 97, 98, 397, 443, 446, 458, 461, 468, 471, 598, 601, 955, 956, 957, 958, 959, 960], "entropi": [52, 53, 97, 98, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970], "357": [52, 53, 97, 98, 955, 956, 957, 958, 959, 960, 966, 967, 969, 970], "223": [52, 53, 97, 98, 955, 956, 957, 958, 959, 960, 966, 967, 968, 970], "cross_entropi": [52, 53, 97, 98, 127, 131, 134, 955, 965, 966, 969], "along": [52, 53, 54, 55, 68, 69, 73, 74, 75, 76, 95, 96, 97, 98, 99, 100, 113, 114, 118, 134, 186, 188, 190, 204, 232, 233, 235, 236, 363, 387, 681, 701, 702, 713, 775, 842, 879, 882, 935, 939, 940, 944, 945, 949, 955, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 977, 980, 989, 992, 997, 1000, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1020, 1025, 1028, 1033, 1034, 1035, 1036, 1061, 1079, 1080, 1081, 1082, 1106, 1107, 1110, 1112, 1115, 1117, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "3862944": [52, 53, 955, 961, 962, 964], "sparse_cross_entropi": [52, 53, 97, 98, 955, 970], "logit": [52, 53, 97, 98, 955, 966, 967, 968, 969, 970], "spars": [52, 53, 97, 98, 955, 966, 967, 968, 969, 970], "loss": [53, 98, 118, 127, 140, 141, 142, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1161], "clip": [54, 55, 75, 76, 99, 100, 127, 131, 134, 137, 140, 142, 397, 603, 604, 681, 693, 694, 697, 971, 976, 1161], "x_min": [54, 55, 75, 76, 99, 100, 137, 142, 971, 972, 973, 974, 975, 976], "x_max": [54, 55, 75, 76, 99, 100, 137, 142, 971, 972, 973, 974, 975, 976], "roll": [54, 55, 99, 100, 119, 131, 971, 972, 973, 1002, 1003, 1011], "concat": [54, 55, 75, 76, 99, 100, 125, 363, 387, 681, 710, 971, 1161], "constant_pad": [54, 55, 99, 100, 971], "pad_width": [54, 55, 99, 100, 971, 981, 982, 983, 984, 1029, 1030, 1031, 1032], "expand_dim": [54, 55, 99, 100, 137, 140, 971, 1161], "flip": [54, 55, 99, 100, 139, 140, 142, 397, 448, 451, 971, 1161], "permute_dim": [54, 55, 99, 100, 971], "reshap": [54, 55, 75, 76, 99, 100, 124, 134, 137, 139, 142, 971, 1006, 1161], "nativeshap": [54, 55, 58, 59, 99, 100, 103, 104, 204, 212, 226, 248, 249, 266, 268, 681, 744, 752, 762, 764, 821, 827, 829, 831, 971, 1002, 1003, 1004, 1005, 1006, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "sequenc": [54, 55, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 122, 124, 125, 132, 135, 153, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 201, 202, 227, 229, 231, 251, 253, 255, 282, 284, 286, 292, 294, 296, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 681, 682, 684, 686, 690, 694, 696, 698, 714, 716, 718, 737, 755, 757, 759, 765, 766, 768, 794, 796, 798, 814, 815, 817, 843, 845, 847, 956, 958, 960, 961, 963, 965, 966, 968, 970, 971, 972, 974, 976, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1020, 1037, 1053, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1117, 1122, 1125, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 1189, 1194, 1195, 1202, 1203], "One": [54, 55, 58, 59, 75, 76, 99, 100, 103, 104, 124, 126, 132, 137, 139, 140, 681, 706, 971, 1002, 1003, 1004, 1005, 1006, 1061, 1063, 1064, 1065, 1066, 1067], "length": [54, 55, 72, 75, 76, 77, 78, 99, 100, 124, 126, 135, 140, 204, 205, 206, 238, 241, 842, 920, 924, 925, 929, 971, 1002, 1003, 1004, 1005, 1006], "valueerror": [54, 55, 99, 100, 137, 971, 1002, 1003, 1004, 1005, 1006, 1013, 1016], "reus": [54, 55, 99, 100, 124, 971, 1002, 1003, 1004, 1005, 1006], "memori": [54, 55, 99, 100, 133, 134, 152, 154, 363, 367, 382, 387, 393, 396, 821, 839, 971, 1002, 1003, 1004, 1005, 1006, 1161], "buffer": [54, 55, 99, 100, 154, 971, 1002, 1003, 1004, 1005, 1006], "larger": [54, 55, 99, 100, 124, 137, 142, 274, 310, 313, 971, 972, 975, 1007, 1008, 1009, 1010, 1011, 1117, 1138, 1141, 1146, 1149], "flatten": [54, 55, 62, 63, 75, 76, 95, 96, 99, 100, 107, 108, 681, 710, 842, 898, 901, 945, 949, 971, 997, 1000, 1007, 1008, 1009, 1010, 1011, 1080, 1081, 1082, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1101, 1105], "restor": [54, 55, 99, 100, 971, 1007, 1008, 1009, 1010, 1011], "squeez": [54, 55, 99, 100, 971, 1161], "stack": [54, 55, 75, 76, 99, 100, 137, 204, 256, 260, 261, 265, 842, 853, 856, 858, 861, 863, 866, 867, 869, 870, 873, 875, 878, 884, 886, 888, 891, 893, 896, 903, 905, 906, 909, 920, 924, 925, 929, 935, 939, 971, 1037, 1038, 1047, 1048, 1161, 1180, 1189], "swapax": [54, 55, 99, 100, 971], "axis0": [54, 55, 99, 100, 971, 1021, 1022, 1023, 1024], "tile": [54, 55, 99, 100, 971, 1161], "rep": [54, 55, 99, 100, 971, 1025, 1026, 1027, 1028], "zero_pad": [54, 55, 99, 100, 971, 1161], "layer_norm": [56, 57, 101, 102, 1055, 1060], "normalized_idx": [56, 57, 101, 102, 1055, 1056, 1057, 1058, 1059, 1060], "05": [56, 57, 101, 102, 124, 126, 681, 755, 758, 777, 778, 781, 1055, 1056, 1057, 1058, 1059, 1060], "scale": [56, 57, 101, 102, 125, 131, 363, 385, 386, 777, 803, 805, 821, 837, 840, 841, 1055, 1056, 1057, 1058, 1059, 1060, 1180, 1188, 1191, 1196, 1199], "new_std": [56, 57, 101, 102, 1055, 1056, 1057, 1058, 1059, 1060, 1194, 1195], "normal": [56, 57, 58, 59, 101, 102, 103, 104, 140, 971, 1017, 1020, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1068, 1069, 1070, 1071, 1072, 1194, 1195], "small": [56, 57, 101, 102, 122, 126, 127, 137, 141, 154, 397, 605, 608, 842, 888, 891, 903, 905, 1055, 1056, 1057, 1058, 1059, 1060, 1194, 1195], "constant": [56, 57, 101, 102, 118, 127, 141, 142, 154, 971, 981, 984, 1037, 1043, 1055, 1056, 1057, 1058, 1059, 1060, 1174, 1177, 1179, 1192, 1193, 1194, 1195], "denomin": [56, 57, 101, 102, 127, 154, 681, 709, 722, 747, 754, 1055, 1056, 1057, 1058, 1059, 1060, 1194, 1195], "learnabl": [56, 57, 101, 102, 142, 1055, 1056, 1057, 1058, 1059, 1060, 1194, 1195], "gamma": [56, 57, 101, 102, 1055, 1056, 1057, 1058, 1059, 1060], "beta": [56, 57, 101, 102, 1055, 1056, 1057, 1058, 1059, 1060], "after": [56, 57, 75, 76, 101, 102, 122, 124, 125, 131, 132, 136, 274, 357, 363, 364, 397, 655, 658, 777, 783, 785, 787, 788, 790, 792, 799, 801, 803, 805, 807, 809, 1055, 1056, 1057, 1058, 1059, 1060, 1196, 1197, 1198, 1199, 1200, 1201], "0976": [56, 57, 1055, 1056, 1057, 1059], "3452": [56, 57, 1055, 1056, 1057, 1059], "2740": [56, 57, 1055, 1056, 1057, 1059], "1047": [56, 57, 1055, 1056, 1057, 1059], "5886": [56, 57, 1055, 1056, 1057, 1059], "2732": [56, 57, 1055, 1056, 1057, 1059], "7696": [56, 57, 1055, 1056, 1057, 1059], "7024": [56, 57, 1055, 1056, 1057, 1059], "2518": [56, 57, 1055, 1056, 1057, 1059], "001": [56, 57, 140, 141, 274, 310, 313, 397, 640, 643, 777, 778, 781, 1055, 1056, 1057, 1059], "576": [56, 57, 1055, 1056, 1057, 1059], "292": [56, 57, 1055, 1056, 1057, 1059], "581": [56, 57, 777, 778, 781, 1055, 1056, 1057, 1059], "891": [56, 57, 165, 181, 184, 1055, 1056, 1057, 1059], "01": [56, 57, 103, 104, 142, 397, 635, 638, 640, 643, 842, 925, 929, 1055, 1056, 1057, 1059, 1061, 1068, 1071, 1073, 1075], "579": [56, 57, 1055, 1056, 1057, 1059], "931": [56, 57, 1055, 1056, 1057, 1059], "drawn": [58, 59, 103, 104, 124, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "highest": [58, 59, 103, 104, 1061, 1063, 1064, 1065, 1066, 1067], "sampl": [58, 59, 103, 104, 124, 821, 837, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1117, 1138, 1141, 1146, 1149, 1180, 1188], "low": [58, 59, 103, 104, 137, 1061, 1063, 1064, 1065, 1066, 1067, 1073, 1074, 1075, 1076, 1077], "uniform": [58, 59, 103, 104, 141, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1073, 1074, 1075, 1076, 1077, 1174, 1175, 1176, 1178], "half": [58, 59, 103, 104, 204, 205, 206, 1061, 1063, 1064, 1065, 1066, 1067, 1073, 1076], "interv": [58, 59, 68, 69, 103, 104, 113, 114, 137, 142, 204, 205, 206, 232, 233, 235, 236, 842, 940, 944, 971, 972, 975, 1017, 1020, 1061, 1063, 1064, 1065, 1066, 1067, 1073, 1074, 1075, 1076, 1077, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "int8": [58, 59, 103, 104, 124, 132, 274, 321, 324, 337, 340, 362, 1063, 1064, 1065], "int16": [58, 59, 103, 104, 124, 132, 274, 292, 295, 321, 324, 337, 340, 1063, 1064, 1065, 1117, 1134, 1137, 1142, 1145], "int64": [58, 59, 81, 82, 103, 104, 124, 132, 274, 292, 294, 295, 296, 309, 321, 324, 342, 345, 362, 397, 463, 466, 1063, 1064, 1065, 1080, 1081, 1082, 1117, 1134, 1137, 1142, 1145], "98": [58, 59, 85, 86, 103, 104, 397, 468, 471, 483, 485, 487, 650, 652, 654, 842, 898, 901, 1063, 1064, 1073, 1075, 1080, 1084, 1117, 1118, 1121], "46": [58, 59, 87, 88, 103, 104, 397, 640, 643, 755, 757, 759, 1063, 1064, 1068, 1070], "int32": [58, 59, 81, 82, 87, 88, 103, 104, 124, 132, 204, 269, 273, 274, 292, 294, 295, 296, 304, 307, 321, 324, 337, 340, 353, 681, 765, 766, 768, 769, 971, 985, 988, 1061, 1063, 1064, 1065, 1067, 1068, 1071, 1073, 1076, 1117, 1134, 1137, 1142, 1145], "std": [58, 59, 66, 67, 103, 104, 111, 112, 122, 1061, 1063, 1066, 1068, 1069, 1070, 1071, 1072, 1085, 1086, 1090, 1117], "non": [58, 59, 68, 69, 103, 104, 113, 114, 122, 131, 132, 137, 201, 202, 274, 277, 280, 326, 397, 588, 591, 593, 596, 821, 828, 842, 853, 856, 888, 891, 920, 924, 930, 934, 940, 944, 945, 949, 1061, 1068, 1069, 1070, 1071, 1072, 1080, 1081, 1082, 1083, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1192, 1193, 1196, 1200], "parameter": [58, 59, 103, 104, 1061, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "44": [58, 59, 103, 104, 397, 423, 426, 635, 638, 655, 658, 660, 663, 842, 898, 901, 1063, 1065, 1067, 1068, 1069, 1070, 1080, 1084, 1117, 1118, 1121], "72": [58, 59, 397, 503, 506, 508, 511, 777, 778, 781, 842, 898, 901, 1068, 1069, 1117, 1118, 1121], "235": [58, 59, 1068, 1069], "27": [58, 59, 103, 104, 397, 468, 471, 483, 486, 650, 653, 655, 658, 821, 841, 842, 898, 901, 1063, 1067, 1068, 1069, 1117, 1118, 1121], "22": [58, 59, 87, 88, 103, 104, 131, 397, 468, 471, 755, 757, 759, 842, 858, 861, 898, 901, 1037, 1054, 1063, 1065, 1068, 1069, 1070, 1073, 1075, 1080, 1084, 1117, 1118, 1121], "float16": [58, 59, 103, 104, 124, 125, 132, 274, 310, 313, 318, 319, 362, 1068, 1069, 1070, 1073, 1074, 1075], "26": [58, 59, 103, 104, 397, 468, 471, 488, 491, 650, 653, 777, 778, 781, 821, 832, 835, 842, 858, 861, 898, 901, 930, 934, 1063, 1065, 1068, 1069, 1117, 1118, 1121], "02": [58, 59, 85, 86, 103, 104, 423, 425, 777, 778, 781, 1061, 1068, 1069, 1070, 1073, 1076], "95": [58, 59, 103, 104, 397, 640, 643, 777, 778, 781, 1061, 1068, 1069, 1070, 1071, 1073, 1075], "807": [58, 59, 1068, 1069], "21": [58, 59, 85, 86, 103, 104, 274, 321, 324, 397, 423, 425, 433, 435, 436, 437, 468, 471, 681, 701, 842, 858, 861, 898, 901, 955, 966, 969, 1063, 1065, 1068, 1069, 1070, 1117, 1118, 1121], "random_uniform": [58, 59, 103, 104, 124, 133, 141, 1061, 1077, 1161], "boundari": [58, 59, 103, 104, 1061, 1073, 1074, 1075, 1076, 1077], "86": [58, 59, 103, 104, 777, 778, 781, 1068, 1070, 1073, 1074, 1075], "89": [58, 59, 103, 104, 124, 274, 321, 324, 397, 468, 471, 842, 930, 934, 1068, 1070, 1073, 1074, 1117, 1142, 1145], "06": [58, 59, 85, 86, 124, 274, 310, 313, 408, 410, 412, 483, 485, 487, 777, 778, 781, 1073, 1074], "53": [58, 59, 85, 86, 363, 393, 508, 510, 1073, 1074], "random": [59, 75, 76, 104, 118, 133, 142, 153, 1062, 1063, 1066, 1068, 1071, 1073, 1076, 1078, 1079, 1161], "unique_al": [62, 63, 107, 108, 1085], "unique_count": [62, 63, 107, 108, 1085, 1092], "count": [62, 63, 68, 69, 107, 108, 113, 114, 122, 140, 363, 381, 842, 940, 944, 971, 989, 992, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "field": [62, 63, 107, 108, 153, 842, 863, 866, 906, 909, 920, 924, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095], "uc": [62, 63, 1091, 1093], "unique_invers": [62, 63, 107, 108, 1085], "unique_valu": [62, 63, 107, 108, 1085], "argsort": [64, 65, 109, 110, 1106], "descend": [64, 65, 109, 110, 842, 920, 924, 925, 929, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116], "sort": [65, 72, 75, 76, 77, 78, 110, 118, 842, 863, 866, 920, 924, 925, 929, 1107, 1110, 1116], "einsum": [66, 67, 111, 112, 1117], "equat": [66, 67, 111, 112, 842, 915, 918, 1117, 1118, 1119, 1120, 1121], "min": [66, 67, 75, 76, 111, 112, 274, 310, 313, 321, 324, 397, 604, 681, 706, 743, 744, 754, 842, 906, 909, 920, 924, 925, 929, 945, 949, 1117], "prod": [66, 67, 75, 76, 111, 112, 122, 132, 681, 706, 1117], "var": [66, 67, 111, 112, 115, 116, 122, 137, 1033, 1034, 1035, 1117], "statist": [67, 112, 115, 116, 118, 124, 132, 1118, 1121, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149], "logic": [68, 69, 113, 114, 124, 129, 130, 132, 133, 139, 363, 379, 397, 583, 586, 588, 591, 593, 596, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "AND": [68, 69, 113, 114, 397, 443, 446, 583, 586, 1150, 1151, 1152, 1153, 1154, 1155], "reduct": [68, 69, 75, 76, 113, 114, 124, 132, 139, 681, 706, 743, 744, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161], "By": [68, 69, 113, 114, 122, 125, 127, 131, 134, 141, 142, 681, 701, 702, 842, 940, 944, 971, 997, 1000, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "rank": [68, 69, 113, 114, 204, 238, 241, 681, 775, 842, 848, 851, 888, 891, 906, 909, 915, 918, 935, 939, 940, 944, 945, 949, 971, 981, 984, 985, 988, 1017, 1020, 1029, 1032, 1080, 1083, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "backward": [68, 69, 113, 114, 154, 397, 630, 633, 842, 940, 944, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "invalid": [68, 69, 113, 114, 125, 132, 135, 842, 940, 944, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "singleton": [68, 69, 113, 114, 842, 945, 949, 971, 1013, 1016, 1080, 1082, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "accordingli": [68, 69, 113, 114, 125, 135, 204, 238, 241, 397, 508, 511, 842, 945, 949, 1080, 1082, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "dimension": [68, 69, 75, 76, 113, 114, 204, 205, 206, 218, 219, 238, 241, 842, 848, 851, 853, 856, 875, 878, 888, 891, 898, 901, 903, 905, 940, 944, 945, 949, 971, 1012, 1080, 1081, 1082, 1083, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160], "util": [69, 114, 118, 133, 363, 374, 1151, 1154, 1156, 1159], "add_ivy_array_instance_method": 70, "cl": [70, 71, 115, 116], "to_ignor": [70, 71, 115, 116, 1037, 1048], "loop": [70, 71, 115, 116, 128, 135, 154, 1033, 1034, 1035, 1036], "_wrap_funct": [70, 71, 115, 116, 127, 129], "toi": [70, 71, 115, 116], "arrayexampl": [70, 71], "hasattr": [70, 71, 115, 116, 120, 139], "dict_in": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "queue": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 140, 681, 742, 749], "queue_load_s": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "container_combine_method": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "list_join": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_limit": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "key_length_limit": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_ind": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "print_line_spac": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "ivyh": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "default_key_color": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "keyword_color_dict": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "rebuild_child_contain": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "types_to_iteratively_nest": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "alphabetical_kei": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "containerwithactiv": [72, 73, 77, 78], "containerwithcr": [72, 77, 78, 79], "containerwithdatatyp": [72, 77, 78, 81], "containerwithdevic": [72, 77, 78, 83], "containerwithelementwis": [72, 77, 78, 85, 131], "containerwithgener": [72, 77, 78, 87], "containerwithgradi": [72, 77, 78, 89], "containerwithimag": [72, 77, 78, 91], "containerwithlay": [72, 77, 78, 93], "containerwithlinearalgebra": [72, 77, 78, 95], "containerwithloss": [72, 77, 78, 97], "containerwithnorm": [72, 77, 78, 101], "containerwithrandom": [72, 77, 78, 103], "containerwithsearch": [72, 77, 78, 105], "containerwithset": [72, 77, 78, 107], "containerwithsort": [72, 77, 78, 109], "containerwithstatist": [72, 77, 78, 111], "containerwithutil": [72, 77, 78, 113], "represent": [72, 75, 76, 77, 78, 153, 203, 274, 275, 276, 310, 313, 321, 324, 363, 365, 366, 397, 398, 401, 413, 416, 443, 446, 458, 461, 468, 471, 598, 601, 605, 608, 681, 687, 763], "dictionari": [72, 75, 76, 77, 78, 140, 154, 363, 386], "asynchron": [72, 75, 76, 77, 78], "arriv": [72, 75, 76, 77, 78], "timeout": [72, 75, 76, 77, 78, 681, 742, 749], "whitespac": [72, 75, 76, 77, 78], "indent": [72, 75, 76, 77, 78, 140], "extra": [72, 75, 76, 77, 78, 122, 124, 125, 126, 129, 130, 137, 777, 787, 788], "newlin": [72, 75, 76, 77, 78, 121], "handl": [72, 75, 76, 77, 78, 117, 119, 124, 125, 126, 127, 129, 131, 132, 133, 134, 141, 201, 202, 363, 365, 366, 367, 368, 369, 372, 377, 381, 382, 393, 396, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1196, 1197, 1198, 1199, 1200, 1201], "color": [72, 75, 76, 77, 78, 1205, 1206], "map": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 119, 124, 127, 131, 140, 153, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 251, 253, 255, 282, 284, 286, 292, 294, 296, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 794, 796, 798, 814, 815, 817, 843, 845, 847, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 1002, 1004, 1006, 1007, 1009, 1011, 1037, 1044, 1045, 1049, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1151, 1153, 1155, 1156, 1158, 1160, 1180, 1191], "termcolor": [72, 75, 76, 77, 78], "rebuild": [72, 75, 76, 77, 78], "constructor": [72, 75, 76, 77, 78, 132, 133, 139, 681, 688, 1202, 1203], "param": [72, 75, 76, 77, 78, 87, 88, 137, 142, 681, 687, 713, 714, 717, 718], "alphabet": [72, 75, 76, 77, 78], "preserv": [72, 75, 76, 77, 78, 124, 142, 154, 777, 812, 971, 989, 992], "key_chain": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 299, 301, 304, 306, 308, 310, 312, 314, 315, 317, 318, 320, 321, 323, 325, 327, 329, 331, 332, 334, 336, 337, 339, 341, 342, 344, 346, 348, 350, 352, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 798, 799, 800, 802, 803, 804, 806, 807, 808, 810, 814, 815, 817, 843, 845, 847, 848, 850, 852, 853, 855, 857, 858, 860, 862, 863, 865, 870, 872, 875, 877, 879, 881, 883, 884, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 906, 908, 910, 911, 912, 914, 915, 917, 919, 920, 921, 923, 925, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 945, 946, 948, 950, 951, 953, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1037, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1097, 1099, 1101, 1102, 1104, 1107, 1109, 1111, 1112, 1114, 1116, 1118, 1120, 1122, 1124, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1151, 1153, 1155, 1156, 1158, 1160], "to_appli": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 299, 301, 304, 306, 308, 310, 312, 314, 315, 317, 318, 320, 321, 323, 325, 327, 329, 331, 332, 334, 336, 337, 339, 341, 342, 344, 346, 348, 350, 352, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 798, 799, 800, 802, 803, 804, 806, 807, 808, 810, 814, 815, 817, 843, 845, 847, 848, 850, 852, 853, 855, 857, 858, 860, 862, 863, 865, 870, 872, 875, 877, 879, 881, 883, 884, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 906, 908, 910, 911, 912, 914, 915, 917, 919, 920, 921, 923, 925, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 945, 946, 948, 950, 951, 953, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1037, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1097, 1099, 1101, 1102, 1104, 1107, 1109, 1111, 1112, 1114, 1116, 1118, 1120, 1122, 1124, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1151, 1153, 1155, 1156, 1158, 1160], "prune_unappli": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 299, 301, 304, 306, 308, 310, 312, 314, 315, 317, 318, 320, 321, 323, 325, 327, 329, 331, 332, 334, 336, 337, 339, 341, 342, 344, 346, 348, 350, 352, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 798, 799, 800, 802, 803, 804, 806, 807, 808, 810, 814, 815, 817, 843, 845, 847, 848, 850, 852, 853, 855, 857, 858, 860, 862, 863, 865, 870, 872, 875, 877, 879, 881, 883, 884, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 906, 908, 910, 911, 912, 914, 915, 917, 919, 920, 921, 923, 925, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 945, 946, 948, 950, 951, 953, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1037, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1097, 1099, 1101, 1102, 1104, 1107, 1109, 1111, 1112, 1114, 1116, 1118, 1120, 1122, 1124, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1151, 1153, 1155, 1156, 1158, 1160], "map_sequ": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 299, 301, 304, 306, 308, 310, 312, 314, 315, 317, 318, 320, 321, 323, 325, 327, 329, 331, 332, 334, 336, 337, 339, 341, 342, 344, 346, 348, 350, 352, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 798, 799, 800, 802, 803, 804, 806, 807, 808, 810, 814, 815, 817, 843, 845, 847, 848, 850, 852, 853, 855, 857, 858, 860, 862, 863, 865, 870, 872, 879, 881, 883, 884, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 906, 908, 910, 911, 912, 914, 915, 917, 919, 920, 921, 923, 925, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 945, 946, 948, 950, 951, 953, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1021, 1023, 1025, 1027, 1029, 1031, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1097, 1099, 1101, 1102, 1104, 1107, 1109, 1111, 1112, 1114, 1116, 1118, 1120, 1122, 1124, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1151, 1153, 1155, 1156, 1158, 1160], "static_arg_info": [72, 77, 78], "static_arg_nam": [72, 77, 78], "static_argmax": [72, 77, 78], "static_argmin": [72, 77, 78], "static_arrai": [72, 77, 78], "static_array_equ": [72, 77, 78], "static_arrays_equ": [72, 77, 78], "static_as_ivy_dev": [72, 77, 78], "static_as_ivy_dtyp": [72, 77, 78], "static_as_native_dev": [72, 77, 78], "static_as_native_dtyp": [72, 77, 78], "static_assert_supports_inplac": [72, 77, 78], "static_cache_fn": [72, 77, 78], "static_clear_mem_on_dev": [72, 77, 78], "static_clip_matrix_norm": [72, 77, 78], "static_closest_valid_dtyp": [72, 77, 78], "static_concat": [72, 77, 78], "static_constant_pad": [72, 77, 78], "static_container_typ": [72, 77, 78], "static_conv1d_transpos": [72, 77, 78], "static_conv2d": [72, 77, 78], "static_conv2d_transpos": [72, 77, 78], "static_conv3d": [72, 77, 78], "static_conv3d_transpos": [72, 77, 78], "static_copy_arrai": [72, 77, 78], "static_cumprod": [72, 77, 78], "static_cumsum": [72, 77, 78], "static_current_backend": [72, 77, 78], "static_current_backend_str": [72, 77, 78], "static_default": [72, 77, 78], "static_default_devic": [72, 77, 78], "static_default_dtyp": [72, 77, 78], "static_default_int_dtyp": [72, 77, 78], "static_default_uint_dtyp": [72, 77, 78], "static_dev_util": [72, 77, 78], "static_dropout": [72, 77, 78], "static_dtype_bit": [72, 77, 78], "static_eigh": [72, 77, 78], "static_eigvalsh": [72, 77, 78], "static_einops_rearrang": [72, 77, 78], "static_einops_reduc": [72, 77, 78], "static_einops_repeat": [72, 77, 78], "static_einsum": [72, 77, 78], "static_empti": [72, 77, 78], "static_exist": [72, 77, 78], "static_expand_dim": [72, 77, 78], "static_flip": [72, 77, 78], "static_floormod": [72, 77, 78], "static_fourier_encod": [72, 77, 78], "static_ful": [72, 77, 78], "static_function_supported_devic": [72, 77, 78], "static_function_supported_devices_and_dtyp": [72, 77, 78], "static_function_unsupported_devic": [72, 77, 78], "static_function_unsupported_devices_and_dtyp": [72, 77, 78], "static_gath": [72, 77, 78], "static_get_all_arrays_in_memori": [72, 77, 78], "static_get_all_ivy_arrays_on_dev": [72, 77, 78], "static_get_array_mod": [72, 77, 78], "static_get_min_bas": [72, 77, 78], "static_get_min_denomin": [72, 77, 78], "static_get_nestable_mod": [72, 77, 78], "static_get_num_dim": [72, 77, 78], "static_get_referrers_recurs": [72, 77, 78], "static_gpu_is_avail": [72, 77, 78], "static_handle_nest": [72, 77, 78], "static_handle_out_argu": [72, 77, 78], "static_has_nan": [72, 77, 78], "static_indices_wher": [72, 77, 78], "static_infer_devic": [72, 77, 78], "static_infer_dtyp": [72, 77, 78], "static_inplace_arrays_support": [72, 77, 78], "static_inplace_decr": [72, 77, 78], "static_inplace_incr": [72, 77, 78], "static_inplace_upd": [72, 77, 78], "static_inplace_variables_support": [72, 77, 78], "static_inputs_to_native_arrai": [72, 77, 78], "static_invalid_dtyp": [72, 77, 78], "static_is_arrai": [72, 77, 78], "static_is_ivy_arrai": [72, 77, 78], "static_is_ivy_contain": [72, 77, 78], "static_is_native_arrai": [72, 77, 78], "static_linear": [72, 77, 78], "static_lstm_upd": [72, 77, 78], "static_match_kwarg": [72, 77, 78], "static_matmul": [72, 77, 78], "static_max": [72, 77, 78], "static_maximum": [72, 77, 78], "static_mean": [72, 77, 78], "static_min": [72, 77, 78], "static_minimum": [72, 77, 78], "static_multi_head_attent": [72, 77, 78], "static_multinomi": [72, 77, 78], "static_multiprocess": [72, 77, 78], "static_nonzero": [72, 77, 78], "static_num_arrays_in_memori": [72, 77, 78], "static_num_cpu_cor": [72, 77, 78], "static_num_gpu": [72, 77, 78], "static_num_ivy_arrays_on_dev": [72, 77, 78], "static_one_hot": [72, 77, 78], "static_outputs_to_ivy_arrai": [72, 77, 78], "static_percent_used_mem_on_dev": [72, 77, 78], "static_permute_dim": [72, 77, 78], "static_pinv": [72, 77, 78], "static_print_all_arrays_in_memori": [72, 77, 78], "static_print_all_ivy_arrays_on_dev": [72, 77, 78], "static_prod": [72, 77, 78], "static_promote_typ": [72, 77, 78], "static_queue_timeout": [72, 77, 78], "static_scaled_dot_product_attent": [72, 77, 78], "static_scatter_flat": [72, 77, 78], "static_scatter_nd": [72, 77, 78], "static_se": [72, 77, 78], "static_set_array_mod": [72, 77, 78], "static_set_default_devic": [72, 77, 78], "static_set_default_dtyp": [72, 77, 78], "static_set_default_float_dtyp": [72, 77, 78], "static_set_default_int_dtyp": [72, 77, 78], "static_set_default_uint_dtyp": [72, 77, 78], "static_set_min_bas": [72, 77, 78], "static_set_min_denomin": [72, 77, 78], "static_set_nestable_mod": [72, 77, 78], "static_set_queue_timeout": [72, 77, 78], "static_set_shape_array_mod": [72, 77, 78], "static_set_split_factor": [72, 77, 78], "static_set_tmp_dir": [72, 77, 78], "static_set_with_grad": [72, 77, 78], "static_shap": [72, 77, 78], "static_shape_array_mod": [72, 77, 78], "static_shuffl": [72, 77, 78], "static_split": [72, 77, 78], "static_split_factor": [72, 77, 78], "static_split_func_cal": [72, 77, 78], "static_squeez": [72, 77, 78], "static_stable_divid": [72, 77, 78], "static_stack": [72, 77, 78], "static_std": [72, 77, 78], "static_stop_gradi": [72, 77, 78], "static_sum": [72, 77, 78], "static_supports_inplac": [72, 77, 78], "static_swapax": [72, 77, 78], "static_til": [72, 77, 78], "static_tmp_dir": [72, 77, 78], "static_to_ivy_shap": [72, 77, 78], "static_to_list": [72, 77, 78], "static_to_native_arrays_and_back": [72, 77, 78], "static_to_native_shap": [72, 77, 78], "static_to_scalar": [72, 77, 78], "static_total_mem_on_dev": [72, 77, 78], "static_tpu_is_avail": [72, 77, 78], "static_try_else_non": [72, 77, 78], "static_type_promote_arrai": [72, 77, 78], "static_unset_array_mod": [72, 77, 78], "static_unset_default_devic": [72, 77, 78], "static_unset_default_dtyp": [72, 77, 78], "static_unset_default_float_dtyp": [72, 77, 78], "static_unset_default_int_dtyp": [72, 77, 78], "static_unset_default_uint_dtyp": [72, 77, 78], "static_unset_nestable_mod": [72, 77, 78], "static_unset_shape_array_mod": [72, 77, 78], "static_unset_with_grad": [72, 77, 78], "static_unstack": [72, 77, 78], "static_used_mem_on_dev": [72, 77, 78], "static_valid_dtyp": [72, 77, 78], "static_value_is_nan": [72, 77, 78], "static_var": [72, 77, 78], "static_variable_data": [72, 77, 78], "static_wher": [72, 77, 78], "static_with_grad": [72, 77, 78], "static_zero_pad": [72, 77, 78], "containerbas": [73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 131], "formul": [73, 74, 166, 168, 170], "chain": [73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 130, 131, 141, 142, 154, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 251, 253, 255, 282, 284, 286, 292, 294, 296, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 794, 796, 798, 814, 815, 817, 843, 845, 847, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 1002, 1004, 1006, 1007, 1009, 1011, 1033, 1034, 1035, 1037, 1050, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1151, 1153, 1155, 1156, 1158, 1160, 1202, 1203], "prune": [73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 113, 114, 166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 227, 229, 231, 251, 253, 255, 282, 284, 286, 292, 294, 296, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 794, 796, 798, 814, 815, 817, 843, 845, 847, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 1002, 1004, 1006, 1007, 1009, 1011, 1037, 1050, 1051, 1052, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1091, 1092, 1094, 1151, 1153, 1155, 1156, 1158, 1160], "unit": [73, 74, 123, 124, 154, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195], "slope": [73, 74, 165, 171, 173, 174, 175], "leaki": [73, 74, 165, 171, 173, 174, 175], "rectifi": [73, 74, 165, 171, 174, 176, 178, 179, 180], "static_gelu": [73, 74, 166], "static_leaky_relu": [73, 74, 171], "static_relu": [73, 74, 176], "static_sigmoid": [73, 74, 181], "static_softmax": [73, 74, 186], "static_softplu": [73, 74, 191], "static_tanh": [73, 74, 85, 86, 196], "96": [73, 74, 85, 86, 103, 104, 196, 197, 397, 478, 480, 481, 482, 670, 674, 777, 778, 781, 842, 898, 901, 1073, 1075, 1117, 1118, 1121], "995": [73, 74, 85, 86, 165, 196, 197, 199, 200, 397, 675], "9999": [73, 74, 85, 86, 196, 197], "__getitem__": [75, 76, 131], "queri": [75, 76, 131, 132, 139, 363, 374, 386, 821, 840, 841, 1180, 1191], "slice": [75, 76, 681, 713, 714, 717, 1037, 1046], "__setitem__": [75, 76, 130, 131, 139], "val": [75, 76, 134, 139, 681, 729, 730, 731, 746, 747], "all_fals": [75, 76], "assert_is_bool": [75, 76], "entri": [75, 76, 204, 232, 233, 235, 236, 971, 1012, 1037, 1050], "assert": [75, 76, 120, 124, 135, 139, 140, 681, 691], "all_key_chain": [75, 76], "include_empti": [75, 76], "all_tru": [75, 76, 131, 140], "arrays_as_list": [75, 76], "intermedi": [75, 76], "as_arrai": [75, 76, 681, 724, 752], "as_bool": [75, 76], "as_vari": [75, 76, 124, 126], "as_zero": [75, 76], "assert_contains_sub_contain": [75, 76], "sub_cont": [75, 76], "diff": [75, 76, 131, 140], "screen": [75, 76, 140], "assert_contains_sub_structur": [75, 76], "check_shap": [75, 76], "assert_ident": [75, 76], "check_typ": [75, 76], "same_arrai": [75, 76, 140], "assert_identical_structur": [75, 76], "at_key_chain": [75, 76], "ignore_key_error": [75, 76], "ignore_non": [75, 76], "at_kei": [75, 76], "ignor": [75, 76, 122, 124, 154, 204, 238, 241, 870, 874, 925, 926, 1037, 1048, 1196, 1200], "substr": [75, 76], "clip_min": [75, 76], "clip_max": [75, 76], "config": [75, 76, 140, 1037, 1050], "duplic": [75, 76, 121, 128, 129, 135, 139, 141], "container_rightmost": [75, 76], "common_key_chain": [75, 76, 131], "contains_sub_contain": [75, 76], "match": [75, 76, 131, 274, 277, 280, 397, 630, 633, 681, 737], "contains_sub_structur": [75, 76], "create_if_abs": [75, 76], "inplac": [75, 76, 89, 90, 117, 119, 122, 129, 130, 139, 141, 681, 691, 728, 731, 732, 760, 777, 783, 784, 785, 786, 790, 791, 792, 793, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 1172, 1173, 1196, 1197, 1198, 1199, 1200, 1201], "cutoff_at_depth": [75, 76], "depth_cutoff": [75, 76], "cutoff_at_height": [75, 76], "height_cutoff": [75, 76], "deep_copi": [75, 76, 140], "intern": [75, 76, 121, 124, 130, 131, 133, 134, 777, 819, 1037, 1038, 1047, 1048, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1202, 1203], "belong": [75, 76, 141], "dev_clon": [75, 76], "dev_dist": [75, 76], "dev_str": [75, 76], "diff_kei": [75, 76], "detect_key_diff": [75, 76], "detect_value_diff": [75, 76], "detect_shape_diff": [75, 76], "treat": [75, 76, 124, 138, 142, 201, 202], "container0": [75, 76], "axes_length": [75, 76, 681, 705, 706, 707], "rearrang": [75, 76, 681, 705, 707], "callabl": [75, 76, 120, 124, 131, 137, 155, 156, 157, 158, 159, 160, 161, 162, 163, 201, 202, 274, 315, 316, 318, 319, 363, 375, 376, 387, 681, 687, 692, 704, 706, 711, 712, 1033, 1034, 1035, 1036, 1037, 1043, 1044, 1045, 1047, 1048, 1049, 1050], "find_sub_contain": [75, 76], "sub_cont_to_find": [75, 76], "exsit": [75, 76], "find_sub_structur": [75, 76], "sub_struc_to_find": [75, 76], "flatten_key_chain": [75, 76, 140, 1192, 1193], "__": [75, 76, 122, 140], "above_height": [75, 76, 140], "below_depth": [75, 76, 140], "format_key_chain": [75, 76], "format_fn": [75, 76], "string": [75, 76, 128, 132, 133, 135, 137, 140, 274, 275, 276, 304, 307, 326, 362, 363, 365, 366, 367, 368, 374, 382, 388, 392, 393, 396, 681, 703], "from_disk_as_hdf5": [75, 76, 140], "h5_obj_or_filepath": [75, 76], "slice_obj": [75, 76], "load": [75, 76, 154], "disk": [75, 76, 140], "h5py": [75, 76], "hdf5": [75, 76, 140, 1192, 1193], "h5": [75, 76], "from_disk_as_json": [75, 76, 140], "json_filepath": [75, 76], "json": [75, 76, 140], "from_disk_as_pickl": [75, 76, 140], "pickle_filepath": [75, 76], "pickl": [75, 76, 131, 140], "from_flat_list": [75, 76], "flat_list": [75, 76], "hierarchi": [75, 76, 140], "flat": [75, 76, 681, 743, 971, 997, 1000], "popul": [75, 76, 124, 132, 133, 137, 1061, 1062, 1117, 1138, 1141, 1146, 1149], "from_numpi": [75, 76, 140], "h5_file_s": [75, 76], "batch": [75, 76, 127, 131, 140, 363, 385, 386, 681, 710, 821, 838, 842, 945, 949, 1033, 1034, 1035, 1036, 1055, 1056, 1059, 1194, 1195], "handle_inplac": [75, 76], "prime": [75, 76], "overwritten": [75, 76, 128, 130], "has_kei": [75, 76], "query_kei": [75, 76], "somewher": [75, 76], "has_key_chain": [75, 76], "include_inf": [75, 76, 681, 726, 776], "leafwis": [75, 76], "well": [75, 76, 124, 125, 134, 141, 142, 153, 681, 726, 842, 915, 918], "inf": [75, 76, 95, 96, 124, 203, 397, 433, 436, 508, 511, 538, 541, 681, 726, 776, 842, 945, 949], "identical_array_shap": [75, 76], "identical_config": [75, 76], "identical_structur": [75, 76], "if_exist": [75, 76], "key_chains_contain": [75, 76], "sub_str": [75, 76], "join": [75, 76, 971, 977, 980, 1017, 1020, 1161], "list_stack": [75, 76, 140], "dim": [75, 76, 125, 126, 132, 681, 740, 1180, 1191], "func": [75, 76, 89, 90, 131, 201, 202, 363, 387, 681, 692, 777, 787, 788, 789, 1037, 1050], "map_cont": [75, 76], "include_self": [75, 76], "possibi": [75, 76], "max_depth": [75, 76, 681, 725, 1037, 1049], "multi_map": [75, 76, 131], "map_nest": [75, 76, 95, 96, 99, 100, 875, 877, 977, 979, 1017, 1019], "leftmost": [75, 76, 1037, 1050], "multi_map_in_static_method": [75, 76, 131], "fn_name": [75, 76, 126], "num_arrai": [75, 76, 124], "overwrite_at_key_chain": [75, 76], "target_dict": [75, 76], "return_dict": [75, 76], "prune_empti": [75, 76], "keep_non": [75, 76], "prune_key_chain": [75, 76], "key1": [75, 76, 141], "key2": [75, 76], "key3": [75, 76], "prune_key_from_key_chain": [75, 76], "prune_kei": [75, 76], "prune_keys_from_key_chain": [75, 76], "remove_key_length_limit": [75, 76], "remove_print_limit": [75, 76], "reshape_lik": [75, 76], "leading_shap": [75, 76], "return_cont": [75, 76], "restructur": [75, 76], "keep_orig": [75, 76], "transpos": [75, 76, 139, 142, 821, 827, 829, 831, 842, 893, 896, 903, 905, 1161, 1180, 1182, 1184, 1186], "restructure_key_chain": [75, 76], "keychain_map": [75, 76], "set_at_key_chain": [75, 76], "set_at_kei": [75, 76], "set_framework": [75, 76, 137, 139, 140, 142], "set_ivy_backend": [75, 76], "ivy_backend": [75, 76], "attribut": [75, 76, 120, 121, 125, 131, 132, 138, 139, 140, 141, 274, 310, 313, 315, 316, 318, 319, 321, 324, 363, 375, 376, 383, 681, 711, 712], "show_sub_contain": [75, 76], "sub_cont_or_keychain": [75, 76], "seed_valu": [75, 76, 1061, 1078], "shuffle_h5_fil": [75, 76], "dataset": [75, 76, 140, 152, 1161], "size_ordered_arrai": [75, 76], "keychain": [75, 76], "smallest": [75, 76, 274, 310, 313, 321, 324, 397, 473, 476], "largest": [75, 76, 153, 274, 310, 313, 321, 324, 842, 920, 924], "slice_kei": [75, 76], "key_slic": [75, 76], "all_depth": [75, 76], "slice_via_kei": [75, 76], "sort_by_kei": [75, 76], "num_or_size_split": [75, 76, 137, 971, 1012], "with_remaind": [75, 76, 971, 1012], "constitu": [75, 76, 142], "evenli": [75, 76, 204, 205, 206, 232, 233, 235, 236, 971, 1012], "preserve_typ": [75, 76, 777, 812], "stop": [75, 76, 79, 80, 137, 154, 204, 205, 206, 207, 232, 233, 234, 235, 236, 237, 363, 364, 387, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 812, 1033, 1034, 1035, 1036, 1196, 1197, 1198, 1199, 1200, 1201], "structural_diff": [75, 76], "target": [75, 76, 117, 136, 140, 141, 142, 363, 367, 1161], "to_dict": [75, 76], "to_disk_as_hdf5": [75, 76, 140], "starting_index": [75, 76], "max_batch_s": [75, 76], "later": [75, 76, 124, 681, 692], "to_disk_as_json": [75, 76, 140], "to_disk_as_pickl": [75, 76, 140], "to_flat_list": [75, 76], "to_iter": [75, 76, 131], "leaf_keys_onli": [75, 76], "to_iterator_kei": [75, 76], "to_iterator_valu": [75, 76], "to_json": [75, 76], "update_backend": [75, 76], "to_raw": [75, 76], "raw": [75, 76, 121], "trim_kei": [75, 76], "max_length": [75, 76], "try_kc": [75, 76], "tri": [75, 76], "concatten": [75, 76, 95, 96, 363, 387], "dim_siz": [75, 76], "update_config": [75, 76], "global_norm": [75, 76, 95, 96], "with_default_key_color": [75, 76], "with_entries_as_list": [75, 76], "with_ivy_backend": [75, 76], "with_key_length_limit": [75, 76, 140], "with_print_ind": [75, 76, 140], "with_print_limit": [75, 76, 140], "with_print_line_spac": [75, 76], "2324": [79, 80, 204, 227, 229, 230, 231], "234": [79, 80, 204, 227, 229, 230, 231], "123": [79, 80, 124, 204, 227, 229, 230, 231, 681, 708], "static_arang": [79, 80, 205], "static_asarrai": [79, 80, 208], "static_empty_lik": [79, 80, 213], "static_ey": [79, 80, 218], "n_row": [79, 80, 204, 218, 219, 220], "n_col": [79, 80, 204, 218, 219, 220], "static_from_dlpack": [79, 80, 221], "static_full_lik": [79, 80, 227], "static_linspac": [79, 80, 232], "num": [79, 80, 137, 204, 232, 233, 234, 235, 236, 237], "endpoint": [79, 80, 204, 232, 233, 234, 235, 237], "static_logspac": [79, 80, 235], "static_meshgrid": [79, 80, 238], "static_native_arrai": [79, 80, 243], "static_on": [79, 80, 248], "static_ones_lik": [79, 80, 251], "static_tril": [79, 80, 256], "static_triu": [79, 80, 261], "static_zero": [79, 80, 266], "static_zeros_lik": [79, 80, 269], "broadcats": [81, 82, 282, 284], "static_astyp": [81, 82, 277], "static_broadcast_arrai": [81, 82, 282], "And": [81, 82, 282, 286], "static_broadcast_to": [81, 82, 287], "static_can_cast": [81, 82, 292], "from_": [81, 82, 274, 292, 295, 296], "static_default_float_dtyp": [81, 82, 299], "float_dtyp": [81, 82, 274, 299, 300, 301, 354], "static_dtyp": [81, 82, 304], "static_finfo": [81, 82, 310], "static_function_supported_dtyp": [81, 82, 315], "fn": [81, 82, 120, 137, 139, 155, 156, 157, 158, 159, 160, 161, 162, 163, 274, 315, 316, 317, 318, 319, 320, 363, 375, 376, 681, 687, 711, 712, 771, 1037, 1038, 1043, 1044, 1045, 1047, 1048, 1049, 1164, 1166], "static_function_unsupported_dtyp": [81, 82, 318], "static_iinfo": [81, 82, 321], "static_is_bool_dtyp": [81, 82, 327], "dtype_in": [81, 82, 274, 275, 276, 309, 326, 327, 330, 331, 332, 335, 336, 337, 340, 341, 342, 345, 346, 362], "static_is_float_dtyp": [81, 82, 332], "static_is_int_dtyp": [81, 82, 337], "static_is_uint_dtyp": [81, 82, 342], "static_result_typ": [81, 82, 348], "static_dev": [83, 84, 369], "static_to_devic": [83, 84, 388], "61": [85, 86, 97, 98, 103, 104, 397, 423, 425, 660, 663, 821, 832, 835, 955, 956, 958, 959, 960, 966, 968, 970, 1073, 1075], "41": [85, 86, 87, 88, 95, 96, 139, 397, 428, 430, 431, 432, 468, 471, 655, 658, 681, 694, 697, 698, 842, 843, 845, 846, 847, 1061, 1073, 1076, 1117, 1142, 1145], "915": [85, 86, 397, 433, 435, 436, 437], "29": [85, 86, 103, 104, 397, 433, 435, 436, 437, 1063, 1065, 1068, 1070, 1073, 1075, 1077], "983": [85, 86, 397, 433, 435, 436, 437], "75": [85, 86, 93, 94, 103, 104, 397, 423, 426, 427, 433, 435, 436, 437, 488, 491, 822, 824, 826, 842, 870, 873, 898, 901, 1061, 1068, 1072, 1073, 1076], "35": [85, 86, 103, 104, 397, 433, 435, 436, 437, 655, 658, 821, 841, 842, 848, 851, 1068, 1070, 1072, 1073, 1077, 1080, 1084, 1117, 1118, 1121], "978": [85, 86, 165, 181, 184, 397, 433, 435, 436, 437], "696": [85, 86, 103, 104, 397, 433, 435, 436, 437, 1068, 1070], "993": [85, 86, 397, 433, 435, 436, 437], "203": [85, 86, 438, 440, 442], "34": [85, 86, 103, 104, 274, 321, 324, 397, 468, 471, 483, 485, 487, 650, 652, 654, 655, 658, 1061, 1063, 1067, 1068, 1070, 1073, 1076], "52": [85, 86, 103, 104, 397, 433, 436, 483, 485, 487, 488, 490, 491, 492, 777, 778, 781, 842, 898, 901, 1073, 1075, 1085, 1086, 1090, 1117, 1118, 1121], "333": [85, 86, 397, 488, 490, 491, 492, 681, 694, 697, 821, 832, 835], "thefunct": [85, 86, 498, 500, 508, 512, 513, 517], "649": [85, 86, 508, 510], "220": [85, 86, 508, 510], "959": [85, 86, 397, 508, 510, 645, 647, 648, 649], "865": [85, 86, 508, 510], "metho": [85, 86, 528, 530, 573, 575], "300": [85, 86, 124, 397, 635, 637, 638, 639], "527": [85, 86, 397, 635, 637, 638, 639], "301": [85, 86, 397, 635, 637, 638, 639], "757": [85, 86, 397, 645, 647, 648, 649], "279": [85, 86, 397, 645, 647, 648, 649], "835": [85, 86, 650, 652, 654], "347": [85, 86, 650, 652, 654], "721": [85, 86, 650, 652, 654], "static_ab": [85, 86, 398], "static_aco": [85, 86, 403], "static_acosh": [85, 86, 408], "static_add": [85, 86, 121, 122, 131, 413], "static_asin": [85, 86, 418], "static_asinh": [85, 86, 423], "97": [85, 86, 103, 104, 397, 423, 426, 427, 1068, 1070], "static_atan": [85, 86, 428], "static_atan2": [85, 86, 433], "static_atanh": [85, 86, 438], "static_bitwise_and": [85, 86, 443], "static_bitwise_invert": [85, 86, 448], "static_bitwise_left_shift": [85, 86, 453], "static_bitwise_or": [85, 86, 458], "static_bitwise_right_shift": [85, 86, 463], "static_bitwise_xor": [85, 86, 468], "static_ceil": [85, 86, 473], "static_co": [85, 86, 478], "static_cosh": [85, 86, 483], "static_divid": [85, 86, 131, 488], "static_equ": [85, 86, 493], "static_erf": [85, 86, 498], "static_exp": [85, 86, 503], "static_expm1": [85, 86, 397, 508, 511], "areal": [85, 86, 508, 512], "static_floor": [85, 86, 513], "static_floor_divid": [85, 86, 518], "static_great": [85, 86, 523], "static_greater_equ": [85, 86, 528], "static_isfinit": [85, 86, 533], "x_i": [85, 86, 121, 165, 196, 200, 397, 398, 401, 403, 406, 408, 411, 418, 421, 423, 426, 428, 431, 448, 451, 473, 476, 478, 481, 483, 486, 503, 506, 508, 511, 513, 516, 533, 536, 537, 538, 541, 542, 543, 546, 547, 558, 561, 563, 566, 573, 576, 588, 591, 610, 613, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 670, 674, 675, 676, 680, 1085, 1086, 1090, 1091, 1095, 1101, 1105, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1138, 1141, 1142, 1145, 1146, 1149], "static_isinf": [85, 86, 397, 538, 541], "static_isnan": [85, 86, 543], "static_less": [85, 86, 548], "static_less_equ": [85, 86, 553], "static_log": [85, 86, 558], "static_log10": [85, 86, 563], "static_log1p": [85, 86, 568], "static_log2": [85, 86, 573], "static_logaddexp": [85, 86, 578], "static_logical_and": [85, 86, 583], "static_logical_not": [85, 86, 588], "static_logical_or": [85, 86, 593], "static_logical_xor": [85, 86, 598], "static_multipli": [85, 86, 131, 605], "static_neg": [85, 86, 610], "static_not_equ": [85, 86, 615], "static_posit": [85, 86, 620], "static_pow": [85, 86, 625], "static_remaind": [85, 86, 630], "static_round": [85, 86, 635], "thevfunct": [85, 86, 635, 639], "static_sign": [85, 86, 640], "static_sin": [85, 86, 645], "static_sinh": [85, 86, 650], "static_sqrt": [85, 86, 655], "static_squar": [85, 86, 660], "static_subtract": [85, 86, 131, 665], "static_tan": [85, 86, 122, 131, 670], "143": [85, 86, 122, 397, 670, 671, 673, 674], "38": [85, 86, 103, 104, 122, 274, 310, 313, 397, 670, 671, 673, 674, 1073, 1077], "static_trunc": [85, 86, 676], "static_all_equ": [87, 88, 682, 684], "667": [87, 88, 397, 488, 491, 694, 696, 1085, 1086, 1090], "833": [87, 88, 694, 696], "_min_denomin": [87, 88, 681, 754, 755, 757, 759], "1000": [87, 88, 140, 397, 655, 658, 755, 757, 759], "3380": [87, 88, 755, 757, 759], "8000": [87, 88, 755, 757, 759], "15600": [87, 88, 755, 757, 759], "00108001": [87, 88, 755, 757, 759], "243": [87, 88, 681, 755, 757, 758, 759], "00405003": [87, 88, 755, 757, 759], "10000": [87, 88, 755, 757, 759], "04000006": [87, 88, 755, 757, 759], "100000": [87, 88, 755, 757, 759], "500001": [87, 88, 755, 757, 759], "140": [87, 88, 755, 757, 759], "29821987": [87, 88, 755, 757, 759], "19683": [87, 88, 755, 757, 759], "59049787": [87, 88, 755, 757, 759], "16229189e": [87, 88, 755, 757, 759], "04": [87, 88, 101, 102, 274, 310, 313, 397, 508, 511, 755, 757, 759, 821, 841, 1055, 1056, 1058, 1059, 1060], "00000900e": [87, 88, 755, 757, 759], "09": [87, 88, 103, 104, 397, 660, 663, 755, 757, 759, 821, 841, 1068, 1070], "65": [87, 88, 103, 104, 755, 757, 759, 777, 778, 781, 842, 898, 901, 1068, 1070, 1073, 1075, 1117, 1118, 1121], "66": [87, 88, 397, 468, 471, 755, 757, 759, 842, 898, 901, 1117, 1118, 1121], "87": [87, 88, 89, 90, 755, 757, 759, 777, 778, 781, 782], "907": [87, 88, 755, 757, 759], "static_clip_vector_norm": [87, 88, 694], "849": [87, 88, 681, 694, 697, 698], "static_gather_nd": [87, 88, 714], "static_stable_pow": [87, 88, 755], "static_to_numpi": [87, 88, 765, 768], "lr": [89, 90, 140, 141, 777, 783, 784, 785, 786, 790, 791, 792, 793, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 1196, 1197, 1198, 1199, 1200, 1201], "mw_tm1": [89, 90, 777, 783, 784, 785, 786, 799, 800, 801, 802], "vw_tm1": [89, 90, 777, 783, 784, 785, 786, 799, 800, 801, 802], "max_trust_ratio": [89, 90, 777, 799, 800, 801, 802, 1196, 1198], "decay_lambda": [89, 90, 777, 799, 800, 801, 802, 803, 804, 805, 806, 1196, 1198, 1199], "effective_grad": [89, 90, 777, 807, 808, 809, 810], "static_adam_step": [89, 90, 778], "976": [89, 90, 165, 196, 200, 397, 675, 777, 778, 781, 782], "static_adam_upd": [89, 90, 783], "static_execute_with_gradi": [89, 90, 787], "retain_grad": [89, 90, 131, 777, 787, 788, 789], "static_gradient_descent_upd": [89, 90, 790], "static_is_vari": [89, 90, 794], "static_lamb_upd": [89, 90, 799], "static_lars_upd": [89, 90, 803], "static_optimizer_upd": [89, 90, 807], "static_vari": [89, 90, 814], "inp": [93, 94, 821, 832, 834, 835, 836], "static_conv1d": [93, 94, 822], "static_depthwise_conv2d": [93, 94, 832], "73": [95, 96, 124, 397, 655, 658, 842, 843, 845, 846, 847, 1055, 1056, 1059, 1061, 1068, 1071], "577": [95, 96, 842, 843, 845, 846, 847], "707": [95, 96, 842, 843, 845, 846, 847], "liter": [95, 96, 135, 842, 945, 949], "nuc": [95, 96], "static_choleski": [95, 96, 843], "static_rol": [95, 96, 99, 100, 122, 131, 843, 847, 972, 976, 1007], "static_cross": [95, 96, 848], "static_det": [95, 96, 853], "static_diagon": [95, 96, 858], "static_inv": [95, 96, 870], "static_matrix_norm": [95, 96, 879], "static_matrix_pow": [95, 96, 884], "static_matrix_rank": [95, 96, 888], "static_matrix_transpos": [95, 96, 893], "static_out": [95, 96, 898], "static_qr": [95, 96, 906], "static_slogdet": [95, 96, 911], "static_solv": [95, 96, 915], "static_svd": [95, 96, 920], "static_svdv": [95, 96, 925], "static_tensordot": [95, 96, 930], "static_trac": [95, 96, 935], "static_vecdot": [95, 96, 940], "static_vector_norm": [95, 96, 945], "static_vector_to_skew_symmetric_matrix": [95, 96, 950], "511": [97, 98, 955, 956, 958, 959, 960, 966, 968, 970], "5108256": [97, 98, 961, 963], "609438": [97, 98, 961, 963], "static_binary_cross_entropi": [97, 98, 956], "static_cross_entropi": [97, 98, 961], "20397282": [97, 98, 961, 965], "83258148": [97, 98, 961, 965], "60943794": [97, 98, 961, 965], "static_sparse_cross_entropi": [97, 98, 966], "static_clip": [99, 100, 972], "static_repeat": [99, 100, 997], "static_reshap": [99, 100, 1002], "658": [101, 102, 1055, 1056, 1058, 1059, 1060], "759": [101, 102, 1055, 1056, 1058, 1059, 1060], "403": [101, 102, 1056, 1058, 1060], "62": [101, 102, 103, 104, 397, 650, 653, 1056, 1058, 1060, 1061, 1063, 1065, 1073, 1076], "static_layer_norm": [101, 102, 1056], "30": [103, 104, 397, 635, 638, 842, 898, 901, 1063, 1065, 1068, 1070, 1072, 1117, 1118, 1121, 1174, 1178], "28": [103, 104, 777, 778, 781, 821, 828, 831, 832, 835, 842, 898, 901, 1063, 1065, 1068, 1070, 1073, 1075, 1117, 1118, 1121], "102": [103, 104, 1063, 1065], "60": [103, 104, 681, 701, 842, 898, 901, 1063, 1065, 1117, 1118, 1121], "431": [103, 104, 1068, 1070], "55": [103, 104, 681, 755, 758, 821, 831, 842, 898, 901, 925, 929, 1061, 1068, 1070, 1071, 1073, 1075, 1117, 1118, 1121], "31": [103, 104, 397, 655, 658, 842, 925, 929, 1068, 1070, 1073, 1075], "68": [103, 104, 397, 423, 426, 433, 436, 1055, 1056, 1059, 1068, 1070, 1073, 1075], "93": [103, 104, 363, 374, 397, 655, 658, 1068, 1070, 1073, 1075], "83": [103, 104, 397, 655, 658, 1068, 1070], "84": [103, 104, 274, 321, 324, 363, 374, 842, 898, 901, 1068, 1070, 1073, 1075, 1117, 1118, 1121], "274": [103, 104, 1068, 1070], "08": [103, 104, 124, 397, 423, 426, 508, 511, 821, 841, 1068, 1070, 1073, 1075], "92": [103, 104, 842, 853, 856, 1068, 1070, 1073, 1075], "91": [103, 104, 397, 468, 471, 842, 898, 901, 1061, 1068, 1070, 1071, 1117, 1118, 1121], "40": [103, 104, 397, 483, 486, 655, 658, 842, 898, 901, 1068, 1070, 1117, 1118, 1121], "43": [103, 104, 1061, 1068, 1070, 1071, 1073, 1075, 1076, 1080, 1084], "88": [103, 104, 165, 171, 174, 397, 468, 471, 842, 898, 901, 925, 929, 1061, 1073, 1075, 1076, 1117, 1118, 1121], "static_randint": [103, 104, 1063], "static_random_norm": [103, 104, 1068], "651": [103, 104, 1068, 1072], "static_random_uniform": [103, 104, 1073], "481": [103, 104, 1073, 1077], "74": [103, 104, 397, 468, 471, 1073, 1077], "0999": [103, 104, 1073, 1077], "static_unique_al": [107, 108, 1086], "static_unique_count": [107, 108, 1091], "classivi": [107, 108, 971, 1012, 1085, 1091, 1092, 1094, 1095], "static_unique_invers": [107, 108, 1096], "static_unique_valu": [107, 108, 1101], "static_argsort": [109, 110, 1107], "static_sort": [109, 110, 1112], "static_al": [113, 114, 1151], "static_ani": [113, 114, 1156], "add_ivy_container_instance_method": 115, "containerexampl": [115, 116], "who": [117, 136, 154], "mainli": [117, 138, 140], "under": [117, 121, 122, 123, 124, 125, 127, 131, 136, 137, 140, 142, 154], "hood": [117, 122, 124, 127, 131, 136, 137, 140, 142], "weed": [117, 136], "behind": [117, 124, 136, 138, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809], "tour": 117, "primari": [117, 124, 128, 134, 154], "composit": [117, 124, 126, 128, 130, 131, 134, 137, 141, 142, 154], "nestabl": [117, 121, 122, 124, 134, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 397, 398, 401, 413, 416, 418, 421, 423, 426, 473, 476, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 681, 713, 821, 828, 832, 835, 841, 842, 843, 846, 858, 861, 971, 1007, 1010, 1055, 1056, 1059, 1085, 1091, 1095, 1117, 1122, 1125, 1150, 1151, 1154], "dynam": [117, 132, 133, 134, 137, 201, 202], "runtim": [117, 124, 363], "helper": [117, 126, 140], "borrow": 117, "frontend": [117, 138], "taken": [118, 135, 142, 842, 858, 861], "compil": [118, 131, 136, 138, 154, 1161, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201], "meta": [118, 130, 1034, 1035, 1036], "overlap": 118, "judgement": 118, "some_namespac": 118, "some_backend": 118, "another_backend": 118, "break": [118, 119, 135, 139, 154, 1161], "anyth": [118, 124, 1161], "refactor": 118, "ongo": 118, "file_nam": [118, 124], "my_func": [118, 122], "my": 118, "cooler": 118, "produc": [118, 124, 821, 841], "something_cool": 118, "category_nam": [119, 121, 127, 132, 133], "backend_nam": [119, 121, 127, 128, 129, 132, 133], "adress": 119, "conveni": [119, 126, 132, 133, 138, 140, 141], "revisit": [119, 142], "dedic": [119, 139, 141, 777, 819, 1172, 1173], "four": [119, 122, 127, 132, 140], "tf": [119, 120, 125, 130, 132, 133, 134, 137, 142, 154, 1161], "jnp": [119, 120, 132, 133, 134, 142, 1161], "jaxarrai": [119, 120, 132, 133, 134], "wherea": [119, 122, 124, 127, 130, 132, 133, 142], "__sub__": [119, 122, 130, 131, 139], "__mul__": [119, 122, 130, 131, 139], "__div__": 119, "permit": [119, 124, 130], "dicat": 119, "addition": [119, 131, 134], "omit": [119, 134, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "wrapper": [119, 129, 130, 131, 132, 134, 139], "contrast": [119, 121], "futher": 119, "absenc": [119, 131], "pep": 119, "484": 119, "annot": [119, 135], "dictat": [119, 122, 130, 134], "brittl": 119, "intend": [119, 1117, 1142, 1145], "subset": [119, 121, 124, 137], "freeli": 119, "extend": [119, 121, 128, 154], "consum": [119, 124, 126, 131], "inde": [119, 154], "flexibl": 119, "technic": [119, 131, 134, 154], "original_typ": 119, "cumbersom": 119, "readabl": [119, 120, 130, 131, 139, 140], "clean": [120, 135, 137, 138, 140], "_assert_fill_value_and_dtype_are_compat": 120, "isinst": [120, 141, 142, 681, 763], "_to_devic": 120, "experiment": 120, "_is_valid_dtypes_attribut": 120, "supported_dtyp": 120, "unsupported_dtyp": [120, 125, 132], "fn_supported_dtyp": 120, "fn_unsupported_dtyp": 120, "backend_str": 120, "account": 121, "instanti": 121, "firstli": [121, 122, 127, 130, 132, 134, 140], "templat": [121, 124, 1161], "spec": [121, 122], "api_specif": [121, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 645, 648, 655, 658, 660, 663, 842, 858, 861, 971, 985, 988, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125], "array_api": 121, "preview": 121, "render": 121, "incorrectli": [121, 135], "onlin": [121, 1161], "domain": [121, 165, 196, 200, 397, 403, 406, 408, 411, 418, 421, 423, 426, 428, 431, 433, 436, 478, 481, 483, 486, 503, 506, 508, 511, 558, 561, 563, 566, 573, 576, 645, 648, 650, 653, 655, 658, 670, 674, 675], "codomain": [121, 165, 196, 200, 397, 403, 406, 408, 411, 418, 421, 423, 426, 428, 431, 433, 436, 478, 481, 483, 486, 503, 506, 508, 511, 558, 561, 563, 566, 573, 576, 645, 648, 650, 653, 655, 658, 670, 674, 675], "assum": [121, 124, 126, 128, 132, 139, 140, 154, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 478, 481, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 681, 713, 821, 828, 832, 835, 841, 842, 843, 846, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1055, 1056, 1059, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1150, 1151, 1154], "operand": [121, 125, 165, 196, 200, 397, 403, 406, 408, 411, 413, 416, 418, 421, 423, 426, 428, 431, 433, 436, 468, 471, 473, 476, 478, 481, 483, 486, 503, 506, 508, 511, 513, 516, 558, 561, 563, 566, 573, 576, 578, 581, 605, 608, 625, 628, 630, 633, 635, 638, 645, 648, 650, 653, 655, 658, 670, 674, 675, 676, 680, 1117, 1118, 1121, 1122, 1125, 1130, 1133, 1142, 1145], "ref": [121, 397, 463, 466, 548, 551, 605, 608, 615, 618, 630, 633, 665, 669, 971, 1017, 1020], "But": [121, 131, 142], "needless": 121, "info": [121, 1161], "renam": 121, "conform": [121, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 553, 556, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 842, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1150, 1151, 1154], "org": [121, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 310, 313, 321, 324, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 645, 648, 655, 658, 660, 663, 777, 778, 781, 783, 785, 842, 858, 861, 971, 985, 988, 1007, 1010, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125], "elementwise_funct": [121, 397, 398, 401, 418, 421, 423, 426, 433, 436, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 645, 648, 655, 658, 660, 663, 842, 858, 861, 971, 1007, 1010, 1085, 1086, 1090, 1106, 1107, 1110, 1117, 1122, 1125], "descript": [121, 124, 131, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 681, 713, 821, 828, 832, 835, 841, 842, 843, 846, 853, 856, 858, 861, 945, 949, 971, 985, 988, 989, 992, 1007, 1010, 1055, 1056, 1059, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125, 1150, 1151, 1154], "simplic": [121, 141, 153, 165, 196, 200, 204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 235, 236, 238, 241, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273, 274, 292, 295, 327, 330, 337, 340, 397, 398, 401, 413, 416, 418, 421, 423, 426, 433, 436, 443, 446, 468, 471, 473, 476, 483, 486, 508, 511, 513, 516, 538, 541, 603, 604, 615, 618, 635, 638, 640, 643, 645, 648, 655, 658, 660, 663, 670, 674, 675, 681, 713, 821, 828, 832, 835, 841, 842, 843, 846, 853, 856, 858, 861, 971, 985, 988, 989, 992, 1007, 1010, 1055, 1056, 1059, 1085, 1086, 1090, 1091, 1095, 1106, 1107, 1110, 1117, 1122, 1125], "judgment": 121, "beyond": [121, 971, 1007, 1010], "func_nam": [121, 122, 127], "pure": [121, 139, 142, 154], "themselv": [121, 127, 131, 132, 133, 141, 1037, 1038], "operator_nam": 121, "succinct": 121, "contstructor": 121, "though": [121, 127, 132, 140, 154], "forward": [121, 124, 142, 153, 154, 1192, 1193, 1196, 1200], "_forward": [121, 137, 140, 141, 1161], "former": 121, "explicitli": [121, 127, 128, 130, 131, 134, 137, 154, 842, 863, 866, 1180, 1189, 1191, 1192, 1193], "latter": [121, 128], "implicit": [121, 124, 131, 137, 870, 874, 925, 926], "docst": 121, "eight": 122, "static_": 122, "op_nam": 122, "__r": 122, "__truediv__": [122, 130, 131], "recap": [122, 131, 141], "independ": [122, 123, 129, 131, 137, 142, 842, 848, 851, 915, 918, 1061, 1062], "combinatorili": 122, "variat": [122, 124], "grid": [122, 124, 153, 204, 238, 241], "vari": [122, 124, 131, 139, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "unus": [122, 134, 135, 201, 202], "excess": [122, 128, 139], "okai": [122, 137], "showcas": [122, 153], "demonstr": [122, 139], "replic": [122, 132], "meant": 122, "imaginari": 122, "some_flag": 122, "another_flag": 122, "jointli": 122, "three": [122, 124, 125, 131, 136, 204, 238, 241, 1161], "x0": [122, 681, 689], "procedur": 122, "sens": [122, 131, 139], "5574077": 122, "1850398": 122, "5463025": 122, "8422884": 122, "91601413": 122, "9647598": 122, "3738229": 122, "1597457": 122, "0963247": 122, "9955841": 122, "3278579": 122, "multi": [122, 131, 136, 154, 821, 840, 842, 848, 851, 1161, 1167, 1180, 1191], "seper": [122, 681, 710], "pars": [122, 154], "satisfi": [122, 842, 950, 954], "far": [122, 133, 138, 139, 1037, 1038, 1048], "asid": [122, 153], "irrelev": [122, 132], "increasingli": 122, "complex": [122, 125, 140, 141, 142, 154, 681, 755, 758, 842, 863, 866, 920, 924], "14254655": 122, "1578213": 122, "380515": 122, "trivial": 122, "exlud": 122, "thoroughli": 123, "ci": [123, 124, 154], "On": [124, 125, 135, 138, 142], "fixtur": 124, "hit": [124, 137], "action": 124, "eleg": 124, "intellig": 124, "rang": [124, 140, 141, 142, 204, 205, 206, 232, 233, 235, 236, 1085, 1086, 1090, 1117, 1134, 1137, 1142, 1145, 1161], "cach": [124, 127, 363, 367, 681, 692], "unexplor": 124, "known": 124, "repeatedli": [124, 131, 1037, 1046], "upload": 124, "artifact": 124, "parametr": 124, "statement": [124, 135, 154], "plai": [124, 125, 142], "varieti": [124, 132, 133], "valid_int_dtyp": 124, "uint8": [124, 132, 274, 292, 295, 303, 342, 345, 353, 356, 361, 362], "uint16": [124, 132, 274, 303, 309, 318, 319, 321, 324, 342, 345, 1117, 1134, 1137, 1142, 1145], "uint32": [124, 132, 274, 303, 318, 319, 321, 324, 361, 1117, 1134, 1137, 1142, 1145], "uint64": [124, 132, 274, 303, 318, 319, 321, 324, 326, 353, 356, 1117, 1134, 1137, 1142, 1145], "custom_strategi": 124, "st": [124, 126], "sampled_from": [124, 126], "min_siz": 124, "max_siz": 124, "referenc": 124, "print_hypothesis_exampl": 124, "searchstrategi": 124, "randomis": 124, "simplist": 124, "intricaci": 124, "briefli": [124, 127, 140], "bound": [124, 137], "mechan": [124, 152, 154, 1161], "math": [124, 134, 142, 397, 538, 541, 1161], "inclus": [124, 134, 204, 205, 206, 1061, 1063, 1066], "width": 124, "losslessli": 124, "mostli": 124, "one_of": 124, "datum": 124, "pipe": 124, "overload": 124, "shorthand": 124, "draw": [124, 126, 1061, 1062, 1068, 1071, 1073, 1076], "input_dtyp": [124, 126], "reject": 124, "flatmap": 124, "suppos": 124, "interact": [124, 1161], "dataobject": 124, "test_argsort": 124, "decor": [124, 126, 127, 129, 131, 132, 133, 134], "initialis": [124, 363], "snippet": 124, "dtype_and_x": [124, 126], "dtype_and_valu": [124, 126], "valid_float_dtyp": [124, 126], "list_of_length": [124, 126], "num_positional_arg": [124, 126], "instance_method": 124, "test_leaky_relu": 124, "exhaust": 124, "num_posit": 124, "indirectli": 124, "advis": 124, "seri": [124, 125], "9433925": 124, "401298464324817e": 124, "574352379": 124, "99999": 124, "2250738585072014e": 124, "308": [124, 274, 310, 313], "103515625e": 124, "unpack": [124, 135, 681, 775], "seamlessli": 124, "edg": [124, 137, 142, 971, 972, 975, 981, 984, 1029, 1032, 1161], "encount": 124, "criterion": 124, "straight": [124, 139, 1161], "array_valu": 124, "valid_ax": 124, "hand": [124, 127, 135, 154], "craft": 124, "polici": [124, 153], "hoc": 124, "overview": [124, 136, 153], "array_dtyp": 124, "array_bool": [124, 126], "na": 124, "test_concat": 124, "test_devic": 124, "array_shap": 124, "test_manipul": 124, "common_shap": 124, "test_lay": 124, "size_bound": 124, "precis": [124, 274, 310, 313, 397, 605, 608, 655, 658], "283405296074752": 124, "564049465049088": 124, "0417876997507982e": 124, "min_valu": 124, "max_valu": 124, "allow_inf": 124, "min_num_dim": [124, 126], "wherev": 124, "reshape_shap": 124, "stand": 124, "alon": [124, 363, 382, 396], "fashion": 124, "some_sequ": 124, "allow_subnorm": 124, "exclude_min": 124, "960464477539063e": 124, "coverag": 124, "allow_nan": 124, "Such": 124, "kind": [124, 154, 274, 310, 313, 321, 324, 397, 625, 628, 1117, 1134, 1137, 1142, 1145], "get_shap": [124, 126], "allow_non": [124, 126], "max_num_dim": [124, 126], "min_dim_s": [124, 126], "none_or_list_of_float": 124, "200": 124, "199": [124, 397, 423, 426], "99999999999997": 124, "000000000000002": 124, "125": 124, "43759670925832": 124, "get_mean_std": 124, "probabilist": 124, "811428143185347e": 124, "none_or_list_float": 124, "get_bound": 124, "arrays_valu": 124, "put": [124, 154], "36418": 124, "213": 124, "21716926": 124, "get_prob": 124, "unnorm": [124, 1061, 1062], "099609375": 124, "get_axi": 124, "number_positional_argu": 124, "mind": [124, 130, 131], "bodi": 124, "possibli": [124, 154, 681, 763], "test_valu": [124, 126], "enough": [124, 139, 140, 141], "justifi": 124, "unduli": 124, "labori": 124, "straightforward": [124, 140], "scenario": 124, "autom": [124, 1161], "report": 124, "test_demo": 124, "falsifi": 124, "failing_test": 124, "traceback": 124, "assertionerror": [124, 777, 811, 820], "shrink": 124, "prescrib": 124, "behavior": [124, 131, 137, 154, 397, 625, 628, 630, 633, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "identifi": 124, "closest": [124, 274, 297, 397, 473, 476, 513, 516, 518, 521, 635, 638, 676, 680], "checkout": 124, "scratch": 124, "databas": 124, "therebi": 124, "event": [124, 1161], "test_gelu": 124, "test_fil": 124, "brief": 124, "phase": [124, 154], "notabl": 124, "displai": [124, 131, 140], "verbos": [124, 137, 1161, 1206], "newer": 124, "max_exampl": 124, "impact": [124, 141], "deadlin": 124, "weird": 124, "truth": [124, 397, 493, 496, 523, 526, 528, 531, 548, 551, 553, 556, 615, 618], "opt": [124, 128, 134, 139], "defer": [124, 127, 130, 131, 132, 133, 134], "suffic": [124, 129], "catch": [124, 681, 704], "systemat": 124, "safeguard": 124, "inabl": 124, "lax": [125, 126, 154], "bfloat16": [125, 132], "thu": [125, 397, 463, 466, 625, 628, 630, 633, 842, 863, 866], "categoris": 125, "notic": [125, 126, 139], "mathematical_funct": 125, "arithmetic_oper": 125, "same_kind": [125, 126], "subok": [125, 126], "mathemat": [125, 203, 397, 413, 416, 433, 436, 508, 511, 605, 608, 842, 945, 949], "slightli": [125, 131, 137, 141], "recov": 125, "obtain": 125, "trigonometric_funct": 125, "pointwise_op": 125, "concaten": [125, 137, 140, 681, 710, 971, 977, 980, 1161], "manipulation_routin": 125, "joining_arrai": 125, "indexing_slicing_joining_mutating_op": 125, "cat": [125, 137, 142], "grasp": 125, "youtub": 125, "jump": 126, "knowledg": 126, "strategi": 126, "test_frontend_funct": 126, "heavi": 126, "lift": 126, "np_frontend_help": 126, "behav": [126, 139], "test_frontend": 126, "test_jax": 126, "test_jax_lax_oper": 126, "available_dtyp": 126, "test_jax_lax_tan": 126, "as_variable_flag": 126, "with_out": 126, "native_array_flag": 126, "test_numpi": 126, "test_mathematical_funct": 126, "test_np_trigonometric_funct": 126, "test_numpy_tan": 126, "handle_where_and_array_bool": 126, "test_tensorflow": 126, "test_tf_funct": 126, "ivy_tf": 126, "test_tensorflow_tan": 126, "test_torch": 126, "test_pointwise_op": 126, "intersect": [126, 153], "ivy_torch": 126, "test_torch_tan": 126, "_dtype": [126, 139], "valid_numeric_dtyp": 126, "_fill_valu": 126, "max_dim_s": 126, "test_jax_lax_ful": 126, "uint": [126, 274, 303, 342, 345, 356, 361], "creation_routin": 126, "test_from_shape_or_valu": 126, "test_numpy_ful": 126, "test_tensorflow_ful": 126, "discrep": 126, "toler": [126, 842, 888, 891, 903, 905], "test_creation_op": 126, "_requires_grad": 126, "requires_grad": 126, "test_torch_ful": 126, "accommod": 126, "unsign": [126, 1117, 1134, 1137, 1142, 1145], "categor": [127, 133], "mutual": [127, 131], "constitut": [127, 137, 1117, 1138, 1141, 1146, 1149], "venn": 127, "diagram": 127, "light": [127, 154], "log_pr": [127, 131, 134], "array_arg": 127, "typic": 127, "whatsoev": [127, 131], "commonli": [127, 1117, 1138, 1141, 1146, 1149], "outsid": [127, 133, 135, 137, 139, 142, 971, 972, 975, 1017, 1020], "deal": [127, 154], "concurr": [127, 131], "modif": 127, "group": [127, 131], "get_all_arrays_on_dev": 127, "nested_map": [127, 1037], "index_nest": [127, 1037], "implicit_backend": 128, "unless": [128, 133, 134, 154, 397, 605, 608, 681, 740], "__dict__": [128, 137, 139], "ivy_original_dict": [128, 137], "unmodifi": [128, 132], "fallback": 128, "freedom": [128, 1117, 1138, 1141, 1146, 1149], "achiev": [129, 135, 140, 142], "topic": [129, 139], "_data": [130, 139], "organiz": [130, 131], "inherit": [130, 131, 139, 154], "bear": [130, 131, 132], "necessarili": [130, 131], "although": [130, 131], "underpin": [130, 131, 137], "programmat": [130, 131], "backup": [130, 131], "accident": [130, 131], "absent": [130, 131], "perk": [130, 131], "auto": [130, 131, 140], "throw": [130, 139], "imposs": 130, "coupl": [130, 131, 139, 141], "anywai": 130, "secondli": [130, 132], "easier": 130, "five": [131, 140], "decis": [131, 137, 139], "arbitrarili": [131, 140], "__repr__": 131, "control": [131, 132, 134, 139, 140, 153], "__getattr__": 131, "underli": [131, 397, 443, 446, 458, 461, 468, 471, 598, 601], "__setattr__": 131, "__contains__": 131, "__getstate__": 131, "__setstate__": 131, "unpickl": 131, "expand": [131, 681, 710, 971, 985, 988], "counterpart": 131, "irrespect": [131, 134, 139, 274, 277, 280], "presenc": [131, 134], "implicitli": [131, 870, 874, 925, 926], "intuit": [131, 140, 141], "chronolog": 131, "had": [131, 134], "sequenti": [131, 141], "flow": [131, 153], "implic": 131, "eager": [131, 154], "children": 131, "shallowest": 131, "deepest": 131, "dy": [131, 777, 787, 788], "dx": [131, 777, 787, 788], "autograd": [131, 154], "grad": [131, 140, 141, 142, 1161, 1196, 1200], "redund": 131, "num_head": [131, 821, 840, 1180, 1191], "mask": [131, 821, 840, 841], "to_q_fn": [131, 821, 840], "to_kv_fn": [131, 821, 840], "to_out_fn": [131, 134, 821, 840], "to_q_v": [131, 821, 840], "to_kv_v": [131, 821, 840], "to_out_v": [131, 821, 840], "measur": [131, 821, 840, 1180, 1191], "dot": [131, 821, 840, 841, 842, 930, 934, 940, 944, 1180, 1191], "all_dtyp": 132, "all_numeric_dtyp": 132, "all_int_dtyp": 132, "all_float_dtyp": 132, "fall": [132, 136, 1161, 1192, 1193, 1196, 1200], "thirdli": 132, "native_float32": [132, 274, 362], "importantli": [132, 139, 142, 153], "arguabl": [132, 133], "compound": 132, "overflow": [132, 397, 413, 416, 1117, 1142, 1145], "arr": [132, 133], "settabl": [132, 133], "mx": [132, 133, 134, 1161], "nd": [132, 133, 134, 137, 142, 1161], "deleg": 132, "shape_to_tupl": 132, "idx": [133, 139, 681, 687], "tpu": [133, 363, 385, 394], "aliv": [133, 363, 377, 381, 383, 681, 719, 739, 741], "dual": 133, "thrown": [133, 154, 681, 731], "rare": [133, 154], "program": 134, "strictli": 134, "ration": 134, "speak": 134, "subtli": 134, "ensure_in_backend": [134, 681, 731], "x_nativ": 134, "val_n": 134, "assign": [134, 135, 139], "elif": 134, "unspecifi": [134, 397, 625, 628, 630, 633, 842, 863, 866, 971, 1017, 1020], "predominantli": [134, 153], "altern": [134, 140], "_wrap_fn": 134, "maxim": [134, 137], "inner": [134, 139, 842, 863, 866, 875, 878, 1033, 1034, 1035, 1036], "third": [134, 154, 842, 920, 924, 1085, 1086, 1090], "leverag": 134, "equival": [134, 140, 142, 204, 205, 206, 397, 463, 466, 588, 591, 593, 596, 630, 633, 842, 888, 891, 903, 905, 915, 918, 945, 949], "input_arrai": 134, "flake8": 135, "undefin": 135, "yield": [135, 1080, 1084], "handler": [135, 136, 138, 142, 1161], "carri": 135, "star": 135, "byte": 135, "notimpl": 135, "notimplementederror": 135, "unsuccess": 135, "exce": [135, 397, 604], "black": 135, "disobei": 135, "successfulli": 135, "comparison": 135, "sound": 136, "higher": [136, 137, 142, 154, 777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809], "fledg": [137, 138], "syntact": [137, 142], "clip_by_valu": [137, 142], "clamp": [137, 142], "fit": [137, 971, 997, 1000], "construct": [137, 138, 141, 142, 971, 1025, 1028, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203], "power_seq": 137, "resid": [137, 141], "ml_framework": [137, 142, 204, 205, 206], "current_framework": [137, 142], "furthermor": 137, "framework_handl": 137, "face": 137, "cprint": [137, 1205], "framework_stack": 137, "_determine_framework_from_arg": 137, "get_framework": 137, "neither": [137, 397, 413, 416, 605, 608, 777, 811, 820, 870, 874, 925, 926], "illustr": [137, 153], "un": [137, 274, 326], "nn": [137, 142, 204, 238, 241, 1161], "init_h": [137, 821, 839], "init_c": [137, 821, 839], "kernel": [137, 154, 821, 839], "recurrent_kernel": [137, 821, 839], "bia": [137, 141, 821, 838, 839, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1190], "recurrent_bia": [137, 821, 839], "x_shape": 137, "batch_shap": [137, 139, 142, 204, 218, 219, 681, 740, 821, 839, 840, 841, 842, 950, 954, 1061, 1062, 1180, 1189], "timestep": [137, 821, 839, 1180, 1189], "input_channel": [137, 141, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190], "x_flat": 137, "wi": 137, "wi_x": 137, "wii_x": 137, "wif_x": 137, "wig_x": 137, "wio_x": 137, "recurr": [137, 821, 839], "wh": 137, "lstm": [137, 821, 839, 1180], "ht": 137, "ct": 137, "hts_list": 137, "unrol": [137, 140, 821, 839], "wii_xt": 137, "wif_xt": 137, "wig_xt": 137, "wio_xt": 137, "zip": 137, "htm1": 137, "ctm1": 137, "wh_htm1": 137, "whi_htm1": 137, "whf_htm1": 137, "whg_htm1": 137, "who_htm1": 137, "ft": 137, "gt": 137, "ot": 137, "offici": 137, "reliabl": 137, "sacrific": 137, "hear": 137, "virtu": 137, "pure_ivi": 137, "reduce_mean": [137, 140, 141, 142, 1161], "reduce_sum": [137, 1161], "reduce_var": 137, "compile_graph": [137, 142], "pure_torch": 137, "backbon": [137, 140], "_layer": 137, "super": [137, 140, 141, 142], "random_unifrom": 137, "unclean": 137, "wx": 137, "temp": 137, "torchscript": 137, "example_input": [137, 201, 202], "static_argnum": [137, 201, 202], "static_argnam": [137, 201, 202], "jit": [137, 154], "primit": [138, 154], "hierarch": [138, 140, 141], "arraywithlinalg": 139, "arraywithlog": 139, "arraywithmath": 139, "arraywithmeta": 139, "arraywithreduct": 139, "_shape": 139, "_size": 139, "functool": 139, "mul": 139, "len": [139, 142, 204, 238, 241], "_devic": 139, "_dev_str": 139, "_pre_repr": 139, "_post_repr": 139, "answer": [139, 154], "typeerror": 139, "immut": 139, "claim": 139, "truli": 139, "_native_wrapp": 139, "attributeerror": 139, "genuin": 139, "some_method": 139, "similarli": [139, 204, 238, 241], "rewritten": 139, "__pow__": 139, "strang": 139, "enforc": 139, "appear": [139, 971, 985, 988], "_wrap_method": 139, "func_wrapp": [139, 155, 156, 157, 158, 159, 160, 161, 162, 163], "__name__": 139, "non_wrapped_method": 139, "_method_wrap": 139, "native_arg": 139, "native_kwarg": 139, "inner_fn": 139, "whist": 139, "unwrap": 139, "transit": 139, "needlessli": 139, "randn": 139, "_unwrap_method": 139, "method_wrap": 139, "compartment": 139, "public": [139, 681, 699], "newshap": 139, "new_shap": 139, "tidi": 139, "shorter": 139, "crystal": 139, "ton": 140, "ado": [140, 141], "incredibli": [140, 154], "hash": 140, "soup": 140, "walk": [140, 141], "dct": 140, "cnt": 140, "combo": [140, 1161, 1167], "hold": [140, 681, 743, 744], "uda": 140, "3333": 140, "6667": 140, "178": 140, "new_weight": 140, "0600": 140, "3100": 140, "2400": 140, "6900": 140, "delimit": 140, "autocomplet": 140, "midwai": 140, "agent": 140, "total_spe": 140, "total_height": 140, "total_width": 140, "ag": 140, "tot": 140, "total_": 140, "total_h": 140, "dir": 140, "cnt0": 140, "cnt1": 140, "diff_0": 140, "diff_1": 140, "config0": 140, "config1": 140, "Not": [140, 141, 154, 203], "decod": 140, "l0": 140, "l1": [140, 842, 945, 949], "clearer": 140, "truncat": 140, "decoder__l0": 140, "decoder__l1": 140, "encoder__l0": 140, "encoder__l1": 140, "height": 140, "l0__b": 140, "l0__w": 140, "l1__b": 140, "l1__w": 140, "printabl": 140, "obviou": 140, "foresight": 140, "untidili": 140, "update_ag": 140, "normalize_img": 140, "img": 140, "img_max": 140, "reduce_max": [140, 1161], "img_min": 140, "reduce_min": [140, 1161], "img_rang": 140, "agent_posit": 140, "agent_veloc": 140, "agent_cam_front_rgb": 140, "agent_cam_front_depth": 140, "agent_cam_rear_rgb": 140, "agent_cam_rear_depth": 140, "agent_cam_lidar": 140, "cleaner": 140, "camera": 140, "front_rgb": 140, "front_depth": 140, "rear_rgb": 140, "rear_depth": 140, "lidar": 140, "rgb": 140, "rear": 140, "veloc": 140, "cam": 140, "cam_max": 140, "cam_min": 140, "cam_rang": 140, "Of": 140, "ideal": 140, "perman": 140, "afterward": 140, "thread": 140, "incorpor": 140, "pretti": 140, "dataload": [140, 152, 1161], "_cnt": 140, "img_": 140, "_dataset_s": 140, "_batch_siz": 140, "_count": [140, 141], "__next__": 140, "filenam": 140, "img_fnam": 140, "fname": 140, "loaded_img": 140, "cv2": 140, "imread": 140, "loader": [140, 154], "batch_slic": 140, "mymodel": [140, 1161], "linear0": [140, 141, 1161], "linear1": [140, 141, 1161], "x_in": [140, 141, 142, 1161], "loss_fn": [140, 141, 142, 1161], "0145": 140, "grad_fn": 140, "addbackward0": 140, "_create_vari": 141, "output_channel": [141, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190], "with_bia": [141, 1180, 1190], "_input_channel": 141, "_output_channel": 141, "_w_shape": 141, "_b_shape": 141, "_with_bia": 141, "8979": 141, "3198": 141, "0196": 141, "3126": 141, "3717": 141, "9687": 141, "6958": 141, "5122": 141, "3902": 141, "8800": 141, "5613": 141, "1982": 141, "nightmar": 141, "overcom": 141, "fc": 141, "9563": 141, "v0": 141, "v1": 141, "6440": 141, "key0": 141, "1823": 141, "8075": 141, "linear3": 141, "v2": 141, "2346": 141, "counter": 141, "hidden": [141, 821, 839, 1180, 1189], "fed": [141, 363, 387], "decoupl": 141, "scheme": 141, "weight_initi": [141, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190], "glorotuniform": [141, 1174, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190], "bias_initi": [141, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1190], "_w_init": 141, "_b_init": 141, "create_vari": [141, 1174], "var_shap": [141, 1174], "fan_out": [141, 1174], "fan_in": [141, 1174], "fan_mod": [141, 1174], "fan_sum": 141, "slight": 141, "misnom": 141, "saw": 141, "vanilla": [141, 1033, 1035], "descent": [141, 777, 790, 792, 1196, 1201], "lar": [141, 777, 799, 801, 803, 805, 1196], "lamb": [141, 777, 799, 801, 1196], "compile_on_next_step": [141, 1192, 1193, 1196, 1197, 1198, 1199, 1200, 1201], "_beta1": 141, "_beta2": 141, "_epsilon": 141, "_mw": 141, "_vw": 141, "_first_pass": 141, "_should_compil": 141, "_step": [141, 1196, 1200], "new_v": 141, "_lr": 141, "_inplac": 141, "_stop_gradi": 141, "set_stat": [141, 1196, 1197, 1198, 1199, 1200, 1201], "pre": [142, 154], "captur": 142, "sparse_funct": 142, "num_class": 142, "num_dim": 142, "new_axi": 142, "_linear": 142, "to_backend": 142, "jax_graph": 142, "to_ivy_modul": [142, 1172], "thinli": 142, "whilst": 142, "to_haiku_modul": 142, "hk": 142, "loss_fn_t": 142, "transform": [142, 153, 821, 837, 838], "without_apply_rng": 142, "rng": 142, "prngkei": 142, "init": 142, "update_rul": 142, "tree_multimap": 142, "vision": [152, 1161], "robot": [152, 1161], "focus": 153, "perfect": 153, "3d": [153, 1180, 1185, 1186], "differenti": 153, "demo": [153, 1161], "orient": 153, "pose": 153, "euler": [153, 203], "quaternion": 153, "rotat": 153, "ivy_mech": 153, "target_facing_rotation_matrix": 153, "polar_to_cartesian_coord": 153, "ordin": [153, 842, 915, 918], "warp": 153, "optic": 153, "voxel": 153, "ivy_vis": 153, "coords_to_voxel_grid": 153, "render_pixel_coord": 153, "neural": [153, 821, 1161, 1169, 1180], "radianc": 153, "nerf": 153, "trajectori": 153, "motion": 153, "plan": [153, 1161], "mobil": 153, "ivy_robot": 153, "sample_spline_path": 153, "rigidmobil": 153, "sample_bodi": 153, "drone": 153, "sample_link": 153, "openai": 153, "swimmer": 153, "cumul": [153, 681, 701, 702], "reward": 153, "supervis": 153, "reinforc": 153, "door": [153, 154], "cartpol": 153, "mountain_car": 153, "pendulum": 153, "reacher": 153, "condit": [153, 201, 202, 1037, 1047, 1048, 1080, 1084], "learnt": 153, "ture": 153, "ntm": 153, "egospher": 153, "spatial": 153, "esm": 153, "ivy_memori": 153, "egocentr": 153, "room": 153, "inspir": 153, "doubt": 154, "grate": 154, "probe": 154, "undergo": 154, "remark": 154, "surpris": 154, "lock": 154, "contunu": 154, "minor": 154, "xla": 154, "gold": 154, "dex": 154, "ye": 154, "scan": 154, "tricki": 154, "predictor": 154, "tight": 154, "driver": 154, "schedul": 154, "dispatch": 154, "Will": 154, "ast": 154, "dynamic": 154, "cond": 154, "jacobian": 154, "checkpoint": 154, "autodiff": 154, "shine": 154, "merci": 154, "superset": 154, "cluster": 154, "compet": 154, "paradigm": 154, "parallelis": 154, "spmd": 154, "mixtur": [154, 777, 778, 781], "expert": 154, "sophist": 154, "depart": 154, "routin": 154, "hundr": 154, "thousand": 154, "deepli": [154, 1037, 1039], "broadli": 154, "heavili": 154, "supplementari": 154, "reusabl": 154, "fanci": 154, "fusion": 154, "lose": 154, "vmap": 154, "pmap": 154, "overhead": 154, "ineffici": 154, "eventu": 154, "supplement": 154, "backdoor": 154, "callback": 154, "record": 154, "metric": 154, "somewhat": 154, "outsourc": 154, "inputs_to_ivy_arrai": 155, "gaussian": [165, 166, 169], "214": [165, 181, 184], "0768": [165, 186, 189], "231": [165, 186, 189], "693": [165, 186, 189, 397, 423, 426, 955, 966, 969], "363": [165, 186, 189], "462": [165, 196, 200, 397, 675], "604": [165, 196, 200, 397, 675], "984": [165, 196, 200, 397, 675], "997": [165, 196, 200, 397, 675], "array_method": [166, 167, 171, 172, 176, 177, 181, 182, 186, 187, 191, 192, 196, 198, 208, 209, 213, 214, 221, 222, 227, 228, 238, 239, 243, 244, 251, 252, 256, 258, 261, 263, 269, 271, 277, 278, 282, 283, 287, 288, 292, 293, 304, 305, 310, 311, 321, 322, 327, 328, 332, 333, 337, 338, 342, 343, 348, 349, 369, 370, 388, 390, 398, 399, 403, 404, 408, 409, 413, 414, 418, 419, 423, 424, 428, 429, 433, 434, 438, 439, 443, 444, 448, 449, 453, 454, 458, 459, 463, 464, 468, 469, 473, 474, 478, 479, 483, 484, 488, 489, 493, 494, 498, 499, 503, 504, 508, 509, 513, 514, 518, 519, 523, 524, 528, 529, 533, 534, 538, 539, 543, 544, 548, 549, 553, 554, 558, 559, 563, 564, 568, 569, 573, 574, 578, 579, 583, 584, 588, 589, 593, 594, 598, 599, 605, 606, 610, 611, 615, 616, 620, 621, 625, 626, 630, 631, 635, 636, 640, 641, 645, 646, 650, 651, 655, 656, 660, 661, 665, 667, 670, 672, 676, 678, 682, 683, 694, 695, 714, 715, 755, 756, 765, 767, 778, 779, 794, 795, 814, 816, 822, 823, 832, 833, 843, 844, 848, 849, 853, 854, 858, 859, 863, 864, 867, 868, 870, 871, 875, 876, 879, 880, 888, 889, 893, 894, 898, 899, 903, 904, 906, 907, 915, 916, 920, 922, 925, 927, 930, 932, 935, 937, 940, 942, 945, 947, 950, 952, 956, 957, 961, 962, 966, 967, 972, 973, 977, 978, 981, 982, 985, 986, 989, 990, 993, 994, 997, 998, 1002, 1003, 1007, 1008, 1013, 1014, 1017, 1018, 1021, 1022, 1025, 1026, 1029, 1030, 1056, 1057, 1063, 1064, 1068, 1069, 1073, 1074, 1086, 1088, 1091, 1093, 1096, 1098, 1101, 1103, 1107, 1108, 1112, 1113, 1118, 1119, 1122, 1123, 1126, 1127, 1130, 1131, 1134, 1135, 1138, 1139, 1142, 1143, 1146, 1147, 1151, 1152, 1156, 1157], "container_method": [166, 168, 170, 171, 173, 175, 176, 178, 180, 181, 183, 185, 186, 188, 190, 191, 193, 195, 196, 197, 199, 205, 207, 208, 211, 213, 215, 217, 218, 220, 221, 223, 225, 227, 229, 231, 232, 234, 235, 237, 238, 240, 242, 243, 245, 247, 248, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 267, 269, 270, 272, 277, 279, 281, 282, 284, 286, 287, 289, 291, 292, 294, 296, 299, 301, 304, 306, 308, 310, 312, 314, 315, 317, 318, 320, 321, 323, 325, 327, 329, 331, 332, 334, 336, 337, 339, 341, 342, 344, 346, 348, 350, 352, 369, 371, 373, 388, 389, 391, 398, 400, 402, 403, 405, 407, 408, 410, 412, 413, 415, 417, 418, 420, 422, 423, 425, 427, 428, 430, 432, 433, 435, 437, 438, 440, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 458, 460, 462, 463, 465, 467, 468, 470, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 490, 492, 493, 495, 497, 498, 500, 502, 503, 505, 507, 508, 510, 512, 513, 515, 517, 518, 520, 522, 523, 525, 527, 528, 530, 532, 533, 535, 537, 538, 540, 542, 543, 545, 547, 548, 550, 552, 553, 555, 557, 558, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 598, 600, 602, 605, 607, 609, 610, 612, 614, 615, 617, 619, 620, 622, 624, 625, 627, 629, 630, 632, 634, 635, 637, 639, 640, 642, 644, 645, 647, 649, 650, 652, 654, 655, 657, 659, 660, 662, 664, 665, 666, 668, 670, 671, 673, 676, 677, 679, 682, 684, 686, 694, 696, 698, 714, 716, 718, 755, 757, 759, 765, 766, 768, 778, 780, 782, 783, 784, 786, 787, 789, 790, 791, 793, 794, 796, 798, 799, 800, 802, 803, 804, 806, 807, 808, 810, 814, 815, 817, 822, 824, 826, 832, 834, 836, 843, 845, 847, 848, 850, 852, 853, 855, 857, 858, 860, 862, 863, 865, 870, 872, 874, 875, 877, 879, 881, 883, 884, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 906, 908, 910, 911, 912, 914, 915, 917, 919, 920, 921, 923, 925, 926, 928, 930, 931, 933, 935, 936, 938, 940, 941, 943, 945, 946, 948, 950, 951, 953, 956, 958, 960, 961, 963, 965, 966, 968, 970, 972, 974, 976, 977, 979, 981, 983, 985, 987, 989, 991, 993, 995, 997, 999, 1001, 1002, 1004, 1006, 1007, 1009, 1011, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1056, 1058, 1060, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1075, 1077, 1086, 1087, 1089, 1091, 1092, 1094, 1096, 1097, 1099, 1101, 1102, 1104, 1107, 1109, 1111, 1112, 1114, 1116, 1118, 1120, 1122, 1124, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140, 1142, 1144, 1146, 1148, 1151, 1153, 1155, 1156, 1158, 1160], "faster": [201, 202], "invoc": [201, 202], "718281828459045": 203, "newaxi": 203, "alia": 203, "pi": 203, "141592653589793": 203, "chosen": [204, 205, 206, 397, 433, 436, 1080, 1084], "distanc": [204, 205, 206], "adjac": [204, 205, 206], "creation_funct": [204, 205, 206, 208, 210, 212, 213, 216, 218, 219, 221, 224, 226, 227, 230, 232, 233, 248, 249, 251, 254, 256, 260, 261, 265, 266, 268, 269, 273], "elsewher": [204, 218, 219, 1080, 1084], "row": [204, 218, 219, 842, 915, 918, 920, 924, 1061, 1062, 1080, 1083], "column": [204, 218, 219, 842, 863, 866, 906, 909, 915, 918, 920, 924], "__dlpack__": [204, 221, 224, 363, 388, 392], "interchang": [204, 221, 224, 971, 1021, 1024], "cartesian": [204, 238, 241], "ij": [204, 238, 241, 1117, 1118, 1121], "ni": [204, 238, 241], "xi": [204, 238, 241], "n1": [204, 238, 241], "n2": [204, 238, 241], "n3": [204, 238, 241], "xv": [204, 238, 241], "yv": [204, 238, 241], "y1": [204, 269, 273], "y2": [204, 269, 273], "y3": [204, 269, 273], "intdtyp": [204, 269, 273, 274, 302, 342, 345], "defaultdtyp": 274, "defaultfloatdtyp": 274, "defaultintdtyp": 274, "defaultuintdtyp": 274, "uint_dtyp": [274, 303, 356], "incompat": [274, 287, 290], "data_type_funct": [274, 292, 295, 310, 313, 321, 324], "floatdtyp": [274, 299, 300], "int_dtyp": [274, 302, 355], "uintdtyp": [274, 303, 342, 345, 356, 361], "defualt": [274, 303], "4294967346": [274, 303], "native_int8": [274, 309, 362], "native_bool": [274, 309, 353, 362], "followng": [274, 310, 313], "occupi": [274, 310, 313, 321, 324, 681, 743, 744], "ep": [274, 310, 313, 842, 888, 891, 903, 905], "smallest_norm": [274, 310, 313], "4028235e": [274, 310, 313], "7976931348623157e": [274, 310, 313], "55040e": [274, 310, 313], "encapsul": [274, 321, 324], "2147483648": [274, 321, 324], "2147483647": [274, 321, 324], "18446744073709551615": [274, 321, 324], "9223372036854775808": [274, 321, 324], "9223372036854775807": [274, 321, 324], "127": [274, 321, 324], "314": [274, 321, 324], "32768": [274, 321, 324], "32767": [274, 321, 324], "1800": [274, 321, 324], "65535": [274, 321, 324], "4294967295": [274, 321, 324], "109": [274, 321, 324], "8400": [274, 321, 324], "119": [274, 321, 324], "122": [274, 321, 324, 397, 483, 486], "native_int16": [274, 326, 362], "type1": [274, 347], "type2": [274, 347], "default_dtype_stack": [274, 353], "native_int32": [274, 353, 362], "native_uint64": [274, 353, 362], "native_float64": [274, 353, 362], "ret1": [274, 357], "ret2": [274, 357], "reset": [274, 361, 363, 395, 681, 772, 773, 774], "native_float16": [274, 362], "native_int64": [274, 362], "native_uint8": [274, 362], "defaultdevic": 363, "__enter__": 363, "_dev": 363, "__exit__": 363, "exc_typ": 363, "exc_val": 363, "exc_tb": 363, "exit": 363, "profil": 363, "save_dir": [363, 364], "139740789224448": [363, 377], "physic": [363, 379], "x4": [363, 381], "process_specif": [363, 382, 396], "percentag": [363, 382], "ram": [363, 382, 393, 396], "attr_onli": [363, 383], "chunk": [363, 385, 386, 387], "max_chunk_s": [363, 387], "chunk_siz": [363, 387], "input_ax": [363, 387], "output_ax": [363, 387], "feed": [363, 387], "fist": [363, 387], "caveat": [363, 388, 392], "portabl": [363, 388, 392, 1161], "gb": [363, 393, 396], "66700032": [363, 393], "589934592": [363, 393], "magnitud": [397, 398, 401, 413, 416, 605, 608, 842, 920, 924, 925, 929], "princip": [397, 403, 406, 418, 421, 428, 431], "x1_i": [397, 413, 416, 433, 436, 443, 446, 453, 456, 458, 461, 463, 466, 468, 471, 488, 491, 493, 496, 518, 521, 523, 526, 528, 531, 548, 551, 553, 556, 578, 581, 583, 586, 593, 596, 598, 601, 605, 608, 615, 618, 625, 628, 630, 633, 665, 669], "nor": [397, 413, 416, 605, 608, 777, 811, 820], "nearest": [397, 413, 416, 605, 608, 635, 638], "2019": [397, 413, 416, 508, 511, 605, 608], "commut": [397, 413, 416], "524": [397, 418, 421], "644": [397, 418, 421], "201": [397, 418, 421], "305": [397, 418, 421], "412": [397, 418, 421], "809": [397, 423, 426], "569": [397, 423, 426], "733": [397, 423, 426], "notat": [397, 433, 436, 1117, 1118, 1121], "denot": [397, 433, 436, 777, 811, 820], "pair": [397, 433, 436, 821, 841, 842, 848, 851], "quadrant": [397, 433, 436], "3\u03c0": [397, 433, 436], "588": [397, 433, 436], "719": [397, 433, 436], "197": [397, 433, 436], "bitwis": [397, 443, 446, 458, 461, 468, 471, 598, 601], "invert": [397, 448, 451], "arithmet": [397, 463, 466, 1117, 1126, 1129], "propag": [397, 463, 466, 1117, 1122, 1125, 1126, 1129, 1130, 1133, 1138, 1141, 1142, 1145, 1146, 1149], "lh": [397, 463, 466], "rh": [397, 463, 466], "xor": [397, 468, 471, 598, 601], "78": [397, 468, 471, 640, 643, 842, 898, 901, 1061, 1068, 1071, 1117, 1118, 1121], "77": [397, 468, 471, 842, 898, 901, 1117, 1118, 1121], "59": [397, 468, 471], "654": [397, 478, 481], "368": [397, 483, 486], "670": [397, 483, 486], "202": [397, 483, 486], "548": [397, 483, 486, 650, 653], "1490": [397, 483, 486], "698": [397, 488, 491], "accur": [397, 508, 511], "fdlibm": [397, 508, 511], "compliant": [397, 508, 511, 588, 591, 593, 596, 1117, 1122, 1125, 1126, 1129, 1130, 1133], "85e": [397, 508, 511], "632": [397, 508, 511], "20e": [397, 508, 511], "72e": [397, 508, 511], "00": [397, 508, 511, 681, 755, 758, 842, 925, 929], "22000": [397, 508, 511], "442000": [397, 508, 511], "greatest": [397, 513, 516, 518, 521], "threshold": [397, 603, 604], "y_i": [397, 610, 613], "versu": [397, 625, 628], "odd": [397, 625, 628], "modulu": [397, 630, 633], "primarili": [397, 630, 633], "5654": [397, 635, 638], "034": [397, 635, 638], "433": [397, 635, 638], "343": [397, 635, 638], "124": [397, 640, 643], "932": [397, 645, 648], "746": [397, 645, 648], "443": [397, 645, 648], "657": [397, 645, 648, 681, 694, 697], "253": [397, 650, 653], "indistinguish": [397, 655, 658], "infinit": [397, 655, 658], "32455532": [397, 655, 658], "89897949": [397, 655, 658], "50": [397, 655, 658, 842, 898, 901, 1080, 1083, 1117, 1118, 1121], "169": [397, 655, 658], "546": [397, 670, 674], "842": [397, 670, 674], "916": [397, 670, 674, 955, 956, 959], "996": [397, 670, 674], "328": [397, 670, 674], "decim": [397, 676, 680], "inspect": [681, 687, 1165, 1166], "417": [681, 694, 697], "583": [681, 694, 697], "0667": [681, 694, 697], "133": [681, 694, 697], "267": [681, 694, 697], "131": [681, 694, 697], "263": [681, 694, 697], "394": [681, 694, 697], "526": [681, 694, 697], "788": [681, 694, 697], "default_v": [681, 704], "catch_except": [681, 704], "rev": [681, 704], "with_cal": [681, 704], "arrang": [681, 705], "mod": [681, 709], "max_freq": [681, 710], "num_band": [681, 710], "fourier": [681, 710], "band": [681, 710], "linearli": [681, 710, 842, 915, 918], "oppos": [681, 710], "geometr": [681, 710], "array_mod": [681, 720], "seen_set": [681, 725], "local_set": [681, 725], "decrement": [681, 729], "allow_dupl": [681, 737], "forkserv": [681, 738], "spawn": [681, 738], "hot": [681, 740], "scatter": [681, 740, 743, 744], "overrid": [681, 740], "tmp_dr": [681, 751], "temporari": [681, 751], "min_denomin": [681, 754], "stabil": [681, 754, 755, 758, 1106, 1107, 1110, 1112, 1115], "00405002700012": [681, 755, 758], "487": [681, 755, 758], "38483402344497": [681, 755, 758], "1j": [681, 755, 758], "5384791054689897": [681, 755, 758], "2779366346323036j": [681, 755, 758], "41e": [681, 755, 758], "05e": [681, 755, 758], "37e": [681, 755, 758], "100000023841858": [681, 763], "200000047683716": [681, 763], "299999952316284": [681, 763], "400000095367432": [681, 763], "599999904632568": [681, 763], "gradienttrack": 777, "en": [777, 778, 781, 783, 785], "wikipedia": [777, 778, 781, 783, 785], "wiki": [777, 778, 781, 783, 785], "stochastic_gradient_desc": [777, 778, 781, 783, 785], "004": [777, 778, 781], "009": [777, 778, 781], "0125": [777, 778, 781], "601": [777, 778, 781], "025": [777, 778, 781], "992": [777, 778, 781], "209": [777, 778, 781, 1085, 1086, 1090], "271": [777, 778, 781], "0717": [777, 778, 781], "142": [777, 778, 781], "182": [777, 778, 781], "624": [777, 778, 781], "744": [777, 778, 781], "626": [777, 778, 781], "024": [777, 778, 781], "096": [777, 778, 781], "384": [777, 778, 781], "rate": [777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809, 1033, 1034, 1035, 1036, 1180, 1191, 1196, 1197, 1198, 1199, 1200, 1201], "ws_new": [777, 783, 785, 790, 792, 799, 801, 803, 805, 807, 809], "retain": [777, 787, 788], "trust": [777, 799, 801, 1196, 1198], "ratio": [777, 799, 801, 1196, 1198], "decai": [777, 799, 801, 803, 805, 1196, 1198, 1199], "layerwis": [777, 803, 805], "with_grads_stack": [777, 811, 820], "output_shap": [821, 827, 829, 831, 1180, 1182, 1184, 1186], "hwio": [821, 828], "unequ": [821, 828], "unsqueez": [821, 828, 832, 835], "ndhwc": [821, 830, 831, 1180, 1185, 1186], "volum": [821, 830], "fd": [821, 830, 831], "ncdhw": [821, 830, 831, 1180, 1185, 1186], "dhwio": [821, 830], "258": [821, 831], "depthwis": [821, 832, 835, 1180, 1187], "hwi": [821, 832, 835], "prob": [821, 837, 1061, 1062, 1180, 1188], "randomli": [821, 837, 1180, 1188], "bernoulli": [821, 837], "out_featur": [821, 837, 838], "incom": [821, 838], "outer_batch_shap": [821, 838], "inner_batch_shap": [821, 838], "in_featur": [821, 838], "cell": [821, 839, 1180, 1189], "num_queri": [821, 840, 841], "x_feat_dim": [821, 840], "num_kei": [821, 840, 841], "cont_feat_dim": [821, 840], "numhead": [821, 840], "feat_dim": [821, 840, 841], "out_feat_dim": [821, 840], "score": [821, 841], "decomposit": [842, 843, 846, 906, 909, 920, 924], "vif": [842, 848, 851], "293": [842, 853, 856], "46997": [842, 853, 856], "eigendecomposit": [842, 863, 866], "qlq\u1d40": [842, 863, 866], "orthogon": [842, 863, 866], "eig": [842, 863, 866], "eigenvalu": [842, 863, 866, 867, 869], "eigenvector": [842, 863, 866], "prepend": [842, 875, 878], "singular": [842, 888, 891, 903, 905, 920, 924, 925, 929], "largest_singular_valu": [842, 888, 891, 903, 905], "array_lik": [842, 898, 901], "105": [842, 898, 901, 955, 956, 959], "112": [842, 898, 901, 1117, 1118, 1121], "104": [842, 898, 901, 1117, 1118, 1121], "120": [842, 898, 901], "moor": [842, 903, 905], "penros": [842, 903, 905], "pseudo": [842, 903, 905], "orthonorm": [842, 906, 909, 920, 924], "2d": [842, 911, 913, 1180, 1183, 1184, 1187], "logdet": [842, 911, 913], "coeffici": [842, 915, 918], "usvh": [842, 920, 924], "vh": [842, 920, 924], "hermitian": [842, 920, 924], "et": [842, 920, 924], "cetera": [842, 920, 924], "adjoint": [842, 920, 924], "reconstruct": [842, 920, 924, 1085, 1086, 1090, 1096, 1100], "reconstructed_x": [842, 920, 924], "ss": [842, 925, 929], "615": [842, 925, 929, 1085, 1086, 1090], "00e": [842, 925, 929], "38e": [842, 925, 929], "866": [842, 925, 929], "864": [842, 925, 929], "contract": [842, 930, 934, 1117, 1118, 1121], "doubl": [842, 930, 934], "manhattan": [842, 945, 949], "l2": [842, 945, 949], "euclidean": [842, 945, 949], "mathbf": [842, 950, 954], "mathbb": [842, 950, 954], "skew": [842, 950, 954], "staticmethod": [870, 874, 925, 926], "idiom": [870, 874, 925, 926], "arg1": [870, 874, 925, 926], "arg2": [870, 874, 925, 926], "java": [870, 874, 925, 926], "concept": [870, 874, 925, 926], "classmethod": [870, 874, 925, 926], "discret": [955, 961, 964], "35667497": [955, 961, 964], "793291": [955, 966, 969], "512926": [955, 966, 969], "before_1": [971, 981, 984, 1029, 1032], "after_1": [971, 981, 984, 1029, 1032], "before_n": [971, 981, 984, 1029, 1032], "after_n": [971, 981, 984, 1029, 1032], "insert": [971, 985, 988, 1037, 1042, 1080, 1081], "manipulation_funct": [971, 985, 988], "reorder": [971, 989, 992], "permut": [971, 993, 996, 1021, 1024], "repetit": [971, 997, 1000, 1025, 1028], "famili": [971, 1017, 1020], "intxx": [971, 1017, 1020], "floatxx": [971, 1017, 1020], "fomaml_step": 1033, "inner_cost_fn": [1033, 1034, 1035], "outer_cost_fn": [1033, 1034, 1035], "inner_grad_step": [1033, 1034, 1035, 1036], "inner_learning_r": [1033, 1034, 1035, 1036], "inner_optimization_step": [1033, 1034, 1035, 1036], "inner_batch_fn": [1033, 1034, 1035], "outer_batch_fn": [1033, 1034, 1035], "average_across_step": [1033, 1034, 1035], "inner_v": [1033, 1034, 1035], "keep_inner_v": [1033, 1034, 1035], "outer_v": [1033, 1034, 1035], "keep_outer_v": [1033, 1034, 1035], "return_inner_v": [1033, 1034, 1035, 1036], "num_task": [1033, 1034, 1035, 1036], "maml": [1033, 1034, 1035], "recev": [1033, 1034, 1035], "0x7f1f89ddf940": [1033, 1034, 1035, 1036], "maml_step": 1033, "rece": [1033, 1035], "reptile_step": 1033, "cost_fn": [1033, 1036], "reptil": [1033, 1036], "receivng": [1033, 1036], "all_nested_indic": 1037, "include_nest": [1037, 1038], "_index": [1037, 1038, 1048], "_base": [1037, 1038, 1047, 1048], "copy_nest": 1037, "to_mut": [1037, 1039, 1049], "mutabl": [1037, 1039, 1049], "insert_into_nest_at_index": 1037, "insert_into_nest_at_indic": 1037, "map_nest_at_index": 1037, "map_nest_at_indic": 1037, "multi_index_nest": 1037, "nested_ani": 1037, "check_nest": [1037, 1047, 1048], "conditon": [1037, 1047, 1048], "nested_indices_wher": 1037, "stop_after_n_found": [1037, 1048], "_depth": [1037, 1049], "_tuple_check_fn": [1037, 1049], "_list_check_fn": [1037, 1049], "_dict_check_fn": [1037, 1049], "nested_multi_map": 1037, "nest0": [1037, 1050], "ivy_arrai": [1037, 1050], "funciton": [1037, 1050], "prune_nest_at_index": 1037, "prune_nest_at_indic": 1037, "set_nest_at_index": 1037, "set_nest_at_indic": 1037, "111": [1037, 1054], "xyz": [1037, 1054], "pqr": [1037, 1054], "mini": [1055, 1056, 1059, 1194, 1195], "772": [1055, 1056, 1059], "796": [1055, 1056, 1059], "population_s": [1061, 1062], "num_sampl": [1061, 1062], "home": [1061, 1062, 1068, 1071, 1196, 1197, 1198, 1199, 1201], "uniformli": [1061, 1063, 1066, 1073, 1076], "22346112": [1061, 1068, 1071], "0922": [1061, 1068, 1071], "515": [1061, 1068, 1071], "361": [1061, 1068, 1071], "596": [1061, 1068, 1071], "247": [1061, 1068, 1071], "0426": [1061, 1068, 1071], "627": [1061, 1068, 1071], "9213753": [1061, 1068, 1071], "12818667": [1061, 1068, 1071], "799": [1061, 1068, 1071], "469": [1061, 1068, 1071], "287": [1061, 1068, 1071], "0366": [1061, 1068, 1071], "26431865": [1061, 1073, 1076], "475": [1061, 1073, 1076], "878": [1061, 1073, 1076], "861": [1061, 1073, 1076], "929": [1061, 1073, 1076], "545": [1061, 1073, 1076], "789": [1061, 1073, 1076], "519": [1061, 1073, 1076], "0435": [1061, 1073, 1076], "381": [1061, 1073, 1076, 1085, 1086, 1090], "4608004": [1061, 1073, 1076], "8458502": [1061, 1073, 1076], "occurr": [1080, 1081, 1082, 1085, 1086, 1090], "x_j": [1085, 1086, 1090, 1091, 1095, 1101, 1105], "impli": [1085, 1086, 1090, 1091, 1095, 1101, 1105], "inverse_indic": [1085, 1086, 1090, 1096, 1100], "aggreg": [1085, 1086, 1090], "fourth": [1085, 1086, 1090], "607": [1085, 1086, 1090], "735": [1085, 1086, 1090], "857": [1085, 1086, 1090], "0396": [1085, 1086, 1090], "166": [1085, 1086, 1090], "58": [1085, 1086, 1090], "828": [1085, 1086, 1090], "144": [1085, 1086, 1090], "40501155": [1085, 1086, 1090], "77361575": [1085, 1086, 1090], "97776199": [1085, 1086, 1090], "36831157": [1085, 1086, 1090], "89148434": [1085, 1086, 1090], "9512272": [1085, 1086, 1090], "67542176": [1085, 1086, 1090], "41985657": [1085, 1086, 1090], "23478023": [1085, 1086, 1090], "1141": [1085, 1086, 1090], "8101": [1085, 1086, 1090], "9298": [1085, 1086, 1090], "8460": [1085, 1086, 1090], "2119": [1085, 1086, 1090], "3519": [1085, 1086, 1090], "6252": [1085, 1086, 1090], "4033": [1085, 1086, 1090], "7443": [1085, 1086, 1090], "2577": [1085, 1086, 1090], "3707": [1085, 1086, 1090], "0545": [1085, 1086, 1090], "3238": [1085, 1086, 1090], "5944": [1085, 1086, 1090], "0775": [1085, 1086, 1090], "4327": [1085, 1086, 1090], "176": [1085, 1086, 1090], "889": [1085, 1086, 1090], "175": [1085, 1086, 1090], "763": [1085, 1086, 1090], "071": [1085, 1086, 1090], "262": [1085, 1086, 1090], "456": [1085, 1086, 1090], "114": [1085, 1086, 1090], "349": [1085, 1086, 1090], "594": [1085, 1086, 1090], "335": [1085, 1086, 1090], "212": [1085, 1086, 1090], "457": [1085, 1086, 1090], "827": [1085, 1086, 1090], "set_funct": [1085, 1091, 1095], "ascend": [1106, 1107, 1110], "einstein": [1117, 1118, 1121], "summat": [1117, 1118, 1121], "seq": [1117, 1118, 1121], "jk": [1117, 1118, 1121], "ik": [1117, 1118, 1121], "126": [1117, 1118, 1121], "510": [1117, 1118, 1121], "108": [1117, 1118, 1121], "117": [1117, 1118, 1121], "sentinel": [1117, 1122, 1125, 1130, 1133], "degre": [1117, 1138, 1141, 1146, 1149], "bessel": [1117, 1138, 1141, 1146, 1149], "8164966": [1117, 1138, 1141], "varianc": [1117, 1146, 1149], "unbias": [1117, 1146, 1149], "simplicit": [1150, 1151, 1154], "grow": 1161, "ai": 1161, "got": 1161, "colab": 1161, "sharp": 1161, "weekli": 1161, "immedi": 1161, "favorit": 1161, "jax_concat": 1161, "tf_concat": 1161, "np_concat": 1161, "mx_concat": 1161, "torch_concat": 1161, "get_devic": 1161, "reduce_prod": 1161, "gradient_imag": 1161, "linalg": 1161, "bilinear_resampl": 1161, "stack_imag": 1161, "neural_net": 1161, "ecosystem": [1161, 1167], "popular": [1161, 1167], "acceler": 1161, "articl": 1161, "lenton2021ivi": 1161, "inter": 1161, "lenton": 1161, "daniel": 1161, "pardo": 1161, "fabio": 1161, "falck": 1161, "fabian": 1161, "jame": 1161, "stephen": 1161, "clark": 1161, "ronald": 1161, "journal": 1161, "arxiv": 1161, "preprint": 1161, "2102": 1161, "02886": 1161, "2021": 1161, "add_array_spec": 1164, "fn_array_spec": 1164, "geglu": 1169, "native_modul": [1172, 1173], "native_module_class": [1172, 1173], "firstlayersiren": 1174, "kaimingnorm": 1174, "negative_slop": 1174, "Ones": 1174, "siren": 1174, "w0": [1174, 1178], "filter_s": [1180, 1181, 1182], "1d": [1180, 1181, 1182], "conv1dtranspos": 1180, "filter_shap": [1180, 1183, 1184, 1185, 1186, 1187], "conv2dtranspos": 1180, "conv3dtranspos": 1180, "depthwiseconv2d": 1180, "num_channel": [1180, 1187], "bernoul": [1180, 1188], "num_lay": [1180, 1189], "return_sequ": [1180, 1189], "return_st": [1180, 1189], "get_initial_st": [1180, 1189], "dens": [1180, 1190], "multiheadattent": 1180, "query_dim": [1180, 1191], "head_dim": [1180, 1191], "dropout_r": [1180, 1191], "context_dim": [1180, 1191], "with_to_q_fn": [1180, 1191], "with_to_kv_fn": [1180, 1191], "with_to_out_fn": [1180, 1191], "build_mod": [1180, 1191, 1192, 1193], "on_init": [1180, 1191, 1192, 1193], "__call__": [1180, 1191, 1192, 1193], "store_var": [1192, 1193], "arg_stateful_idx": [1192, 1193], "kwarg_stateful_idx": [1192, 1193], "fallback_to_non_compil": [1192, 1193, 1196, 1200], "with_partial_v": [1192, 1193], "initialz": [1192, 1193], "from_cal": [1192, 1193], "check_submod_ret": [1192, 1193], "get_mod_kei": [1192, 1193], "top_mod": [1192, 1193], "mod_depth": [1192, 1193], "mod_height": [1192, 1193], "mod_with_top_mod_key_chain": [1192, 1193], "save_weight": [1192, 1193], "weights_path": [1192, 1193], "show_mod_in_top_mod": [1192, 1193], "upper_depth": [1192, 1193], "lower_depth": [1192, 1193], "show_structur": [1192, 1193], "show_v_in_top_v": [1192, 1193], "sub_mod": [1192, 1193], "show_v": [1192, 1193], "track_submod_call_ord": [1192, 1193], "track_submod_ret": [1192, 1193], "v_with_top_v_key_chain": [1192, 1193], "layernorm": 1194, "normalized_shap": [1194, 1195], "elementwise_affin": [1194, 1195], "trail": [1194, 1195], "affin": [1194, 1195], "0x7f1f8a0bb820": [1196, 1199], "init_on_first_step": [1196, 1200], "ignore_miss": [1196, 1200], "overridden": [1196, 1200], "sgd": 1196, "stochast": [1196, 1201], "0x7f1f8a0bb550": [1196, 1201], "sub_modul": [1202, 1203]}, "objects": {"ivy.array": [[23, 0, 0, "-", "activations"], [25, 0, 0, "-", "array"], [28, 0, 0, "-", "conversions"], [34, 0, 0, "-", "creation"], [36, 0, 0, "-", "data_type"], [38, 0, 0, "-", "device"], [40, 0, 0, "-", "elementwise"], [42, 0, 0, "-", "general"], [44, 0, 0, "-", "gradients"], [46, 0, 0, "-", "image"], [48, 0, 0, "-", "layers"], [50, 0, 0, "-", "linear_algebra"], [52, 0, 0, "-", "losses"], [54, 0, 0, "-", "manipulation"], [56, 0, 0, "-", "norms"], [58, 0, 0, "-", "random"], [60, 0, 0, "-", "searching"], [62, 0, 0, "-", "set"], [64, 0, 0, "-", "sorting"], [66, 0, 0, "-", "statistical"], [68, 0, 0, "-", "utility"], [70, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[24, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[24, 2, 1, "", "gelu"], [24, 2, 1, "", "leaky_relu"], [24, 2, 1, "", "relu"], [24, 2, 1, "", "sigmoid"], [24, 2, 1, "", "softmax"], [24, 2, 1, "", "softplus"], [24, 2, 1, "", "tanh"]], "ivy.array.array": [[26, 1, 1, "", "Array"], [27, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[26, 3, 1, "", "T"], [26, 2, 1, "", "__add__"], [26, 2, 1, "", "__init__"], [26, 2, 1, "", "__le__"], [26, 2, 1, "", "__radd__"], [26, 2, 1, "", "adam_update"], [26, 2, 1, "", "arange"], [26, 2, 1, "", "arg_info"], [26, 2, 1, "", "arg_names"], [26, 2, 1, "", "argmax"], [26, 2, 1, "", "argmin"], [26, 2, 1, "", "array"], [26, 2, 1, "", "array_equal"], [26, 2, 1, "", "arrays_equal"], [26, 2, 1, "", "as_ivy_dev"], [26, 2, 1, "", "as_ivy_dtype"], [26, 2, 1, "", "as_native_dev"], [26, 2, 1, "", "as_native_dtype"], [26, 2, 1, "", "assert_supports_inplace"], [26, 2, 1, "", "cache_fn"], [26, 2, 1, "", "clear_mem_on_dev"], [26, 2, 1, "", "clip_matrix_norm"], [26, 2, 1, "", "closest_valid_dtype"], [26, 2, 1, "", "container_types"], [26, 2, 1, "", "conv1d_transpose"], [26, 2, 1, "", "conv2d"], [26, 2, 1, "", "conv2d_transpose"], [26, 2, 1, "", "conv3d"], [26, 2, 1, "", "conv3d_transpose"], [26, 2, 1, "", "copy_array"], [26, 2, 1, "", "cumprod"], [26, 2, 1, "", "cumsum"], [26, 2, 1, "", "current_backend"], [26, 2, 1, "", "current_backend_str"], [26, 3, 1, "", "data"], [26, 2, 1, "", "default"], [26, 2, 1, "", "default_device"], [26, 2, 1, "", "default_dtype"], [26, 2, 1, "", "default_float_dtype"], [26, 2, 1, "", "default_int_dtype"], [26, 2, 1, "", "default_uint_dtype"], [26, 2, 1, "", "dev_util"], [26, 3, 1, "", "device"], [26, 2, 1, "", "dropout"], [26, 3, 1, "", "dtype"], [26, 2, 1, "", "dtype_bits"], [26, 2, 1, "", "einops_rearrange"], [26, 2, 1, "", "einops_reduce"], [26, 2, 1, "", "einops_repeat"], [26, 2, 1, "", "empty"], [26, 2, 1, "", "execute_with_gradients"], [26, 2, 1, "", "exists"], [26, 2, 1, "", "eye"], [26, 2, 1, "", "floormod"], [26, 2, 1, "", "fourier_encode"], [26, 2, 1, "", "full"], [26, 2, 1, "", "function_supported_devices"], [26, 2, 1, "", "function_supported_devices_and_dtypes"], [26, 2, 1, "", "function_supported_dtypes"], [26, 2, 1, "", "function_unsupported_devices"], [26, 2, 1, "", "function_unsupported_devices_and_dtypes"], [26, 2, 1, "", "function_unsupported_dtypes"], [26, 2, 1, "", "gather"], [26, 2, 1, "", "get_all_arrays_in_memory"], [26, 2, 1, "", "get_all_ivy_arrays_on_dev"], [26, 2, 1, "", "get_array_mode"], [26, 2, 1, "", "get_min_base"], [26, 2, 1, "", "get_min_denominator"], [26, 2, 1, "", "get_nestable_mode"], [26, 2, 1, "", "get_num_dims"], [26, 2, 1, "", "get_referrers_recursive"], [26, 2, 1, "", "gpu_is_available"], [26, 2, 1, "", "gradient_descent_update"], [26, 2, 1, "", "handle_nestable"], [26, 2, 1, "", "handle_out_argument"], [26, 2, 1, "", "has_nans"], [26, 2, 1, "", "indices_where"], [26, 2, 1, "", "infer_device"], [26, 2, 1, "", "infer_dtype"], [26, 2, 1, "", "inplace_arrays_supported"], [26, 2, 1, "", "inplace_decrement"], [26, 2, 1, "", "inplace_increment"], [26, 2, 1, "", "inplace_update"], [26, 2, 1, "", "inplace_variables_supported"], [26, 2, 1, "", "inputs_to_native_arrays"], [26, 2, 1, "", "invalid_dtype"], [26, 2, 1, "", "is_array"], [26, 2, 1, "", "is_ivy_array"], [26, 2, 1, "", "is_ivy_container"], [26, 2, 1, "", "is_native_array"], [26, 3, 1, "", "is_variable"], [26, 2, 1, "", "lamb_update"], [26, 2, 1, "", "lars_update"], [26, 2, 1, "", "linear"], [26, 2, 1, "", "linspace"], [26, 2, 1, "", "logspace"], [26, 2, 1, "", "lstm_update"], [26, 3, 1, "", "mT"], [26, 2, 1, "", "match_kwargs"], [26, 2, 1, "", "matrix_power"], [26, 2, 1, "", "maximum"], [26, 2, 1, "", "minimum"], [26, 2, 1, "", "multi_head_attention"], [26, 2, 1, "", "multinomial"], [26, 2, 1, "", "multiprocessing"], [26, 3, 1, "", "ndim"], [26, 2, 1, "", "nonzero"], [26, 2, 1, "", "num_arrays_in_memory"], [26, 2, 1, "", "num_cpu_cores"], [26, 2, 1, "", "num_gpus"], [26, 2, 1, "", "num_ivy_arrays_on_dev"], [26, 2, 1, "", "one_hot"], [26, 2, 1, "", "ones"], [26, 2, 1, "", "optimizer_update"], [26, 2, 1, "", "outputs_to_ivy_arrays"], [26, 2, 1, "", "percent_used_mem_on_dev"], [26, 2, 1, "", "print_all_arrays_in_memory"], [26, 2, 1, "", "print_all_ivy_arrays_on_dev"], [26, 2, 1, "", "promote_types"], [26, 2, 1, "", "queue_timeout"], [26, 2, 1, "", "scaled_dot_product_attention"], [26, 2, 1, "", "scatter_flat"], [26, 2, 1, "", "scatter_nd"], [26, 2, 1, "", "seed"], [26, 2, 1, "", "set_array_mode"], [26, 2, 1, "", "set_default_device"], [26, 2, 1, "", "set_default_dtype"], [26, 2, 1, "", "set_default_float_dtype"], [26, 2, 1, "", "set_default_int_dtype"], [26, 2, 1, "", "set_default_uint_dtype"], [26, 2, 1, "", "set_min_base"], [26, 2, 1, "", "set_min_denominator"], [26, 2, 1, "", "set_nestable_mode"], [26, 2, 1, "", "set_queue_timeout"], [26, 2, 1, "", "set_shape_array_mode"], [26, 2, 1, "", "set_split_factor"], [26, 2, 1, "", "set_tmp_dir"], [26, 2, 1, "", "set_with_grads"], [26, 3, 1, "", "shape"], [26, 2, 1, "", "shape_array_mode"], [26, 2, 1, "", "shuffle"], [26, 3, 1, "", "size"], [26, 2, 1, "", "slogdet"], [26, 2, 1, "", "split"], [26, 2, 1, "", "split_factor"], [26, 2, 1, "", "split_func_call"], [26, 2, 1, "", "stable_divide"], [26, 2, 1, "", "stop_gradient"], [26, 2, 1, "", "supports_inplace"], [26, 2, 1, "", "tmp_dir"], [26, 2, 1, "", "to_ivy_shape"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_native_arrays_and_back"], [26, 2, 1, "", "to_native_shape"], [26, 2, 1, "", "to_scalar"], [26, 2, 1, "", "total_mem_on_dev"], [26, 2, 1, "", "tpu_is_available"], [26, 2, 1, "", "try_else_none"], [26, 2, 1, "", "type_promote_arrays"], [26, 2, 1, "", "unset_array_mode"], [26, 2, 1, "", "unset_default_device"], [26, 2, 1, "", "unset_default_dtype"], [26, 2, 1, "", "unset_default_float_dtype"], [26, 2, 1, "", "unset_default_int_dtype"], [26, 2, 1, "", "unset_default_uint_dtype"], [26, 2, 1, "", "unset_nestable_mode"], [26, 2, 1, "", "unset_shape_array_mode"], [26, 2, 1, "", "unset_with_grads"], [26, 2, 1, "", "unstack"], [26, 2, 1, "", "used_mem_on_dev"], [26, 2, 1, "", "valid_dtype"], [26, 2, 1, "", "value_is_nan"], [26, 2, 1, "", "variable_data"], [26, 2, 1, "", "where"], [26, 2, 1, "", "with_grads"], [26, 2, 1, "", "zeros"]], "ivy.array.array.Variable": [[27, 2, 1, "", "__init__"]], "ivy.array.array_methods": [[399, 4, 1, "", "abs"], [404, 4, 1, "", "acos"], [409, 4, 1, "", "acosh"], [779, 4, 1, "", "adam_step"], [414, 4, 1, "", "add"], [1152, 4, 1, "", "all"], [683, 4, 1, "", "all_equal"], [1157, 4, 1, "", "any"], [1108, 4, 1, "", "argsort"], [209, 4, 1, "", "asarray"], [419, 4, 1, "", "asin"], [424, 4, 1, "", "asinh"], [278, 4, 1, "", "astype"], [429, 4, 1, "", "atan"], [434, 4, 1, "", "atan2"], [439, 4, 1, "", "atanh"], [957, 4, 1, "", "binary_cross_entropy"], [444, 4, 1, "", "bitwise_and"], [449, 4, 1, "", "bitwise_invert"], [454, 4, 1, "", "bitwise_left_shift"], [459, 4, 1, "", "bitwise_or"], [464, 4, 1, "", "bitwise_right_shift"], [469, 4, 1, "", "bitwise_xor"], [283, 4, 1, "", "broadcast_arrays"], [288, 4, 1, "", "broadcast_to"], [293, 4, 1, "", "can_cast"], [474, 4, 1, "", "ceil"], [844, 4, 1, "", "cholesky"], [973, 4, 1, "", "clip"], [695, 4, 1, "", "clip_vector_norm"], [978, 4, 1, "", "concat"], [982, 4, 1, "", "constant_pad"], [823, 4, 1, "", "conv1d"], [479, 4, 1, "", "cos"], [484, 4, 1, "", "cosh"], [849, 4, 1, "", "cross"], [962, 4, 1, "", "cross_entropy"], [833, 4, 1, "", "depthwise_conv2d"], [854, 4, 1, "", "det"], [370, 4, 1, "", "dev"], [859, 4, 1, "", "diagonal"], [489, 4, 1, "", "divide"], [305, 4, 1, "", "dtype"], [864, 4, 1, "", "eigh"], [868, 4, 1, "", "eigvalsh"], [1119, 4, 1, "", "einsum"], [214, 4, 1, "", "empty_like"], [494, 4, 1, "", "equal"], [499, 4, 1, "", "erf"], [504, 4, 1, "", "exp"], [986, 4, 1, "", "expand_dims"], [509, 4, 1, "", "expm1"], [311, 4, 1, "", "finfo"], [990, 4, 1, "", "flip"], [514, 4, 1, "", "floor"], [519, 4, 1, "", "floor_divide"], [222, 4, 1, "", "from_dlpack"], [228, 4, 1, "", "full_like"], [715, 4, 1, "", "gather_nd"], [167, 4, 1, "", "gelu"], [524, 4, 1, "", "greater"], [529, 4, 1, "", "greater_equal"], [322, 4, 1, "", "iinfo"], [871, 4, 1, "", "inv"], [328, 4, 1, "", "is_bool_dtype"], [333, 4, 1, "", "is_float_dtype"], [338, 4, 1, "", "is_int_dtype"], [343, 4, 1, "", "is_uint_dtype"], [795, 4, 1, "", "is_variable"], [534, 4, 1, "", "isfinite"], [539, 4, 1, "", "isinf"], [544, 4, 1, "", "isnan"], [1057, 4, 1, "", "layer_norm"], [172, 4, 1, "", "leaky_relu"], [549, 4, 1, "", "less"], [554, 4, 1, "", "less_equal"], [559, 4, 1, "", "log"], [564, 4, 1, "", "log10"], [569, 4, 1, "", "log1p"], [574, 4, 1, "", "log2"], [579, 4, 1, "", "logaddexp"], [584, 4, 1, "", "logical_and"], [589, 4, 1, "", "logical_not"], [594, 4, 1, "", "logical_or"], [599, 4, 1, "", "logical_xor"], [876, 4, 1, "", "matmul"], [880, 4, 1, "", "matrix_norm"], [889, 4, 1, "", "matrix_rank"], [894, 4, 1, "", "matrix_transpose"], [1123, 4, 1, "", "max"], [1127, 4, 1, "", "mean"], [239, 4, 1, "", "meshgrid"], [1131, 4, 1, "", "min"], [606, 4, 1, "", "multiply"], [244, 4, 1, "", "native_array"], [611, 4, 1, "", "negative"], [616, 4, 1, "", "not_equal"], [252, 4, 1, "", "ones_like"], [899, 4, 1, "", "outer"], [994, 4, 1, "", "permute_dims"], [904, 4, 1, "", "pinv"], [621, 4, 1, "", "positive"], [626, 4, 1, "", "pow"], [1135, 4, 1, "", "prod"], [907, 4, 1, "", "qr"], [1064, 4, 1, "", "randint"], [1069, 4, 1, "", "random_normal"], [1074, 4, 1, "", "random_uniform"], [177, 4, 1, "", "relu"], [631, 4, 1, "", "remainder"], [998, 4, 1, "", "repeat"], [1003, 4, 1, "", "reshape"], [349, 4, 1, "", "result_type"], [1008, 4, 1, "", "roll"], [636, 4, 1, "", "round"], [182, 4, 1, "", "sigmoid"], [641, 4, 1, "", "sign"], [646, 4, 1, "", "sin"], [651, 4, 1, "", "sinh"], [187, 4, 1, "", "softmax"], [192, 4, 1, "", "softplus"], [916, 4, 1, "", "solve"], [1113, 4, 1, "", "sort"], [967, 4, 1, "", "sparse_cross_entropy"], [656, 4, 1, "", "sqrt"], [661, 4, 1, "", "square"], [1014, 4, 1, "", "squeeze"], [756, 4, 1, "", "stable_pow"], [1018, 4, 1, "", "stack"], [1139, 4, 1, "", "std"], [667, 4, 1, "", "subtract"], [1143, 4, 1, "", "sum"], [922, 4, 1, "", "svd"], [927, 4, 1, "", "svdvals"], [1022, 4, 1, "", "swapaxes"], [672, 4, 1, "", "tan"], [198, 4, 1, "", "tanh"], [932, 4, 1, "", "tensordot"], [1026, 4, 1, "", "tile"], [390, 4, 1, "", "to_device"], [767, 4, 1, "", "to_numpy"], [937, 4, 1, "", "trace"], [258, 4, 1, "", "tril"], [263, 4, 1, "", "triu"], [678, 4, 1, "", "trunc"], [1088, 4, 1, "", "unique_all"], [1093, 4, 1, "", "unique_counts"], [1098, 4, 1, "", "unique_inverse"], [1103, 4, 1, "", "unique_values"], [1147, 4, 1, "", "var"], [816, 4, 1, "", "variable"], [942, 4, 1, "", "vecdot"], [947, 4, 1, "", "vector_norm"], [952, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1030, 4, 1, "", "zero_pad"], [271, 4, 1, "", "zeros_like"]], "ivy.array.conversions": [[29, 4, 1, "", "args_to_container"], [30, 4, 1, "", "args_to_ivy"], [31, 4, 1, "", "args_to_native"], [32, 4, 1, "", "to_ivy"], [33, 4, 1, "", "to_native"]], "ivy.array.creation": [[35, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[35, 2, 1, "", "asarray"], [35, 2, 1, "", "empty_like"], [35, 2, 1, "", "from_dlpack"], [35, 2, 1, "", "full_like"], [35, 2, 1, "", "meshgrid"], [35, 2, 1, "", "native_array"], [35, 2, 1, "", "ones_like"], [35, 2, 1, "", "tril"], [35, 2, 1, "", "triu"], [35, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[37, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[37, 2, 1, "", "astype"], [37, 2, 1, "", "broadcast_arrays"], [37, 2, 1, "", "broadcast_to"], [37, 2, 1, "", "can_cast"], [37, 2, 1, "", "dtype"], [37, 2, 1, "", "finfo"], [37, 2, 1, "", "iinfo"], [37, 2, 1, "", "is_bool_dtype"], [37, 2, 1, "", "is_float_dtype"], [37, 2, 1, "", "is_int_dtype"], [37, 2, 1, "", "is_uint_dtype"], [37, 2, 1, "", "result_type"]], "ivy.array.device": [[39, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[39, 2, 1, "", "dev"], [39, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[41, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[41, 2, 1, "", "abs"], [41, 2, 1, "", "acos"], [41, 2, 1, "", "acosh"], [41, 2, 1, "", "add"], [41, 2, 1, "", "asin"], [41, 2, 1, "", "asinh"], [41, 2, 1, "", "atan"], [41, 2, 1, "", "atan2"], [41, 2, 1, "", "atanh"], [41, 2, 1, "", "bitwise_and"], [41, 2, 1, "", "bitwise_invert"], [41, 2, 1, "", "bitwise_left_shift"], [41, 2, 1, "", "bitwise_or"], [41, 2, 1, "", "bitwise_right_shift"], [41, 2, 1, "", "bitwise_xor"], [41, 2, 1, "", "ceil"], [41, 2, 1, "", "cos"], [41, 2, 1, "", "cosh"], [41, 2, 1, "", "divide"], [41, 2, 1, "", "equal"], [41, 2, 1, "", "erf"], [41, 2, 1, "", "exp"], [41, 2, 1, "", "expm1"], [41, 2, 1, "", "floor"], [41, 2, 1, "", "floor_divide"], [41, 2, 1, "", "greater"], [41, 2, 1, "", "greater_equal"], [41, 2, 1, "", "isfinite"], [41, 2, 1, "", "isinf"], [41, 2, 1, "", "isnan"], [41, 2, 1, "", "less"], [41, 2, 1, "", "less_equal"], [41, 2, 1, "", "log"], [41, 2, 1, "", "log10"], [41, 2, 1, "", "log1p"], [41, 2, 1, "", "log2"], [41, 2, 1, "", "logaddexp"], [41, 2, 1, "", "logical_and"], [41, 2, 1, "", "logical_not"], [41, 2, 1, "", "logical_or"], [41, 2, 1, "", "logical_xor"], [41, 2, 1, "", "multiply"], [41, 2, 1, "", "negative"], [41, 2, 1, "", "not_equal"], [41, 2, 1, "", "positive"], [41, 2, 1, "", "pow"], [41, 2, 1, "", "remainder"], [41, 2, 1, "", "round"], [41, 2, 1, "", "sign"], [41, 2, 1, "", "sin"], [41, 2, 1, "", "sinh"], [41, 2, 1, "", "sqrt"], [41, 2, 1, "", "square"], [41, 2, 1, "", "subtract"], [41, 2, 1, "", "tan"], [41, 2, 1, "", "tanh"], [41, 2, 1, "", "trunc"]], "ivy.array.general": [[43, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[43, 2, 1, "", "all_equal"], [43, 2, 1, "", "clip_vector_norm"], [43, 2, 1, "", "gather_nd"], [43, 2, 1, "", "stable_pow"], [43, 2, 1, "", "to_numpy"]], "ivy.array.gradients": [[45, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[45, 2, 1, "", "adam_step"], [45, 2, 1, "", "is_variable"], [45, 2, 1, "", "variable"]], "ivy.array.image": [[47, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[49, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[49, 2, 1, "", "conv1d"], [49, 2, 1, "", "depthwise_conv2d"]], "ivy.array.linear_algebra": [[51, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[51, 2, 1, "", "cholesky"], [51, 2, 1, "", "cross"], [51, 2, 1, "", "det"], [51, 2, 1, "", "diagonal"], [51, 2, 1, "", "eigh"], [51, 2, 1, "", "eigvalsh"], [51, 2, 1, "", "inv"], [51, 2, 1, "", "matmul"], [51, 2, 1, "", "matrix_norm"], [51, 2, 1, "", "matrix_rank"], [51, 2, 1, "", "matrix_transpose"], [51, 2, 1, "", "outer"], [51, 2, 1, "", "pinv"], [51, 2, 1, "", "qr"], [51, 2, 1, "", "solve"], [51, 2, 1, "", "svd"], [51, 2, 1, "", "svdvals"], [51, 2, 1, "", "tensordot"], [51, 2, 1, "", "trace"], [51, 2, 1, "", "vecdot"], [51, 2, 1, "", "vector_norm"], [51, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[53, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[53, 2, 1, "", "binary_cross_entropy"], [53, 2, 1, "", "cross_entropy"], [53, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[55, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[55, 2, 1, "", "clip"], [55, 2, 1, "", "concat"], [55, 2, 1, "", "constant_pad"], [55, 2, 1, "", "expand_dims"], [55, 2, 1, "", "flip"], [55, 2, 1, "", "permute_dims"], [55, 2, 1, "", "repeat"], [55, 2, 1, "", "reshape"], [55, 2, 1, "", "roll"], [55, 2, 1, "", "squeeze"], [55, 2, 1, "", "stack"], [55, 2, 1, "", "swapaxes"], [55, 2, 1, "", "tile"], [55, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[57, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[57, 2, 1, "", "layer_norm"]], "ivy.array.random": [[59, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[59, 2, 1, "", "randint"], [59, 2, 1, "", "random_normal"], [59, 2, 1, "", "random_uniform"]], "ivy.array.searching": [[61, 1, 1, "", "ArrayWithSearching"]], "ivy.array.set": [[63, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[63, 2, 1, "", "unique_all"], [63, 2, 1, "", "unique_counts"], [63, 2, 1, "", "unique_inverse"], [63, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[65, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[65, 2, 1, "", "argsort"], [65, 2, 1, "", "sort"]], "ivy.array.statistical": [[67, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[67, 2, 1, "", "einsum"], [67, 2, 1, "", "max"], [67, 2, 1, "", "mean"], [67, 2, 1, "", "min"], [67, 2, 1, "", "prod"], [67, 2, 1, "", "std"], [67, 2, 1, "", "sum"], [67, 2, 1, "", "var"]], "ivy.array.utility": [[69, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[69, 2, 1, "", "all"], [69, 2, 1, "", "any"]], "ivy.array.wrapping": [[71, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[0, 0, 0, "-", "backend_handler"], [155, 0, 0, "-", "func_wrapper"], [1164, 0, 0, "-", "inspection"], [1168, 0, 0, "-", "stateful"], [1205, 0, 0, "-", "verbosity"]], "ivy.backend_handler": [[0, 1, 1, "", "ContextManager"], [1, 4, 1, "", "choose_random_backend"], [2, 4, 1, "", "clear_backend_stack"], [3, 4, 1, "", "current_backend"], [4, 4, 1, "", "get_backend"], [5, 4, 1, "", "set_backend"], [6, 4, 1, "", "try_import_ivy_jax"], [7, 4, 1, "", "try_import_ivy_mxnet"], [8, 4, 1, "", "try_import_ivy_numpy"], [9, 4, 1, "", "try_import_ivy_tf"], [10, 4, 1, "", "try_import_ivy_torch"], [11, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[0, 2, 1, "", "__init__"]], "ivy.container": [[73, 0, 0, "-", "activations"], [75, 0, 0, "-", "base"], [77, 0, 0, "-", "container"], [79, 0, 0, "-", "creation"], [81, 0, 0, "-", "data_type"], [83, 0, 0, "-", "device"], [85, 0, 0, "-", "elementwise"], [87, 0, 0, "-", "general"], [89, 0, 0, "-", "gradients"], [91, 0, 0, "-", "image"], [93, 0, 0, "-", "layers"], [95, 0, 0, "-", "linear_algebra"], [97, 0, 0, "-", "losses"], [99, 0, 0, "-", "manipulation"], [101, 0, 0, "-", "norms"], [103, 0, 0, "-", "random"], [105, 0, 0, "-", "searching"], [107, 0, 0, "-", "set"], [109, 0, 0, "-", "sorting"], [111, 0, 0, "-", "statistical"], [113, 0, 0, "-", "utility"], [115, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[74, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[74, 2, 1, "", "gelu"], [74, 2, 1, "", "leaky_relu"], [74, 2, 1, "", "relu"], [74, 2, 1, "", "sigmoid"], [74, 2, 1, "", "softmax"], [74, 2, 1, "", "softplus"], [74, 2, 1, "", "static_gelu"], [74, 2, 1, "", "static_leaky_relu"], [74, 2, 1, "", "static_relu"], [74, 2, 1, "", "static_sigmoid"], [74, 2, 1, "", "static_softmax"], [74, 2, 1, "", "static_softplus"], [74, 2, 1, "", "static_tanh"], [74, 2, 1, "", "tanh"]], "ivy.container.base": [[76, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[76, 2, 1, "", "__getitem__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "__setitem__"], [76, 2, 1, "", "all_false"], [76, 2, 1, "", "all_key_chains"], [76, 2, 1, "", "all_true"], [76, 2, 1, "", "arrays_as_lists"], [76, 2, 1, "", "as_arrays"], [76, 2, 1, "", "as_bools"], [76, 2, 1, "", "as_variables"], [76, 2, 1, "", "as_zeros"], [76, 2, 1, "", "assert_contains_sub_container"], [76, 2, 1, "", "assert_contains_sub_structure"], [76, 2, 1, "", "assert_identical"], [76, 2, 1, "", "assert_identical_structure"], [76, 2, 1, "", "at_key_chain"], [76, 2, 1, "", "at_key_chains"], [76, 2, 1, "", "at_keys"], [76, 2, 1, "", "clip"], [76, 2, 1, "", "combine"], [76, 2, 1, "", "common_key_chains"], [76, 3, 1, "", "config"], [76, 2, 1, "", "contains_sub_container"], [76, 2, 1, "", "contains_sub_structure"], [76, 2, 1, "", "copy"], [76, 2, 1, "", "create_if_absent"], [76, 2, 1, "", "cutoff_at_depth"], [76, 2, 1, "", "cutoff_at_height"], [76, 2, 1, "", "deep_copy"], [76, 3, 1, "", "dev"], [76, 2, 1, "", "dev_clone"], [76, 2, 1, "", "dev_dist"], [76, 3, 1, "", "dev_str"], [76, 2, 1, "", "diff"], [76, 2, 1, "", "dtype"], [76, 2, 1, "", "einops_rearrange"], [76, 2, 1, "", "einops_reduce"], [76, 2, 1, "", "einops_repeat"], [76, 2, 1, "", "find_sub_container"], [76, 2, 1, "", "find_sub_structure"], [76, 2, 1, "", "flatten_key_chain"], [76, 2, 1, "", "flatten_key_chains"], [76, 2, 1, "", "format_key_chains"], [76, 2, 1, "", "from_disk_as_hdf5"], [76, 2, 1, "", "from_disk_as_json"], [76, 2, 1, "", "from_disk_as_pickled"], [76, 2, 1, "", "from_flat_list"], [76, 2, 1, "", "from_numpy"], [76, 2, 1, "", "gather"], [76, 2, 1, "", "gather_nd"], [76, 2, 1, "", "h5_file_size"], [76, 2, 1, "", "handle_inplace"], [76, 2, 1, "", "has_key"], [76, 2, 1, "", "has_key_chain"], [76, 2, 1, "", "has_nans"], [76, 2, 1, "", "identical"], [76, 2, 1, "", "identical_array_shapes"], [76, 2, 1, "", "identical_configs"], [76, 2, 1, "", "identical_structure"], [76, 2, 1, "", "if_exists"], [76, 2, 1, "", "inplace_update"], [76, 3, 1, "", "ivy"], [76, 2, 1, "", "key_chains_containing"], [76, 2, 1, "", "list_join"], [76, 2, 1, "", "list_stack"], [76, 2, 1, "", "map"], [76, 2, 1, "", "map_conts"], [76, 2, 1, "", "matrix_norm"], [76, 3, 1, "", "max_depth"], [76, 2, 1, "", "maximum"], [76, 2, 1, "", "minimum"], [76, 2, 1, "", "multi_map"], [76, 2, 1, "", "multi_map_in_static_method"], [76, 2, 1, "", "num_arrays"], [76, 2, 1, "", "overwrite_at_key_chain"], [76, 2, 1, "", "overwrite_at_key_chains"], [76, 2, 1, "", "prune_empty"], [76, 2, 1, "", "prune_key_chain"], [76, 2, 1, "", "prune_key_chains"], [76, 2, 1, "", "prune_key_from_key_chains"], [76, 2, 1, "", "prune_keys"], [76, 2, 1, "", "prune_keys_from_key_chains"], [76, 2, 1, "", "reduce"], [76, 2, 1, "", "remove_key_length_limit"], [76, 2, 1, "", "remove_print_limit"], [76, 2, 1, "", "reshape_like"], [76, 2, 1, "", "restructure"], [76, 2, 1, "", "restructure_key_chains"], [76, 2, 1, "", "set_at_key_chain"], [76, 2, 1, "", "set_at_key_chains"], [76, 2, 1, "", "set_at_keys"], [76, 2, 1, "", "set_framework"], [76, 2, 1, "", "set_ivy_backend"], [76, 3, 1, "", "shape"], [76, 3, 1, "", "shapes"], [76, 2, 1, "", "show"], [76, 2, 1, "", "show_sub_container"], [76, 2, 1, "", "shuffle"], [76, 2, 1, "", "shuffle_h5_file"], [76, 2, 1, "", "size_ordered_arrays"], [76, 2, 1, "", "slice_keys"], [76, 2, 1, "", "slice_via_key"], [76, 2, 1, "", "sort_by_key"], [76, 2, 1, "", "split"], [76, 2, 1, "", "stop_gradients"], [76, 2, 1, "", "structural_diff"], [76, 2, 1, "", "to_device"], [76, 2, 1, "", "to_dict"], [76, 2, 1, "", "to_disk_as_hdf5"], [76, 2, 1, "", "to_disk_as_json"], [76, 2, 1, "", "to_disk_as_pickled"], [76, 2, 1, "", "to_flat_list"], [76, 2, 1, "", "to_iterator"], [76, 2, 1, "", "to_iterator_keys"], [76, 2, 1, "", "to_iterator_values"], [76, 2, 1, "", "to_ivy"], [76, 2, 1, "", "to_jsonable"], [76, 2, 1, "", "to_list"], [76, 2, 1, "", "to_native"], [76, 2, 1, "", "to_numpy"], [76, 2, 1, "", "to_raw"], [76, 2, 1, "", "trim_key"], [76, 2, 1, "", "try_kc"], [76, 2, 1, "", "unify"], [76, 2, 1, "", "unstack"], [76, 2, 1, "", "update_config"], [76, 2, 1, "", "vector_norm"], [76, 2, 1, "", "with_default_key_color"], [76, 2, 1, "", "with_entries_as_lists"], [76, 2, 1, "", "with_ivy_backend"], [76, 2, 1, "", "with_key_length_limit"], [76, 2, 1, "", "with_print_indent"], [76, 2, 1, "", "with_print_limit"], [76, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[78, 1, 1, "", "Container"]], "ivy.container.container.Container": [[78, 2, 1, "", "__add__"], [78, 2, 1, "", "__init__"], [78, 2, 1, "", "__radd__"], [78, 2, 1, "", "arange"], [78, 2, 1, "", "arg_info"], [78, 2, 1, "", "arg_names"], [78, 2, 1, "", "argmax"], [78, 2, 1, "", "argmin"], [78, 2, 1, "", "array"], [78, 2, 1, "", "array_equal"], [78, 2, 1, "", "arrays_equal"], [78, 2, 1, "", "as_ivy_dev"], [78, 2, 1, "", "as_ivy_dtype"], [78, 2, 1, "", "as_native_dev"], [78, 2, 1, "", "as_native_dtype"], [78, 2, 1, "", "asarray"], [78, 2, 1, "", "assert_supports_inplace"], [78, 2, 1, "", "cache_fn"], [78, 2, 1, "", "clear_mem_on_dev"], [78, 2, 1, "", "clip_matrix_norm"], [78, 2, 1, "", "closest_valid_dtype"], [78, 2, 1, "", "container_types"], [78, 2, 1, "", "conv1d_transpose"], [78, 2, 1, "", "conv2d"], [78, 2, 1, "", "conv2d_transpose"], [78, 2, 1, "", "conv3d"], [78, 2, 1, "", "conv3d_transpose"], [78, 2, 1, "", "copy_array"], [78, 2, 1, "", "cumprod"], [78, 2, 1, "", "cumsum"], [78, 2, 1, "", "current_backend"], [78, 2, 1, "", "current_backend_str"], [78, 2, 1, "", "default"], [78, 2, 1, "", "default_device"], [78, 2, 1, "", "default_dtype"], [78, 2, 1, "", "default_float_dtype"], [78, 2, 1, "", "default_int_dtype"], [78, 2, 1, "", "default_uint_dtype"], [78, 2, 1, "", "dev_util"], [78, 2, 1, "", "dropout"], [78, 2, 1, "", "dtype_bits"], [78, 2, 1, "", "eigvalsh"], [78, 2, 1, "", "empty"], [78, 2, 1, "", "execute_with_gradients"], [78, 2, 1, "", "exists"], [78, 2, 1, "", "eye"], [78, 2, 1, "", "floormod"], [78, 2, 1, "", "fourier_encode"], [78, 2, 1, "", "full"], [78, 2, 1, "", "function_supported_devices"], [78, 2, 1, "", "function_supported_devices_and_dtypes"], [78, 2, 1, "", "function_supported_dtypes"], [78, 2, 1, "", "function_unsupported_devices"], [78, 2, 1, "", "function_unsupported_devices_and_dtypes"], [78, 2, 1, "", "function_unsupported_dtypes"], [78, 2, 1, "", "get_all_arrays_in_memory"], [78, 2, 1, "", "get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "get_array_mode"], [78, 2, 1, "", "get_min_base"], [78, 2, 1, "", "get_min_denominator"], [78, 2, 1, "", "get_nestable_mode"], [78, 2, 1, "", "get_num_dims"], [78, 2, 1, "", "get_referrers_recursive"], [78, 2, 1, "", "gpu_is_available"], [78, 2, 1, "", "handle_nestable"], [78, 2, 1, "", "handle_out_argument"], [78, 2, 1, "", "indices_where"], [78, 2, 1, "", "infer_device"], [78, 2, 1, "", "infer_dtype"], [78, 2, 1, "", "inplace_arrays_supported"], [78, 2, 1, "", "inplace_decrement"], [78, 2, 1, "", "inplace_increment"], [78, 2, 1, "", "inplace_variables_supported"], [78, 2, 1, "", "inputs_to_native_arrays"], [78, 2, 1, "", "invalid_dtype"], [78, 2, 1, "", "is_ivy_container"], [78, 2, 1, "", "linear"], [78, 2, 1, "", "linspace"], [78, 2, 1, "", "logspace"], [78, 2, 1, "", "lstm_update"], [78, 2, 1, "", "match_kwargs"], [78, 2, 1, "", "multi_head_attention"], [78, 2, 1, "", "multinomial"], [78, 2, 1, "", "multiprocessing"], [78, 2, 1, "", "nonzero"], [78, 2, 1, "", "num_arrays_in_memory"], [78, 2, 1, "", "num_cpu_cores"], [78, 2, 1, "", "num_gpus"], [78, 2, 1, "", "num_ivy_arrays_on_dev"], [78, 2, 1, "", "one_hot"], [78, 2, 1, "", "ones"], [78, 2, 1, "", "outputs_to_ivy_arrays"], [78, 2, 1, "", "percent_used_mem_on_dev"], [78, 2, 1, "", "pinv"], [78, 2, 1, "", "print_all_arrays_in_memory"], [78, 2, 1, "", "print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "promote_types"], [78, 2, 1, "", "queue_timeout"], [78, 2, 1, "", "scaled_dot_product_attention"], [78, 2, 1, "", "scatter_flat"], [78, 2, 1, "", "scatter_nd"], [78, 2, 1, "", "seed"], [78, 2, 1, "", "set_array_mode"], [78, 2, 1, "", "set_default_device"], [78, 2, 1, "", "set_default_dtype"], [78, 2, 1, "", "set_default_float_dtype"], [78, 2, 1, "", "set_default_int_dtype"], [78, 2, 1, "", "set_default_uint_dtype"], [78, 2, 1, "", "set_min_base"], [78, 2, 1, "", "set_min_denominator"], [78, 2, 1, "", "set_nestable_mode"], [78, 2, 1, "", "set_queue_timeout"], [78, 2, 1, "", "set_shape_array_mode"], [78, 2, 1, "", "set_split_factor"], [78, 2, 1, "", "set_tmp_dir"], [78, 2, 1, "", "set_with_grads"], [78, 2, 1, "", "shape_array_mode"], [78, 2, 1, "", "split_factor"], [78, 2, 1, "", "split_func_call"], [78, 2, 1, "", "stable_divide"], [78, 2, 1, "", "static_arg_info"], [78, 2, 1, "", "static_arg_names"], [78, 2, 1, "", "static_argmax"], [78, 2, 1, "", "static_argmin"], [78, 2, 1, "", "static_array"], [78, 2, 1, "", "static_array_equal"], [78, 2, 1, "", "static_arrays_equal"], [78, 2, 1, "", "static_as_ivy_dev"], [78, 2, 1, "", "static_as_ivy_dtype"], [78, 2, 1, "", "static_as_native_dev"], [78, 2, 1, "", "static_as_native_dtype"], [78, 2, 1, "", "static_assert_supports_inplace"], [78, 2, 1, "", "static_cache_fn"], [78, 2, 1, "", "static_clear_mem_on_dev"], [78, 2, 1, "", "static_clip_matrix_norm"], [78, 2, 1, "", "static_closest_valid_dtype"], [78, 2, 1, "", "static_concat"], [78, 2, 1, "", "static_constant_pad"], [78, 2, 1, "", "static_container_types"], [78, 2, 1, "", "static_conv1d_transpose"], [78, 2, 1, "", "static_conv2d"], [78, 2, 1, "", "static_conv2d_transpose"], [78, 2, 1, "", "static_conv3d"], [78, 2, 1, "", "static_conv3d_transpose"], [78, 2, 1, "", "static_copy_array"], [78, 2, 1, "", "static_cumprod"], [78, 2, 1, "", "static_cumsum"], [78, 2, 1, "", "static_current_backend"], [78, 2, 1, "", "static_current_backend_str"], [78, 2, 1, "", "static_default"], [78, 2, 1, "", "static_default_device"], [78, 2, 1, "", "static_default_dtype"], [78, 2, 1, "", "static_default_int_dtype"], [78, 2, 1, "", "static_default_uint_dtype"], [78, 2, 1, "", "static_dev_util"], [78, 2, 1, "", "static_dropout"], [78, 2, 1, "", "static_dtype_bits"], [78, 2, 1, "", "static_eigh"], [78, 2, 1, "", "static_eigvalsh"], [78, 2, 1, "", "static_einops_rearrange"], [78, 2, 1, "", "static_einops_reduce"], [78, 2, 1, "", "static_einops_repeat"], [78, 2, 1, "", "static_einsum"], [78, 2, 1, "", "static_empty"], [78, 2, 1, "", "static_exists"], [78, 2, 1, "", "static_expand_dims"], [78, 2, 1, "", "static_flip"], [78, 2, 1, "", "static_floormod"], [78, 2, 1, "", "static_fourier_encode"], [78, 2, 1, "", "static_full"], [78, 2, 1, "", "static_function_supported_devices"], [78, 2, 1, "", "static_function_supported_devices_and_dtypes"], [78, 2, 1, "", "static_function_unsupported_devices"], [78, 2, 1, "", "static_function_unsupported_devices_and_dtypes"], [78, 2, 1, "", "static_gather"], [78, 2, 1, "", "static_get_all_arrays_in_memory"], [78, 2, 1, "", "static_get_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_get_array_mode"], [78, 2, 1, "", "static_get_min_base"], [78, 2, 1, "", "static_get_min_denominator"], [78, 2, 1, "", "static_get_nestable_mode"], [78, 2, 1, "", "static_get_num_dims"], [78, 2, 1, "", "static_get_referrers_recursive"], [78, 2, 1, "", "static_gpu_is_available"], [78, 2, 1, "", "static_handle_nestable"], [78, 2, 1, "", "static_handle_out_argument"], [78, 2, 1, "", "static_has_nans"], [78, 2, 1, "", "static_indices_where"], [78, 2, 1, "", "static_infer_device"], [78, 2, 1, "", "static_infer_dtype"], [78, 2, 1, "", "static_inplace_arrays_supported"], [78, 2, 1, "", "static_inplace_decrement"], [78, 2, 1, "", "static_inplace_increment"], [78, 2, 1, "", "static_inplace_update"], [78, 2, 1, "", "static_inplace_variables_supported"], [78, 2, 1, "", "static_inputs_to_native_arrays"], [78, 2, 1, "", "static_invalid_dtype"], [78, 2, 1, "", "static_is_array"], [78, 2, 1, "", "static_is_ivy_array"], [78, 2, 1, "", "static_is_ivy_container"], [78, 2, 1, "", "static_is_native_array"], [78, 2, 1, "", "static_linear"], [78, 2, 1, "", "static_lstm_update"], [78, 2, 1, "", "static_match_kwargs"], [78, 2, 1, "", "static_matmul"], [78, 2, 1, "", "static_max"], [78, 2, 1, "", "static_maximum"], [78, 2, 1, "", "static_mean"], [78, 2, 1, "", "static_min"], [78, 2, 1, "", "static_minimum"], [78, 2, 1, "", "static_multi_head_attention"], [78, 2, 1, "", "static_multinomial"], [78, 2, 1, "", "static_multiprocessing"], [78, 2, 1, "", "static_nonzero"], [78, 2, 1, "", "static_num_arrays_in_memory"], [78, 2, 1, "", "static_num_cpu_cores"], [78, 2, 1, "", "static_num_gpus"], [78, 2, 1, "", "static_num_ivy_arrays_on_dev"], [78, 2, 1, "", "static_one_hot"], [78, 2, 1, "", "static_outputs_to_ivy_arrays"], [78, 2, 1, "", "static_percent_used_mem_on_dev"], [78, 2, 1, "", "static_permute_dims"], [78, 2, 1, "", "static_pinv"], [78, 2, 1, "", "static_print_all_arrays_in_memory"], [78, 2, 1, "", "static_print_all_ivy_arrays_on_dev"], [78, 2, 1, "", "static_prod"], [78, 2, 1, "", "static_promote_types"], [78, 2, 1, "", "static_queue_timeout"], [78, 2, 1, "", "static_scaled_dot_product_attention"], [78, 2, 1, "", "static_scatter_flat"], [78, 2, 1, "", "static_scatter_nd"], [78, 2, 1, "", "static_seed"], [78, 2, 1, "", "static_set_array_mode"], [78, 2, 1, "", "static_set_default_device"], [78, 2, 1, "", "static_set_default_dtype"], [78, 2, 1, "", "static_set_default_float_dtype"], [78, 2, 1, "", "static_set_default_int_dtype"], [78, 2, 1, "", "static_set_default_uint_dtype"], [78, 2, 1, "", "static_set_min_base"], [78, 2, 1, "", "static_set_min_denominator"], [78, 2, 1, "", "static_set_nestable_mode"], [78, 2, 1, "", "static_set_queue_timeout"], [78, 2, 1, "", "static_set_shape_array_mode"], [78, 2, 1, "", "static_set_split_factor"], [78, 2, 1, "", "static_set_tmp_dir"], [78, 2, 1, "", "static_set_with_grads"], [78, 2, 1, "", "static_shape"], [78, 2, 1, "", "static_shape_array_mode"], [78, 2, 1, "", "static_shuffle"], [78, 2, 1, "", "static_split"], [78, 2, 1, "", "static_split_factor"], [78, 2, 1, "", "static_split_func_call"], [78, 2, 1, "", "static_squeeze"], [78, 2, 1, "", "static_stable_divide"], [78, 2, 1, "", "static_stack"], [78, 2, 1, "", "static_std"], [78, 2, 1, "", "static_stop_gradient"], [78, 2, 1, "", "static_sum"], [78, 2, 1, "", "static_supports_inplace"], [78, 2, 1, "", "static_swapaxes"], [78, 2, 1, "", "static_tile"], [78, 2, 1, "", "static_tmp_dir"], [78, 2, 1, "", "static_to_ivy_shape"], [78, 2, 1, "", "static_to_list"], [78, 2, 1, "", "static_to_native_arrays_and_back"], [78, 2, 1, "", "static_to_native_shape"], [78, 2, 1, "", "static_to_scalar"], [78, 2, 1, "", "static_total_mem_on_dev"], [78, 2, 1, "", "static_tpu_is_available"], [78, 2, 1, "", "static_try_else_none"], [78, 2, 1, "", "static_type_promote_arrays"], [78, 2, 1, "", "static_unset_array_mode"], [78, 2, 1, "", "static_unset_default_device"], [78, 2, 1, "", "static_unset_default_dtype"], [78, 2, 1, "", "static_unset_default_float_dtype"], [78, 2, 1, "", "static_unset_default_int_dtype"], [78, 2, 1, "", "static_unset_default_uint_dtype"], [78, 2, 1, "", "static_unset_nestable_mode"], [78, 2, 1, "", "static_unset_shape_array_mode"], [78, 2, 1, "", "static_unset_with_grads"], [78, 2, 1, "", "static_unstack"], [78, 2, 1, "", "static_used_mem_on_dev"], [78, 2, 1, "", "static_valid_dtype"], [78, 2, 1, "", "static_value_is_nan"], [78, 2, 1, "", "static_var"], [78, 2, 1, "", "static_variable_data"], [78, 2, 1, "", "static_where"], [78, 2, 1, "", "static_with_grads"], [78, 2, 1, "", "static_zero_pad"], [78, 2, 1, "", "stop_gradient"], [78, 2, 1, "", "supports_inplace"], [78, 2, 1, "", "tmp_dir"], [78, 2, 1, "", "to_ivy_shape"], [78, 2, 1, "", "to_native_arrays_and_back"], [78, 2, 1, "", "to_native_shape"], [78, 2, 1, "", "to_scalar"], [78, 2, 1, "", "total_mem_on_dev"], [78, 2, 1, "", "tpu_is_available"], [78, 2, 1, "", "try_else_none"], [78, 2, 1, "", "type_promote_arrays"], [78, 2, 1, "", "unset_array_mode"], [78, 2, 1, "", "unset_default_device"], [78, 2, 1, "", "unset_default_dtype"], [78, 2, 1, "", "unset_default_float_dtype"], [78, 2, 1, "", "unset_default_int_dtype"], [78, 2, 1, "", "unset_default_uint_dtype"], [78, 2, 1, "", "unset_nestable_mode"], [78, 2, 1, "", "unset_shape_array_mode"], [78, 2, 1, "", "unset_with_grads"], [78, 2, 1, "", "used_mem_on_dev"], [78, 2, 1, "", "valid_dtype"], [78, 2, 1, "", "value_is_nan"], [78, 2, 1, "", "variable_data"], [78, 2, 1, "", "where"], [78, 2, 1, "", "with_grads"], [78, 2, 1, "", "zeros"]], "ivy.container.container_methods": [[400, 4, 1, "", "abs"], [405, 4, 1, "", "acos"], [410, 4, 1, "", "acosh"], [780, 4, 1, "", "adam_step"], [784, 4, 1, "", "adam_update"], [415, 4, 1, "", "add"], [1153, 4, 1, "", "all"], [684, 4, 1, "", "all_equal"], [1158, 4, 1, "", "any"], [1109, 4, 1, "", "argsort"], [420, 4, 1, "", "asin"], [425, 4, 1, "", "asinh"], [279, 4, 1, "", "astype"], [430, 4, 1, "", "atan"], [435, 4, 1, "", "atan2"], [440, 4, 1, "", "atanh"], [958, 4, 1, "", "binary_cross_entropy"], [445, 4, 1, "", "bitwise_and"], [450, 4, 1, "", "bitwise_invert"], [455, 4, 1, "", "bitwise_left_shift"], [460, 4, 1, "", "bitwise_or"], [465, 4, 1, "", "bitwise_right_shift"], [470, 4, 1, "", "bitwise_xor"], [284, 4, 1, "", "broadcast_arrays"], [289, 4, 1, "", "broadcast_to"], [294, 4, 1, "", "can_cast"], [475, 4, 1, "", "ceil"], [845, 4, 1, "", "cholesky"], [974, 4, 1, "", "clip"], [696, 4, 1, "", "clip_vector_norm"], [979, 4, 1, "", "concat"], [983, 4, 1, "", "constant_pad"], [824, 4, 1, "", "conv1d"], [480, 4, 1, "", "cos"], [485, 4, 1, "", "cosh"], [850, 4, 1, "", "cross"], [963, 4, 1, "", "cross_entropy"], [834, 4, 1, "", "depthwise_conv2d"], [855, 4, 1, "", "det"], [371, 4, 1, "", "dev"], [860, 4, 1, "", "diagonal"], [490, 4, 1, "", "divide"], [306, 4, 1, "", "dtype"], [865, 4, 1, "", "eigh"], [1120, 4, 1, "", "einsum"], [215, 4, 1, "", "empty_like"], [495, 4, 1, "", "equal"], [500, 4, 1, "", "erf"], [505, 4, 1, "", "exp"], [987, 4, 1, "", "expand_dims"], [510, 4, 1, "", "expm1"], [312, 4, 1, "", "finfo"], [991, 4, 1, "", "flip"], [515, 4, 1, "", "floor"], [520, 4, 1, "", "floor_divide"], [223, 4, 1, "", "from_dlpack"], [229, 4, 1, "", "full_like"], [716, 4, 1, "", "gather_nd"], [168, 4, 1, "", "gelu"], [791, 4, 1, "", "gradient_descent_update"], [525, 4, 1, "", "greater"], [530, 4, 1, "", "greater_equal"], [323, 4, 1, "", "iinfo"], [872, 4, 1, "", "inv"], [329, 4, 1, "", "is_bool_dtype"], [334, 4, 1, "", "is_float_dtype"], [339, 4, 1, "", "is_int_dtype"], [344, 4, 1, "", "is_uint_dtype"], [796, 4, 1, "", "is_variable"], [535, 4, 1, "", "isfinite"], [540, 4, 1, "", "isinf"], [545, 4, 1, "", "isnan"], [800, 4, 1, "", "lamb_update"], [804, 4, 1, "", "lars_update"], [1058, 4, 1, "", "layer_norm"], [173, 4, 1, "", "leaky_relu"], [550, 4, 1, "", "less"], [555, 4, 1, "", "less_equal"], [560, 4, 1, "", "log"], [565, 4, 1, "", "log10"], [570, 4, 1, "", "log1p"], [575, 4, 1, "", "log2"], [580, 4, 1, "", "logaddexp"], [585, 4, 1, "", "logical_and"], [590, 4, 1, "", "logical_not"], [595, 4, 1, "", "logical_or"], [600, 4, 1, "", "logical_xor"], [877, 4, 1, "", "matmul"], [881, 4, 1, "", "matrix_norm"], [885, 4, 1, "", "matrix_power"], [890, 4, 1, "", "matrix_rank"], [895, 4, 1, "", "matrix_transpose"], [1124, 4, 1, "", "max"], [1128, 4, 1, "", "mean"], [240, 4, 1, "", "meshgrid"], [1132, 4, 1, "", "min"], [607, 4, 1, "", "multiply"], [245, 4, 1, "", "native_array"], [612, 4, 1, "", "negative"], [617, 4, 1, "", "not_equal"], [253, 4, 1, "", "ones_like"], [808, 4, 1, "", "optimizer_update"], [900, 4, 1, "", "outer"], [995, 4, 1, "", "permute_dims"], [622, 4, 1, "", "positive"], [627, 4, 1, "", "pow"], [1136, 4, 1, "", "prod"], [908, 4, 1, "", "qr"], [1065, 4, 1, "", "randint"], [1070, 4, 1, "", "random_normal"], [1075, 4, 1, "", "random_uniform"], [178, 4, 1, "", "relu"], [632, 4, 1, "", "remainder"], [999, 4, 1, "", "repeat"], [1004, 4, 1, "", "reshape"], [350, 4, 1, "", "result_type"], [1009, 4, 1, "", "roll"], [637, 4, 1, "", "round"], [183, 4, 1, "", "sigmoid"], [642, 4, 1, "", "sign"], [647, 4, 1, "", "sin"], [652, 4, 1, "", "sinh"], [912, 4, 1, "", "slogdet"], [188, 4, 1, "", "softmax"], [193, 4, 1, "", "softplus"], [917, 4, 1, "", "solve"], [1114, 4, 1, "", "sort"], [968, 4, 1, "", "sparse_cross_entropy"], [657, 4, 1, "", "sqrt"], [662, 4, 1, "", "square"], [1015, 4, 1, "", "squeeze"], [757, 4, 1, "", "stable_pow"], [1019, 4, 1, "", "stack"], [402, 4, 1, "", "static_abs"], [407, 4, 1, "", "static_acos"], [412, 4, 1, "", "static_acosh"], [782, 4, 1, "", "static_adam_step"], [786, 4, 1, "", "static_adam_update"], [417, 4, 1, "", "static_add"], [1155, 4, 1, "", "static_all"], [686, 4, 1, "", "static_all_equal"], [1160, 4, 1, "", "static_any"], [207, 4, 1, "", "static_arange"], [1111, 4, 1, "", "static_argsort"], [211, 4, 1, "", "static_asarray"], [422, 4, 1, "", "static_asin"], [427, 4, 1, "", "static_asinh"], [281, 4, 1, "", "static_astype"], [432, 4, 1, "", "static_atan"], [437, 4, 1, "", "static_atan2"], [442, 4, 1, "", "static_atanh"], [960, 4, 1, "", "static_binary_cross_entropy"], [447, 4, 1, "", "static_bitwise_and"], [452, 4, 1, "", "static_bitwise_invert"], [457, 4, 1, "", "static_bitwise_left_shift"], [462, 4, 1, "", "static_bitwise_or"], [467, 4, 1, "", "static_bitwise_right_shift"], [472, 4, 1, "", "static_bitwise_xor"], [286, 4, 1, "", "static_broadcast_arrays"], [291, 4, 1, "", "static_broadcast_to"], [296, 4, 1, "", "static_can_cast"], [477, 4, 1, "", "static_ceil"], [847, 4, 1, "", "static_cholesky"], [976, 4, 1, "", "static_clip"], [698, 4, 1, "", "static_clip_vector_norm"], [826, 4, 1, "", "static_conv1d"], [482, 4, 1, "", "static_cos"], [487, 4, 1, "", "static_cosh"], [852, 4, 1, "", "static_cross"], [965, 4, 1, "", "static_cross_entropy"], [301, 4, 1, "", "static_default_float_dtype"], [836, 4, 1, "", "static_depthwise_conv2d"], [857, 4, 1, "", "static_det"], [373, 4, 1, "", "static_dev"], [862, 4, 1, "", "static_diagonal"], [492, 4, 1, "", "static_divide"], [308, 4, 1, "", "static_dtype"], [217, 4, 1, "", "static_empty_like"], [497, 4, 1, "", "static_equal"], [502, 4, 1, "", "static_erf"], [789, 4, 1, "", "static_execute_with_gradients"], [507, 4, 1, "", "static_exp"], [512, 4, 1, "", "static_expm1"], [220, 4, 1, "", "static_eye"], [314, 4, 1, "", "static_finfo"], [517, 4, 1, "", "static_floor"], [522, 4, 1, "", "static_floor_divide"], [225, 4, 1, "", "static_from_dlpack"], [231, 4, 1, "", "static_full_like"], [317, 4, 1, "", "static_function_supported_dtypes"], [320, 4, 1, "", "static_function_unsupported_dtypes"], [718, 4, 1, "", "static_gather_nd"], [170, 4, 1, "", "static_gelu"], [793, 4, 1, "", "static_gradient_descent_update"], [527, 4, 1, "", "static_greater"], [532, 4, 1, "", "static_greater_equal"], [325, 4, 1, "", "static_iinfo"], [874, 4, 1, "", "static_inv"], [331, 4, 1, "", "static_is_bool_dtype"], [336, 4, 1, "", "static_is_float_dtype"], [341, 4, 1, "", "static_is_int_dtype"], [346, 4, 1, "", "static_is_uint_dtype"], [798, 4, 1, "", "static_is_variable"], [537, 4, 1, "", "static_isfinite"], [542, 4, 1, "", "static_isinf"], [547, 4, 1, "", "static_isnan"], [802, 4, 1, "", "static_lamb_update"], [806, 4, 1, "", "static_lars_update"], [1060, 4, 1, "", "static_layer_norm"], [175, 4, 1, "", "static_leaky_relu"], [552, 4, 1, "", "static_less"], [557, 4, 1, "", "static_less_equal"], [234, 4, 1, "", "static_linspace"], [562, 4, 1, "", "static_log"], [567, 4, 1, "", "static_log10"], [572, 4, 1, "", "static_log1p"], [577, 4, 1, "", "static_log2"], [582, 4, 1, "", "static_logaddexp"], [587, 4, 1, "", "static_logical_and"], [592, 4, 1, "", "static_logical_not"], [597, 4, 1, "", "static_logical_or"], [602, 4, 1, "", "static_logical_xor"], [237, 4, 1, "", "static_logspace"], [883, 4, 1, "", "static_matrix_norm"], [887, 4, 1, "", "static_matrix_power"], [892, 4, 1, "", "static_matrix_rank"], [897, 4, 1, "", "static_matrix_transpose"], [242, 4, 1, "", "static_meshgrid"], [609, 4, 1, "", "static_multiply"], [247, 4, 1, "", "static_native_array"], [614, 4, 1, "", "static_negative"], [619, 4, 1, "", "static_not_equal"], [250, 4, 1, "", "static_ones"], [255, 4, 1, "", "static_ones_like"], [810, 4, 1, "", "static_optimizer_update"], [902, 4, 1, "", "static_outer"], [624, 4, 1, "", "static_positive"], [629, 4, 1, "", "static_pow"], [910, 4, 1, "", "static_qr"], [1067, 4, 1, "", "static_randint"], [1072, 4, 1, "", "static_random_normal"], [1077, 4, 1, "", "static_random_uniform"], [180, 4, 1, "", "static_relu"], [634, 4, 1, "", "static_remainder"], [1001, 4, 1, "", "static_repeat"], [1006, 4, 1, "", "static_reshape"], [352, 4, 1, "", "static_result_type"], [1011, 4, 1, "", "static_roll"], [639, 4, 1, "", "static_round"], [185, 4, 1, "", "static_sigmoid"], [644, 4, 1, "", "static_sign"], [649, 4, 1, "", "static_sin"], [654, 4, 1, "", "static_sinh"], [914, 4, 1, "", "static_slogdet"], [190, 4, 1, "", "static_softmax"], [195, 4, 1, "", "static_softplus"], [919, 4, 1, "", "static_solve"], [1116, 4, 1, "", "static_sort"], [970, 4, 1, "", "static_sparse_cross_entropy"], [659, 4, 1, "", "static_sqrt"], [664, 4, 1, "", "static_square"], [759, 4, 1, "", "static_stable_pow"], [666, 4, 1, "", "static_subtract"], [921, 4, 1, "", "static_svd"], [926, 4, 1, "", "static_svdvals"], [671, 4, 1, "", "static_tan"], [197, 4, 1, "", "static_tanh"], [931, 4, 1, "", "static_tensordot"], [389, 4, 1, "", "static_to_device"], [766, 4, 1, "", "static_to_numpy"], [936, 4, 1, "", "static_trace"], [257, 4, 1, "", "static_tril"], [262, 4, 1, "", "static_triu"], [677, 4, 1, "", "static_trunc"], [1087, 4, 1, "", "static_unique_all"], [1092, 4, 1, "", "static_unique_counts"], [1097, 4, 1, "", "static_unique_inverse"], [1102, 4, 1, "", "static_unique_values"], [815, 4, 1, "", "static_variable"], [941, 4, 1, "", "static_vecdot"], [946, 4, 1, "", "static_vector_norm"], [951, 4, 1, "", "static_vector_to_skew_symmetric_matrix"], [267, 4, 1, "", "static_zeros"], [270, 4, 1, "", "static_zeros_like"], [1140, 4, 1, "", "std"], [668, 4, 1, "", "subtract"], [1144, 4, 1, "", "sum"], [923, 4, 1, "", "svd"], [928, 4, 1, "", "svdvals"], [1023, 4, 1, "", "swapaxes"], [673, 4, 1, "", "tan"], [199, 4, 1, "", "tanh"], [933, 4, 1, "", "tensordot"], [1027, 4, 1, "", "tile"], [391, 4, 1, "", "to_device"], [768, 4, 1, "", "to_numpy"], [938, 4, 1, "", "trace"], [259, 4, 1, "", "tril"], [264, 4, 1, "", "triu"], [679, 4, 1, "", "trunc"], [1089, 4, 1, "", "unique_all"], [1094, 4, 1, "", "unique_counts"], [1099, 4, 1, "", "unique_inverse"], [1104, 4, 1, "", "unique_values"], [1148, 4, 1, "", "var"], [817, 4, 1, "", "variable"], [943, 4, 1, "", "vecdot"], [948, 4, 1, "", "vector_norm"], [953, 4, 1, "", "vector_to_skew_symmetric_matrix"], [1031, 4, 1, "", "zero_pad"], [272, 4, 1, "", "zeros_like"]], "ivy.container.creation": [[80, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[80, 2, 1, "", "empty_like"], [80, 2, 1, "", "from_dlpack"], [80, 2, 1, "", "full_like"], [80, 2, 1, "", "meshgrid"], [80, 2, 1, "", "native_array"], [80, 2, 1, "", "ones_like"], [80, 2, 1, "", "static_arange"], [80, 2, 1, "", "static_asarray"], [80, 2, 1, "", "static_empty_like"], [80, 2, 1, "", "static_eye"], [80, 2, 1, "", "static_from_dlpack"], [80, 2, 1, "", "static_full_like"], [80, 2, 1, "", "static_linspace"], [80, 2, 1, "", "static_logspace"], [80, 2, 1, "", "static_meshgrid"], [80, 2, 1, "", "static_native_array"], [80, 2, 1, "", "static_ones"], [80, 2, 1, "", "static_ones_like"], [80, 2, 1, "", "static_tril"], [80, 2, 1, "", "static_triu"], [80, 2, 1, "", "static_zeros"], [80, 2, 1, "", "static_zeros_like"], [80, 2, 1, "", "tril"], [80, 2, 1, "", "triu"], [80, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[82, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[82, 2, 1, "", "astype"], [82, 2, 1, "", "broadcast_arrays"], [82, 2, 1, "", "broadcast_to"], [82, 2, 1, "", "can_cast"], [82, 2, 1, "", "dtype"], [82, 2, 1, "", "finfo"], [82, 2, 1, "", "iinfo"], [82, 2, 1, "", "is_bool_dtype"], [82, 2, 1, "", "is_float_dtype"], [82, 2, 1, "", "is_int_dtype"], [82, 2, 1, "", "is_uint_dtype"], [82, 2, 1, "", "result_type"], [82, 2, 1, "", "static_astype"], [82, 2, 1, "", "static_broadcast_arrays"], [82, 2, 1, "", "static_broadcast_to"], [82, 2, 1, "", "static_can_cast"], [82, 2, 1, "", "static_default_float_dtype"], [82, 2, 1, "", "static_dtype"], [82, 2, 1, "", "static_finfo"], [82, 2, 1, "", "static_function_supported_dtypes"], [82, 2, 1, "", "static_function_unsupported_dtypes"], [82, 2, 1, "", "static_iinfo"], [82, 2, 1, "", "static_is_bool_dtype"], [82, 2, 1, "", "static_is_float_dtype"], [82, 2, 1, "", "static_is_int_dtype"], [82, 2, 1, "", "static_is_uint_dtype"], [82, 2, 1, "", "static_result_type"]], "ivy.container.device": [[84, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[84, 2, 1, "", "dev"], [84, 2, 1, "", "static_dev"], [84, 2, 1, "", "static_to_device"], [84, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[86, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[86, 2, 1, "", "abs"], [86, 2, 1, "", "acos"], [86, 2, 1, "", "acosh"], [86, 2, 1, "", "add"], [86, 2, 1, "", "asin"], [86, 2, 1, "", "asinh"], [86, 2, 1, "", "atan"], [86, 2, 1, "", "atan2"], [86, 2, 1, "", "atanh"], [86, 2, 1, "", "bitwise_and"], [86, 2, 1, "", "bitwise_invert"], [86, 2, 1, "", "bitwise_left_shift"], [86, 2, 1, "", "bitwise_or"], [86, 2, 1, "", "bitwise_right_shift"], [86, 2, 1, "", "bitwise_xor"], [86, 2, 1, "", "ceil"], [86, 2, 1, "", "cos"], [86, 2, 1, "", "cosh"], [86, 2, 1, "", "divide"], [86, 2, 1, "", "equal"], [86, 2, 1, "", "erf"], [86, 2, 1, "", "exp"], [86, 2, 1, "", "expm1"], [86, 2, 1, "", "floor"], [86, 2, 1, "", "floor_divide"], [86, 2, 1, "", "greater"], [86, 2, 1, "", "greater_equal"], [86, 2, 1, "", "isfinite"], [86, 2, 1, "", "isinf"], [86, 2, 1, "", "isnan"], [86, 2, 1, "", "less"], [86, 2, 1, "", "less_equal"], [86, 2, 1, "", "log"], [86, 2, 1, "", "log10"], [86, 2, 1, "", "log1p"], [86, 2, 1, "", "log2"], [86, 2, 1, "", "logaddexp"], [86, 2, 1, "", "logical_and"], [86, 2, 1, "", "logical_not"], [86, 2, 1, "", "logical_or"], [86, 2, 1, "", "logical_xor"], [86, 2, 1, "", "multiply"], [86, 2, 1, "", "negative"], [86, 2, 1, "", "not_equal"], [86, 2, 1, "", "positive"], [86, 2, 1, "", "pow"], [86, 2, 1, "", "remainder"], [86, 2, 1, "", "round"], [86, 2, 1, "", "sign"], [86, 2, 1, "", "sin"], [86, 2, 1, "", "sinh"], [86, 2, 1, "", "sqrt"], [86, 2, 1, "", "square"], [86, 2, 1, "", "static_abs"], [86, 2, 1, "", "static_acos"], [86, 2, 1, "", "static_acosh"], [86, 2, 1, "", "static_add"], [86, 2, 1, "", "static_asin"], [86, 2, 1, "", "static_asinh"], [86, 2, 1, "", "static_atan"], [86, 2, 1, "", "static_atan2"], [86, 2, 1, "", "static_atanh"], [86, 2, 1, "", "static_bitwise_and"], [86, 2, 1, "", "static_bitwise_invert"], [86, 2, 1, "", "static_bitwise_left_shift"], [86, 2, 1, "", "static_bitwise_or"], [86, 2, 1, "", "static_bitwise_right_shift"], [86, 2, 1, "", "static_bitwise_xor"], [86, 2, 1, "", "static_ceil"], [86, 2, 1, "", "static_cos"], [86, 2, 1, "", "static_cosh"], [86, 2, 1, "", "static_divide"], [86, 2, 1, "", "static_equal"], [86, 2, 1, "", "static_erf"], [86, 2, 1, "", "static_exp"], [86, 2, 1, "", "static_expm1"], [86, 2, 1, "", "static_floor"], [86, 2, 1, "", "static_floor_divide"], [86, 2, 1, "", "static_greater"], [86, 2, 1, "", "static_greater_equal"], [86, 2, 1, "", "static_isfinite"], [86, 2, 1, "", "static_isinf"], [86, 2, 1, "", "static_isnan"], [86, 2, 1, "", "static_less"], [86, 2, 1, "", "static_less_equal"], [86, 2, 1, "", "static_log"], [86, 2, 1, "", "static_log10"], [86, 2, 1, "", "static_log1p"], [86, 2, 1, "", "static_log2"], [86, 2, 1, "", "static_logaddexp"], [86, 2, 1, "", "static_logical_and"], [86, 2, 1, "", "static_logical_not"], [86, 2, 1, "", "static_logical_or"], [86, 2, 1, "", "static_logical_xor"], [86, 2, 1, "", "static_multiply"], [86, 2, 1, "", "static_negative"], [86, 2, 1, "", "static_not_equal"], [86, 2, 1, "", "static_positive"], [86, 2, 1, "", "static_pow"], [86, 2, 1, "", "static_remainder"], [86, 2, 1, "", "static_round"], [86, 2, 1, "", "static_sign"], [86, 2, 1, "", "static_sin"], [86, 2, 1, "", "static_sinh"], [86, 2, 1, "", "static_sqrt"], [86, 2, 1, "", "static_square"], [86, 2, 1, "", "static_subtract"], [86, 2, 1, "", "static_tan"], [86, 2, 1, "", "static_tanh"], [86, 2, 1, "", "static_trunc"], [86, 2, 1, "", "subtract"], [86, 2, 1, "", "tan"], [86, 2, 1, "", "tanh"], [86, 2, 1, "", "trunc"]], "ivy.container.general": [[88, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[88, 2, 1, "", "all_equal"], [88, 2, 1, "", "clip_vector_norm"], [88, 2, 1, "", "gather_nd"], [88, 2, 1, "", "stable_pow"], [88, 2, 1, "", "static_all_equal"], [88, 2, 1, "", "static_clip_vector_norm"], [88, 2, 1, "", "static_gather_nd"], [88, 2, 1, "", "static_stable_pow"], [88, 2, 1, "", "static_to_numpy"], [88, 2, 1, "", "to_numpy"]], "ivy.container.gradients": [[90, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[90, 2, 1, "", "adam_step"], [90, 2, 1, "", "adam_update"], [90, 2, 1, "", "gradient_descent_update"], [90, 2, 1, "", "is_variable"], [90, 2, 1, "", "lamb_update"], [90, 2, 1, "", "lars_update"], [90, 2, 1, "", "optimizer_update"], [90, 2, 1, "", "static_adam_step"], [90, 2, 1, "", "static_adam_update"], [90, 2, 1, "", "static_execute_with_gradients"], [90, 2, 1, "", "static_gradient_descent_update"], [90, 2, 1, "", "static_is_variable"], [90, 2, 1, "", "static_lamb_update"], [90, 2, 1, "", "static_lars_update"], [90, 2, 1, "", "static_optimizer_update"], [90, 2, 1, "", "static_variable"], [90, 2, 1, "", "variable"]], "ivy.container.image": [[92, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[94, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[94, 2, 1, "", "conv1d"], [94, 2, 1, "", "depthwise_conv2d"], [94, 2, 1, "", "static_conv1d"], [94, 2, 1, "", "static_depthwise_conv2d"]], "ivy.container.linear_algebra": [[96, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[96, 2, 1, "", "cholesky"], [96, 2, 1, "", "cross"], [96, 2, 1, "", "det"], [96, 2, 1, "", "diagonal"], [96, 2, 1, "", "eigh"], [96, 2, 1, "", "inv"], [96, 2, 1, "", "matmul"], [96, 2, 1, "", "matrix_norm"], [96, 2, 1, "", "matrix_power"], [96, 2, 1, "", "matrix_rank"], [96, 2, 1, "", "matrix_transpose"], [96, 2, 1, "", "outer"], [96, 2, 1, "", "qr"], [96, 2, 1, "", "slogdet"], [96, 2, 1, "", "solve"], [96, 2, 1, "", "static_cholesky"], [96, 2, 1, "", "static_cross"], [96, 2, 1, "", "static_det"], [96, 2, 1, "", "static_diagonal"], [96, 2, 1, "", "static_inv"], [96, 2, 1, "", "static_matrix_norm"], [96, 2, 1, "", "static_matrix_power"], [96, 2, 1, "", "static_matrix_rank"], [96, 2, 1, "", "static_matrix_transpose"], [96, 2, 1, "", "static_outer"], [96, 2, 1, "", "static_qr"], [96, 2, 1, "", "static_slogdet"], [96, 2, 1, "", "static_solve"], [96, 2, 1, "", "static_svd"], [96, 2, 1, "", "static_svdvals"], [96, 2, 1, "", "static_tensordot"], [96, 2, 1, "", "static_trace"], [96, 2, 1, "", "static_vecdot"], [96, 2, 1, "", "static_vector_norm"], [96, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [96, 2, 1, "", "svd"], [96, 2, 1, "", "svdvals"], [96, 2, 1, "", "tensordot"], [96, 2, 1, "", "trace"], [96, 2, 1, "", "vecdot"], [96, 2, 1, "", "vector_norm"], [96, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[98, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[98, 2, 1, "", "binary_cross_entropy"], [98, 2, 1, "", "cross_entropy"], [98, 2, 1, "", "sparse_cross_entropy"], [98, 2, 1, "", "static_binary_cross_entropy"], [98, 2, 1, "", "static_cross_entropy"], [98, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[100, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[100, 2, 1, "", "clip"], [100, 2, 1, "", "concat"], [100, 2, 1, "", "constant_pad"], [100, 2, 1, "", "expand_dims"], [100, 2, 1, "", "flip"], [100, 2, 1, "", "permute_dims"], [100, 2, 1, "", "repeat"], [100, 2, 1, "", "reshape"], [100, 2, 1, "", "roll"], [100, 2, 1, "", "squeeze"], [100, 2, 1, "", "stack"], [100, 2, 1, "", "static_clip"], [100, 2, 1, "", "static_repeat"], [100, 2, 1, "", "static_reshape"], [100, 2, 1, "", "static_roll"], [100, 2, 1, "", "swapaxes"], [100, 2, 1, "", "tile"], [100, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[102, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[102, 2, 1, "", "layer_norm"], [102, 2, 1, "", "static_layer_norm"]], "ivy.container.random": [[104, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[104, 2, 1, "", "randint"], [104, 2, 1, "", "random_normal"], [104, 2, 1, "", "random_uniform"], [104, 2, 1, "", "static_randint"], [104, 2, 1, "", "static_random_normal"], [104, 2, 1, "", "static_random_uniform"]], "ivy.container.searching": [[106, 1, 1, "", "ContainerWithSearching"]], "ivy.container.set": [[108, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[108, 2, 1, "", "static_unique_all"], [108, 2, 1, "", "static_unique_counts"], [108, 2, 1, "", "static_unique_inverse"], [108, 2, 1, "", "static_unique_values"], [108, 2, 1, "", "unique_all"], [108, 2, 1, "", "unique_counts"], [108, 2, 1, "", "unique_inverse"], [108, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[110, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[110, 2, 1, "", "argsort"], [110, 2, 1, "", "sort"], [110, 2, 1, "", "static_argsort"], [110, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[112, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[112, 2, 1, "", "einsum"], [112, 2, 1, "", "max"], [112, 2, 1, "", "mean"], [112, 2, 1, "", "min"], [112, 2, 1, "", "prod"], [112, 2, 1, "", "std"], [112, 2, 1, "", "sum"], [112, 2, 1, "", "var"]], "ivy.container.utility": [[114, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[114, 2, 1, "", "all"], [114, 2, 1, "", "any"], [114, 2, 1, "", "static_all"], [114, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[116, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[156, 4, 1, "", "handle_nestable"], [157, 4, 1, "", "handle_out_argument"], [158, 4, 1, "", "infer_device"], [159, 4, 1, "", "infer_dtype"], [160, 4, 1, "", "inputs_to_ivy_arrays"], [161, 4, 1, "", "inputs_to_native_arrays"], [162, 4, 1, "", "outputs_to_ivy_arrays"], [163, 4, 1, "", "to_native_arrays_and_back"]], "ivy.functional.ivy": [[165, 0, 0, "-", "activations"], [201, 0, 0, "-", "compilation"], [203, 0, 0, "-", "constants"], [204, 0, 0, "-", "creation"], [274, 0, 0, "-", "data_type"], [363, 0, 0, "-", "device"], [397, 0, 0, "-", "elementwise"], [681, 0, 0, "-", "general"], [777, 0, 0, "-", "gradients"], [821, 0, 0, "-", "layers"], [842, 0, 0, "-", "linear_algebra"], [955, 0, 0, "-", "losses"], [971, 0, 0, "-", "manipulation"], [1033, 0, 0, "-", "meta"], [1037, 0, 0, "-", "nest"], [1055, 0, 0, "-", "norms"], [1061, 0, 0, "-", "random"], [1080, 0, 0, "-", "searching"], [1085, 0, 0, "-", "set"], [1106, 0, 0, "-", "sorting"], [1117, 0, 0, "-", "statistical"], [1150, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[169, 4, 1, "", "gelu"], [174, 4, 1, "", "leaky_relu"], [179, 4, 1, "", "relu"], [184, 4, 1, "", "sigmoid"], [189, 4, 1, "", "softmax"], [194, 4, 1, "", "softplus"], [200, 4, 1, "", "tanh"]], "ivy.functional.ivy.compilation": [[202, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[203, 5, 1, "", "e"], [203, 5, 1, "", "inf"], [203, 5, 1, "", "nan"], [203, 5, 1, "", "newaxis"], [203, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[206, 4, 1, "", "arange"], [204, 4, 1, "", "array"], [210, 4, 1, "", "asarray"], [212, 4, 1, "", "empty"], [216, 4, 1, "", "empty_like"], [219, 4, 1, "", "eye"], [224, 4, 1, "", "from_dlpack"], [226, 4, 1, "", "full"], [230, 4, 1, "", "full_like"], [233, 4, 1, "", "linspace"], [236, 4, 1, "", "logspace"], [241, 4, 1, "", "meshgrid"], [246, 4, 1, "", "native_array"], [249, 4, 1, "", "ones"], [254, 4, 1, "", "ones_like"], [260, 4, 1, "", "tril"], [265, 4, 1, "", "triu"], [268, 4, 1, "", "zeros"], [273, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.data_type": [[274, 1, 1, "", "DefaultDtype"], [274, 1, 1, "", "DefaultFloatDtype"], [274, 1, 1, "", "DefaultIntDtype"], [274, 1, 1, "", "DefaultUintDtype"], [275, 4, 1, "", "as_ivy_dtype"], [276, 4, 1, "", "as_native_dtype"], [280, 4, 1, "", "astype"], [285, 4, 1, "", "broadcast_arrays"], [290, 4, 1, "", "broadcast_to"], [295, 4, 1, "", "can_cast"], [297, 4, 1, "", "closest_valid_dtype"], [298, 4, 1, "", "default_dtype"], [300, 4, 1, "", "default_float_dtype"], [302, 4, 1, "", "default_int_dtype"], [303, 4, 1, "", "default_uint_dtype"], [307, 4, 1, "", "dtype"], [309, 4, 1, "", "dtype_bits"], [313, 4, 1, "", "finfo"], [316, 4, 1, "", "function_supported_dtypes"], [319, 4, 1, "", "function_unsupported_dtypes"], [324, 4, 1, "", "iinfo"], [326, 4, 1, "", "invalid_dtype"], [330, 4, 1, "", "is_bool_dtype"], [335, 4, 1, "", "is_float_dtype"], [340, 4, 1, "", "is_int_dtype"], [345, 4, 1, "", "is_uint_dtype"], [347, 4, 1, "", "promote_types"], [351, 4, 1, "", "result_type"], [353, 4, 1, "", "set_default_dtype"], [354, 4, 1, "", "set_default_float_dtype"], [355, 4, 1, "", "set_default_int_dtype"], [356, 4, 1, "", "set_default_uint_dtype"], [357, 4, 1, "", "type_promote_arrays"], [358, 4, 1, "", "unset_default_dtype"], [359, 4, 1, "", "unset_default_float_dtype"], [360, 4, 1, "", "unset_default_int_dtype"], [361, 4, 1, "", "unset_default_uint_dtype"], [362, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[274, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[274, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[274, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[274, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[363, 1, 1, "", "DefaultDevice"], [364, 1, 1, "", "Profiler"], [365, 4, 1, "", "as_ivy_dev"], [366, 4, 1, "", "as_native_dev"], [367, 4, 1, "", "clear_mem_on_dev"], [368, 4, 1, "", "default_device"], [372, 4, 1, "", "dev"], [374, 4, 1, "", "dev_util"], [375, 4, 1, "", "function_supported_devices"], [376, 4, 1, "", "function_unsupported_devices"], [377, 4, 1, "", "get_all_ivy_arrays_on_dev"], [378, 4, 1, "", "gpu_is_available"], [379, 4, 1, "", "num_cpu_cores"], [380, 4, 1, "", "num_gpus"], [381, 4, 1, "", "num_ivy_arrays_on_dev"], [382, 4, 1, "", "percent_used_mem_on_dev"], [383, 4, 1, "", "print_all_ivy_arrays_on_dev"], [384, 4, 1, "", "set_default_device"], [385, 4, 1, "", "set_split_factor"], [386, 4, 1, "", "split_factor"], [387, 4, 1, "", "split_func_call"], [392, 4, 1, "", "to_device"], [393, 4, 1, "", "total_mem_on_dev"], [394, 4, 1, "", "tpu_is_available"], [395, 4, 1, "", "unset_default_device"], [396, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[363, 2, 1, "", "__enter__"], [363, 2, 1, "", "__exit__"], [363, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[364, 2, 1, "", "__init__"], [364, 2, 1, "", "start"], [364, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[401, 4, 1, "", "abs"], [406, 4, 1, "", "acos"], [411, 4, 1, "", "acosh"], [416, 4, 1, "", "add"], [421, 4, 1, "", "asin"], [426, 4, 1, "", "asinh"], [431, 4, 1, "", "atan"], [436, 4, 1, "", "atan2"], [441, 4, 1, "", "atanh"], [446, 4, 1, "", "bitwise_and"], [451, 4, 1, "", "bitwise_invert"], [456, 4, 1, "", "bitwise_left_shift"], [461, 4, 1, "", "bitwise_or"], [466, 4, 1, "", "bitwise_right_shift"], [471, 4, 1, "", "bitwise_xor"], [476, 4, 1, "", "ceil"], [481, 4, 1, "", "cos"], [486, 4, 1, "", "cosh"], [491, 4, 1, "", "divide"], [496, 4, 1, "", "equal"], [501, 4, 1, "", "erf"], [506, 4, 1, "", "exp"], [511, 4, 1, "", "expm1"], [516, 4, 1, "", "floor"], [521, 4, 1, "", "floor_divide"], [526, 4, 1, "", "greater"], [531, 4, 1, "", "greater_equal"], [536, 4, 1, "", "isfinite"], [541, 4, 1, "", "isinf"], [546, 4, 1, "", "isnan"], [551, 4, 1, "", "less"], [556, 4, 1, "", "less_equal"], [561, 4, 1, "", "log"], [566, 4, 1, "", "log10"], [571, 4, 1, "", "log1p"], [576, 4, 1, "", "log2"], [581, 4, 1, "", "logaddexp"], [586, 4, 1, "", "logical_and"], [591, 4, 1, "", "logical_not"], [596, 4, 1, "", "logical_or"], [601, 4, 1, "", "logical_xor"], [603, 4, 1, "", "maximum"], [604, 4, 1, "", "minimum"], [608, 4, 1, "", "multiply"], [613, 4, 1, "", "negative"], [618, 4, 1, "", "not_equal"], [623, 4, 1, "", "positive"], [628, 4, 1, "", "pow"], [633, 4, 1, "", "remainder"], [638, 4, 1, "", "round"], [643, 4, 1, "", "sign"], [648, 4, 1, "", "sin"], [653, 4, 1, "", "sinh"], [658, 4, 1, "", "sqrt"], [663, 4, 1, "", "square"], [669, 4, 1, "", "subtract"], [674, 4, 1, "", "tan"], [675, 4, 1, "", "tanh"], [680, 4, 1, "", "trunc"]], "ivy.functional.ivy.general": [[685, 4, 1, "", "all_equal"], [687, 4, 1, "", "arg_info"], [688, 4, 1, "", "arg_names"], [689, 4, 1, "", "array_equal"], [690, 4, 1, "", "arrays_equal"], [691, 4, 1, "", "assert_supports_inplace"], [692, 4, 1, "", "cache_fn"], [693, 4, 1, "", "clip_matrix_norm"], [697, 4, 1, "", "clip_vector_norm"], [699, 4, 1, "", "container_types"], [700, 4, 1, "", "copy_array"], [701, 4, 1, "", "cumprod"], [702, 4, 1, "", "cumsum"], [703, 4, 1, "", "current_backend_str"], [704, 4, 1, "", "default"], [705, 4, 1, "", "einops_rearrange"], [706, 4, 1, "", "einops_reduce"], [707, 4, 1, "", "einops_repeat"], [708, 4, 1, "", "exists"], [709, 4, 1, "", "floormod"], [710, 4, 1, "", "fourier_encode"], [711, 4, 1, "", "function_supported_devices_and_dtypes"], [712, 4, 1, "", "function_unsupported_devices_and_dtypes"], [713, 4, 1, "", "gather"], [717, 4, 1, "", "gather_nd"], [719, 4, 1, "", "get_all_arrays_in_memory"], [720, 4, 1, "", "get_array_mode"], [721, 4, 1, "", "get_min_base"], [722, 4, 1, "", "get_min_denominator"], [723, 4, 1, "", "get_nestable_mode"], [724, 4, 1, "", "get_num_dims"], [725, 4, 1, "", "get_referrers_recursive"], [726, 4, 1, "", "has_nans"], [727, 4, 1, "", "indices_where"], [728, 4, 1, "", "inplace_arrays_supported"], [729, 4, 1, "", "inplace_decrement"], [730, 4, 1, "", "inplace_increment"], [731, 4, 1, "", "inplace_update"], [732, 4, 1, "", "inplace_variables_supported"], [733, 4, 1, "", "is_array"], [734, 4, 1, "", "is_ivy_array"], [735, 4, 1, "", "is_ivy_container"], [736, 4, 1, "", "is_native_array"], [737, 4, 1, "", "match_kwargs"], [738, 4, 1, "", "multiprocessing"], [739, 4, 1, "", "num_arrays_in_memory"], [740, 4, 1, "", "one_hot"], [741, 4, 1, "", "print_all_arrays_in_memory"], [742, 4, 1, "", "queue_timeout"], [743, 4, 1, "", "scatter_flat"], [744, 4, 1, "", "scatter_nd"], [745, 4, 1, "", "set_array_mode"], [746, 4, 1, "", "set_min_base"], [747, 4, 1, "", "set_min_denominator"], [748, 4, 1, "", "set_nestable_mode"], [749, 4, 1, "", "set_queue_timeout"], [750, 4, 1, "", "set_shape_array_mode"], [751, 4, 1, "", "set_tmp_dir"], [752, 4, 1, "", "shape"], [753, 4, 1, "", "shape_array_mode"], [754, 4, 1, "", "stable_divide"], [758, 4, 1, "", "stable_pow"], [760, 4, 1, "", "supports_inplace"], [761, 4, 1, "", "tmp_dir"], [762, 4, 1, "", "to_ivy_shape"], [763, 4, 1, "", "to_list"], [764, 4, 1, "", "to_native_shape"], [769, 4, 1, "", "to_numpy"], [770, 4, 1, "", "to_scalar"], [771, 4, 1, "", "try_else_none"], [772, 4, 1, "", "unset_array_mode"], [773, 4, 1, "", "unset_nestable_mode"], [774, 4, 1, "", "unset_shape_array_mode"], [775, 4, 1, "", "unstack"], [776, 4, 1, "", "value_is_nan"]], "ivy.functional.ivy.gradients": [[777, 1, 1, "", "GradientTracking"], [781, 4, 1, "", "adam_step"], [785, 4, 1, "", "adam_update"], [788, 4, 1, "", "execute_with_gradients"], [792, 4, 1, "", "gradient_descent_update"], [797, 4, 1, "", "is_variable"], [801, 4, 1, "", "lamb_update"], [805, 4, 1, "", "lars_update"], [809, 4, 1, "", "optimizer_update"], [811, 4, 1, "", "set_with_grads"], [812, 4, 1, "", "stop_gradient"], [813, 4, 1, "", "unset_with_grads"], [818, 4, 1, "", "variable"], [819, 4, 1, "", "variable_data"], [820, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[777, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[825, 4, 1, "", "conv1d"], [827, 4, 1, "", "conv1d_transpose"], [828, 4, 1, "", "conv2d"], [829, 4, 1, "", "conv2d_transpose"], [830, 4, 1, "", "conv3d"], [831, 4, 1, "", "conv3d_transpose"], [835, 4, 1, "", "depthwise_conv2d"], [837, 4, 1, "", "dropout"], [838, 4, 1, "", "linear"], [839, 4, 1, "", "lstm_update"], [840, 4, 1, "", "multi_head_attention"], [841, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[846, 4, 1, "", "cholesky"], [851, 4, 1, "", "cross"], [856, 4, 1, "", "det"], [861, 4, 1, "", "diagonal"], [866, 4, 1, "", "eigh"], [869, 4, 1, "", "eigvalsh"], [873, 4, 1, "", "inv"], [878, 4, 1, "", "matmul"], [882, 4, 1, "", "matrix_norm"], [886, 4, 1, "", "matrix_power"], [891, 4, 1, "", "matrix_rank"], [896, 4, 1, "", "matrix_transpose"], [901, 4, 1, "", "outer"], [905, 4, 1, "", "pinv"], [909, 4, 1, "", "qr"], [913, 4, 1, "", "slogdet"], [918, 4, 1, "", "solve"], [924, 4, 1, "", "svd"], [929, 4, 1, "", "svdvals"], [934, 4, 1, "", "tensordot"], [939, 4, 1, "", "trace"], [944, 4, 1, "", "vecdot"], [949, 4, 1, "", "vector_norm"], [954, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[959, 4, 1, "", "binary_cross_entropy"], [964, 4, 1, "", "cross_entropy"], [969, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[975, 4, 1, "", "clip"], [980, 4, 1, "", "concat"], [984, 4, 1, "", "constant_pad"], [988, 4, 1, "", "expand_dims"], [992, 4, 1, "", "flip"], [996, 4, 1, "", "permute_dims"], [1000, 4, 1, "", "repeat"], [1005, 4, 1, "", "reshape"], [1010, 4, 1, "", "roll"], [1012, 4, 1, "", "split"], [1016, 4, 1, "", "squeeze"], [1020, 4, 1, "", "stack"], [1024, 4, 1, "", "swapaxes"], [1028, 4, 1, "", "tile"], [1032, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1034, 4, 1, "", "fomaml_step"], [1035, 4, 1, "", "maml_step"], [1036, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1038, 4, 1, "", "all_nested_indices"], [1039, 4, 1, "", "copy_nest"], [1040, 4, 1, "", "index_nest"], [1041, 4, 1, "", "insert_into_nest_at_index"], [1042, 4, 1, "", "insert_into_nest_at_indices"], [1043, 4, 1, "", "map"], [1044, 4, 1, "", "map_nest_at_index"], [1045, 4, 1, "", "map_nest_at_indices"], [1046, 4, 1, "", "multi_index_nest"], [1047, 4, 1, "", "nested_any"], [1048, 4, 1, "", "nested_indices_where"], [1049, 4, 1, "", "nested_map"], [1050, 4, 1, "", "nested_multi_map"], [1051, 4, 1, "", "prune_nest_at_index"], [1052, 4, 1, "", "prune_nest_at_indices"], [1053, 4, 1, "", "set_nest_at_index"], [1054, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1059, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1062, 4, 1, "", "multinomial"], [1066, 4, 1, "", "randint"], [1071, 4, 1, "", "random_normal"], [1076, 4, 1, "", "random_uniform"], [1078, 4, 1, "", "seed"], [1079, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1081, 4, 1, "", "argmax"], [1082, 4, 1, "", "argmin"], [1083, 4, 1, "", "nonzero"], [1084, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1090, 4, 1, "", "unique_all"], [1095, 4, 1, "", "unique_counts"], [1100, 4, 1, "", "unique_inverse"], [1105, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1110, 4, 1, "", "argsort"], [1115, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1121, 4, 1, "", "einsum"], [1125, 4, 1, "", "max"], [1129, 4, 1, "", "mean"], [1133, 4, 1, "", "min"], [1137, 4, 1, "", "prod"], [1141, 4, 1, "", "std"], [1145, 4, 1, "", "sum"], [1149, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1154, 4, 1, "", "all"], [1159, 4, 1, "", "any"]], "ivy.inspection": [[1165, 4, 1, "", "add_array_specs"], [1166, 4, 1, "", "fn_array_spec"]], "ivy.stateful": [[1169, 0, 0, "-", "activations"], [1172, 0, 0, "-", "converters"], [1174, 0, 0, "-", "initializers"], [1180, 0, 0, "-", "layers"], [1192, 0, 0, "-", "module"], [1194, 0, 0, "-", "norms"], [1196, 0, 0, "-", "optimizers"], [1202, 0, 0, "-", "sequential"]], "ivy.stateful.activations": [[1170, 1, 1, "", "GEGLU"], [1171, 1, 1, "", "GELU"]], "ivy.stateful.activations.GEGLU": [[1170, 2, 1, "", "__init__"]], "ivy.stateful.activations.GELU": [[1171, 2, 1, "", "__init__"]], "ivy.stateful.converters": [[1173, 4, 1, "", "to_ivy_module"]], "ivy.stateful.initializers": [[1174, 1, 1, "", "Constant"], [1175, 1, 1, "", "FirstLayerSiren"], [1176, 1, 1, "", "GlorotUniform"], [1174, 1, 1, "", "KaimingNormal"], [1177, 1, 1, "", "Ones"], [1178, 1, 1, "", "Siren"], [1174, 1, 1, "", "Uniform"], [1179, 1, 1, "", "Zeros"]], "ivy.stateful.initializers.Constant": [[1174, 2, 1, "", "__init__"], [1174, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.FirstLayerSiren": [[1175, 2, 1, "", "__init__"]], "ivy.stateful.initializers.GlorotUniform": [[1176, 2, 1, "", "__init__"]], "ivy.stateful.initializers.KaimingNormal": [[1174, 2, 1, "", "__init__"], [1174, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Ones": [[1177, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Siren": [[1178, 2, 1, "", "__init__"]], "ivy.stateful.initializers.Uniform": [[1174, 2, 1, "", "__init__"], [1174, 2, 1, "", "create_variables"]], "ivy.stateful.initializers.Zeros": [[1179, 2, 1, "", "__init__"]], "ivy.stateful.layers": [[1181, 1, 1, "", "Conv1D"], [1182, 1, 1, "", "Conv1DTranspose"], [1183, 1, 1, "", "Conv2D"], [1184, 1, 1, "", "Conv2DTranspose"], [1185, 1, 1, "", "Conv3D"], [1186, 1, 1, "", "Conv3DTranspose"], [1187, 1, 1, "", "DepthwiseConv2D"], [1188, 1, 1, "", "Dropout"], [1189, 1, 1, "", "LSTM"], [1190, 1, 1, "", "Linear"], [1191, 1, 1, "", "MultiHeadAttention"]], "ivy.stateful.layers.Conv1D": [[1181, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv1DTranspose": [[1182, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2D": [[1183, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv2DTranspose": [[1184, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3D": [[1185, 2, 1, "", "__init__"]], "ivy.stateful.layers.Conv3DTranspose": [[1186, 2, 1, "", "__init__"]], "ivy.stateful.layers.DepthwiseConv2D": [[1187, 2, 1, "", "__init__"]], "ivy.stateful.layers.Dropout": [[1188, 2, 1, "", "__init__"]], "ivy.stateful.layers.LSTM": [[1189, 2, 1, "", "__init__"], [1189, 2, 1, "", "get_initial_state"]], "ivy.stateful.layers.Linear": [[1190, 2, 1, "", "__init__"]], "ivy.stateful.layers.MultiHeadAttention": [[1191, 2, 1, "", "__init__"]], "ivy.stateful.module": [[1193, 1, 1, "", "Module"]], "ivy.stateful.module.Module": [[1193, 2, 1, "", "__init__"], [1193, 2, 1, "", "build"], [1193, 3, 1, "", "build_mode"], [1193, 3, 1, "", "built"], [1193, 2, 1, "", "check_submod_rets"], [1193, 2, 1, "", "get_mod_key"], [1193, 2, 1, "", "mod_depth"], [1193, 2, 1, "", "mod_height"], [1193, 2, 1, "", "mod_with_top_mod_key_chain"], [1193, 2, 1, "", "save_weights"], [1193, 2, 1, "", "show_mod_in_top_mod"], [1193, 2, 1, "", "show_structure"], [1193, 2, 1, "", "show_v_in_top_v"], [1193, 2, 1, "", "sub_mods"], [1193, 2, 1, "", "track_submod_call_order"], [1193, 2, 1, "", "track_submod_rets"], [1193, 2, 1, "", "v_with_top_v_key_chains"]], "ivy.stateful.norms": [[1195, 1, 1, "", "LayerNorm"]], "ivy.stateful.norms.LayerNorm": [[1195, 2, 1, "", "__init__"]], "ivy.stateful.optimizers": [[1197, 1, 1, "", "Adam"], [1198, 1, 1, "", "LAMB"], [1199, 1, 1, "", "LARS"], [1200, 1, 1, "", "Optimizer"], [1201, 1, 1, "", "SGD"]], "ivy.stateful.optimizers.Adam": [[1197, 2, 1, "", "__init__"], [1197, 2, 1, "", "set_state"], [1197, 3, 1, "", "state"]], "ivy.stateful.optimizers.LAMB": [[1198, 2, 1, "", "__init__"], [1198, 2, 1, "", "set_state"], [1198, 3, 1, "", "state"]], "ivy.stateful.optimizers.LARS": [[1199, 2, 1, "", "__init__"], [1199, 2, 1, "", "set_state"], [1199, 3, 1, "", "state"]], "ivy.stateful.optimizers.Optimizer": [[1200, 2, 1, "", "__init__"], [1200, 2, 1, "", "set_state"], [1200, 2, 1, "", "step"]], "ivy.stateful.optimizers.SGD": [[1201, 2, 1, "", "__init__"], [1201, 2, 1, "", "set_state"], [1201, 3, 1, "", "state"]], "ivy.stateful.sequential": [[1203, 1, 1, "", "Sequential"]], "ivy.stateful.sequential.Sequential": [[1203, 2, 1, "", "__init__"]], "ivy.verbosity": [[1206, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"backend": [0, 118, 128, 137, 154], "handler": [0, 137], "choose_random_backend": 1, "clear_backend_stack": 2, "current_backend": 3, "get_backend": 4, "set_backend": 5, "try_import_ivy_jax": 6, "try_import_ivy_mxnet": 7, "try_import_ivy_numpi": 8, "try_import_ivy_tf": 9, "try_import_ivy_torch": 10, "unset_backend": 11, "background": [12, 1161], "ml": 13, "explos": 13, "standard": 14, "skeptic": 14, "complimentari": 14, "v": [14, 154], "competit": 14, "do": [14, 124], "work": [14, 20], "The": [14, 18, 139, 154], "arrai": [14, 22, 25, 119, 123, 130, 139, 167, 172, 177, 182, 187, 192, 198, 209, 214, 222, 228, 239, 244, 252, 258, 263, 271, 278, 283, 288, 293, 305, 311, 322, 328, 333, 338, 343, 349, 370, 390, 399, 404, 409, 414, 419, 424, 429, 434, 439, 444, 449, 454, 459, 464, 469, 474, 479, 484, 489, 494, 499, 504, 509, 514, 519, 524, 529, 534, 539, 544, 549, 554, 559, 564, 569, 574, 579, 584, 589, 594, 599, 606, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 667, 672, 678, 683, 695, 715, 756, 767, 779, 795, 816, 823, 833, 844, 849, 854, 859, 864, 868, 871, 876, 880, 889, 894, 899, 904, 907, 916, 922, 927, 932, 937, 942, 947, 952, 957, 962, 967, 973, 978, 982, 986, 990, 994, 998, 1003, 1008, 1014, 1018, 1022, 1026, 1030, 1057, 1064, 1069, 1074, 1088, 1093, 1098, 1103, 1108, 1113, 1119, 1123, 1127, 1131, 1135, 1139, 1143, 1147, 1152, 1157], "api": [14, 19, 118, 123, 131, 137, 139, 141, 142], "why": [15, 124], "unifi": [15, 139], "No": [15, 17], "more": [15, 17], "re": 15, "implement": 15, "infinit": 15, "shelf": 15, "life": 15, "contribut": [16, 1161], "set": [17, 62, 107, 128, 1085], "up": 17, "clone": 17, "ivi": [17, 18, 118, 122, 124, 125, 126, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 206, 207, 209, 210, 211, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 300, 301, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317, 319, 320, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 349, 350, 351, 352, 370, 371, 372, 373, 389, 390, 391, 392, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 529, 530, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 606, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 671, 672, 673, 674, 677, 678, 679, 680, 683, 684, 685, 686, 695, 696, 697, 698, 715, 716, 717, 718, 756, 757, 758, 759, 766, 767, 768, 769, 779, 780, 781, 782, 784, 785, 786, 788, 789, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 804, 805, 806, 808, 809, 810, 815, 816, 817, 818, 823, 824, 825, 826, 833, 834, 835, 836, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 868, 869, 871, 872, 873, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 887, 889, 890, 891, 892, 894, 895, 896, 897, 899, 900, 901, 902, 904, 905, 907, 908, 909, 910, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 947, 948, 949, 951, 952, 953, 954, 957, 958, 959, 960, 962, 963, 964, 965, 967, 968, 969, 970, 973, 974, 975, 976, 978, 979, 980, 982, 983, 984, 986, 987, 988, 990, 991, 992, 994, 995, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1028, 1030, 1031, 1032, 1057, 1058, 1059, 1060, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1119, 1120, 1121, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160], "pycharm": [17, 18], "virtual": 17, "environ": 17, "docker": [17, 18, 20], "us": [17, 20, 140], "miniconda": [17, 20], "venv": [17, 20], "interpret": 17, "window": 17, "maco": 17, "ubuntu": 17, "detail": 17, "hypothesi": [17, 124], "log": [17, 558, 559, 560, 561], "github": 17, "codespac": 17, "pre": [17, 135], "commit": [17, 18, 135], "basic": 18, "get": 18, "help": 18, "todo": 18, "list": 18, "issu": 18, "manag": 18, "your": 18, "fork": 18, "who": 18, "To": 18, "ask": 18, "With": 18, "command": 18, "line": 18, "browser": 18, "pull": 18, "request": 18, "small": 18, "often": 18, "interact": 18, "contain": [18, 72, 77, 131, 140, 168, 170, 173, 175, 178, 180, 183, 185, 188, 190, 193, 195, 197, 199, 207, 211, 215, 217, 220, 223, 225, 229, 231, 234, 237, 240, 242, 245, 247, 250, 253, 255, 257, 259, 262, 264, 267, 270, 272, 279, 281, 284, 286, 289, 291, 294, 296, 301, 306, 308, 312, 314, 317, 320, 323, 325, 329, 331, 334, 336, 339, 341, 344, 346, 350, 352, 371, 373, 389, 391, 400, 402, 405, 407, 410, 412, 415, 417, 420, 422, 425, 427, 430, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 470, 472, 475, 477, 480, 482, 485, 487, 490, 492, 495, 497, 500, 502, 505, 507, 510, 512, 515, 517, 520, 522, 525, 527, 530, 532, 535, 537, 540, 542, 545, 547, 550, 552, 555, 557, 560, 562, 565, 567, 570, 572, 575, 577, 580, 582, 585, 587, 590, 592, 595, 597, 600, 602, 607, 609, 612, 614, 617, 619, 622, 624, 627, 629, 632, 634, 637, 639, 642, 644, 647, 649, 652, 654, 657, 659, 662, 664, 666, 668, 671, 673, 677, 679, 684, 686, 696, 698, 716, 718, 757, 759, 766, 768, 780, 782, 784, 786, 789, 791, 793, 796, 798, 800, 802, 804, 806, 808, 810, 815, 817, 824, 826, 834, 836, 845, 847, 850, 852, 855, 857, 860, 862, 865, 872, 874, 877, 881, 883, 885, 887, 890, 892, 895, 897, 900, 902, 908, 910, 912, 914, 917, 919, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 958, 960, 963, 965, 968, 970, 974, 976, 979, 983, 987, 991, 995, 999, 1001, 1004, 1006, 1009, 1011, 1015, 1019, 1023, 1027, 1031, 1058, 1060, 1065, 1067, 1070, 1072, 1075, 1077, 1087, 1089, 1092, 1094, 1097, 1099, 1102, 1104, 1109, 1111, 1114, 1116, 1120, 1124, 1128, 1132, 1136, 1140, 1144, 1148, 1153, 1155, 1158, 1160], "run": 18, "test": [18, 123, 124, 126], "local": 18, "most": 18, "out": [18, 119, 134], "id": 18, "open": 19, "task": 19, "function": [19, 119, 120, 124, 127, 129, 131, 132, 133, 137, 142, 154], "format": [19, 135], "frontend": [19, 125, 126, 142], "build": [20, 137], "doc": 20, "dockerless": 20, "document": 20, "pipelin": [20, 154], "make_doc": 20, "sh": 20, "entrypoint": 20, "_make_doc": 20, "generate_src_rst_fil": 20, "py": 20, "sphinx": 20, "correct_built_html_fil": 20, "remove_fil": 20, "data": [21, 36, 81, 124, 132, 140, 154, 274, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "class": [21, 139, 1168], "activ": [23, 73, 165, 1169], "arraywithactiv": 24, "convers": 28, "args_to_contain": 29, "args_to_ivi": 30, "args_to_n": 31, "to_ivi": 32, "to_n": 33, "creation": [34, 79, 204], "arraywithcr": 35, "type": [36, 81, 127, 132, 154, 274], "arraywithdatatyp": 37, "devic": [38, 83, 119, 133, 363], "arraywithdevic": 39, "elementwis": [40, 85, 397], "arraywithelementwis": 41, "gener": [42, 87, 124, 681], "arraywithgener": 43, "gradient": [44, 89, 777], "arraywithgradi": 45, "imag": [46, 91], "arraywithimag": 47, "layer": [48, 93, 821, 1180], "arraywithlay": 49, "linear": [50, 95, 838, 842, 1190], "algebra": [50, 95, 842], "arraywithlinearalgebra": 51, "loss": [52, 97, 955], "arraywithloss": 53, "manipul": [54, 99, 971], "arraywithmanipul": 55, "norm": [56, 101, 1055, 1194], "arraywithnorm": 57, "random": [58, 103, 1061], "arraywithrandom": 59, "search": [60, 105, 1080], "arraywithsearch": 61, "arraywithset": 63, "sort": [64, 109, 1106, 1112, 1113, 1114, 1115], "arraywithsort": 65, "statist": [66, 111, 1117], "arraywithstatist": 67, "util": [68, 113, 1150], "arraywithutil": 69, "wrap": [70, 115, 129], "add_ivy_array_instance_method": 71, "containerwithactiv": 74, "base": 75, "containerbas": 76, "containerwithcr": 80, "containerwithdatatyp": 82, "containerwithdevic": 84, "containerwithelementwis": 86, "containerwithgener": 88, "containerwithgradi": 90, "containerwithimag": 92, "containerwithlay": 94, "containerwithlinearalgebra": 96, "containerwithloss": 98, "containerwithmanipul": 100, "containerwithnorm": 102, "containerwithrandom": 104, "containerwithsearch": 106, "containerwithset": 108, "containerwithsort": 110, "containerwithstatist": 112, "containerwithutil": 114, "add_ivy_container_instance_method": 116, "deep": 117, "dive": 117, "navig": 118, "code": 118, "categor": 118, "submodul": [118, 120], "design": [118, 136, 1161], "argument": [119, 132, 133, 134], "exampl": [119, 120, 122, 125, 126, 135], "dtype": [119, 304, 305, 306, 307], "number": 119, "oper": [119, 139, 154], "integ": 119, "sequenc": 119, "nestabl": [119, 127, 131], "helper": [120, 124], "1": 120, "2": 120, "docstr": [121, 122], "tan": [122, 126, 670, 672, 673, 674], "roll": [122, 1007, 1008, 1009, 1010], "add": [122, 413, 414, 415, 416], "import": 124, "strategi": 124, "integr": 124, "we": 124, "need": 124, "how": 124, "write": 124, "effect": 124, "bonu": 124, "extend": 124, "featur": 124, "self": 124, "consist": 124, "explicit": 124, "test_array_funct": 124, "introduct": [125, 126], "full": [126, 226], "primari": 127, "composit": 127, "mix": 127, "standalon": 127, "conveni": 127, "nativ": 130, "handl": [130, 154], "instanc": [131, 139], "method": [131, 139, 140], "static": 131, "special": 131, "modul": [132, 133, 141, 1192, 1193], "other": [132, 133], "unsupport": 132, "inplac": 134, "updat": 134, "copi": 134, "lint": 135, "check": [135, 154], "hook": 135, "automat": 135, "reformat": 135, "befor": 135, "block": 137, "framework": [137, 138, 1168], "graph": [137, 142], "compil": [137, 142, 201, 202], "monkei": 139, "patch": 139, "construct": 140, "represent": 140, "recurs": 140, "built": 140, "ins": 140, "access": 140, "save": 140, "load": 140, "comparison": 140, "custom": [140, 154], "case": 140, "compartment": 140, "configur": 140, "network": [140, 142], "weight": 140, "state": [141, 154], "initi": [141, 1174], "optim": [141, 1196, 1200], "transpil": 142, "role": 142, "convert": [142, 1172], "model": [142, 149, 154], "builder": 144, "ecosystem": 145, "gym": [146, 153], "mech": 147, "memori": [148, 153], "robot": [150, 153], "vision": [151, 153], "extens": [152, 1161], "appli": 153, "librari": 153, "mechan": 153, "faq": 154, "maintain": 154, "version": 154, "dynam": 154, "size": 154, "shape": [154, 752, 1085, 1086, 1090, 1091, 1095, 1101, 1105], "gpu": 154, "deploy": 154, "control": 154, "flow": 154, "auto": 154, "differenti": 154, "replica": 154, "parallel": 154, "support": 154, "altern": 154, "structur": 154, "func": 155, "wrapper": 155, "handle_nest": 156, "handle_out_argu": 157, "infer_devic": 158, "infer_dtyp": 159, "inputs_to_ivy_arrai": 160, "inputs_to_native_arrai": 161, "outputs_to_ivy_arrai": 162, "to_native_arrays_and_back": 163, "gelu": [166, 167, 168, 169, 1171], "static_gelu": 170, "leaky_relu": [171, 172, 173, 174], "static_leaky_relu": 175, "relu": [176, 177, 178, 179], "static_relu": 180, "sigmoid": [181, 182, 183, 184], "static_sigmoid": 185, "softmax": [186, 187, 188, 189], "static_softmax": 190, "softplu": [191, 192, 193, 194], "static_softplu": 195, "tanh": [196, 198, 199, 200, 675], "static_tanh": 197, "constant": 203, "note": [204, 221, 224], "arang": [205, 206], "static_arang": 207, "asarrai": [208, 209, 210], "static_asarrai": 211, "empti": 212, "empty_lik": [213, 214, 215, 216], "static_empty_lik": 217, "ey": [218, 219], "static_ey": 220, "from_dlpack": [221, 222, 223, 224], "static_from_dlpack": 225, "full_lik": [227, 228, 229, 230], "static_full_lik": 231, "linspac": [232, 233], "static_linspac": 234, "logspac": [235, 236], "static_logspac": 237, "meshgrid": [238, 239, 240, 241], "static_meshgrid": 242, "native_arrai": [243, 244, 245, 246], "static_native_arrai": 247, "ones": [248, 249], "static_on": 250, "ones_lik": [251, 252, 253, 254], "static_ones_lik": 255, "tril": [256, 258, 259, 260], "static_tril": 257, "triu": [261, 263, 264, 265], "static_triu": 262, "zero": [266, 268, 1179], "static_zero": 267, "zeros_lik": [269, 271, 272, 273], "static_zeros_lik": 270, "as_ivy_dtyp": 275, "as_native_dtyp": 276, "astyp": [277, 278, 279, 280], "static_astyp": 281, "broadcast_arrai": [282, 283, 284, 285], "static_broadcast_arrai": 286, "broadcast_to": [287, 288, 289, 290], "static_broadcast_to": 291, "can_cast": [292, 293, 294, 295], "static_can_cast": 296, "closest_valid_dtyp": 297, "default_dtyp": 298, "default_float_dtyp": [299, 300], "static_default_float_dtyp": 301, "default_int_dtyp": 302, "default_uint_dtyp": 303, "static_dtyp": 308, "dtype_bit": 309, "finfo": [310, 311, 312, 313], "static_finfo": 314, "function_supported_dtyp": [315, 316], "static_function_supported_dtyp": 317, "function_unsupported_dtyp": [318, 319], "static_function_unsupported_dtyp": 320, "iinfo": [321, 322, 323, 324], "static_iinfo": 325, "invalid_dtyp": 326, "is_bool_dtyp": [327, 328, 329, 330], "static_is_bool_dtyp": 331, "is_float_dtyp": [332, 333, 334, 335], "static_is_float_dtyp": 336, "is_int_dtyp": [337, 338, 339, 340], "static_is_int_dtyp": 341, "is_uint_dtyp": [342, 343, 344, 345], "static_is_uint_dtyp": 346, "promote_typ": 347, "result_typ": [348, 349, 350, 351], "static_result_typ": 352, "set_default_dtyp": 353, "set_default_float_dtyp": 354, "set_default_int_dtyp": 355, "set_default_uint_dtyp": 356, "type_promote_arrai": 357, "unset_default_dtyp": 358, "unset_default_float_dtyp": 359, "unset_default_int_dtyp": 360, "unset_default_uint_dtyp": 361, "valid_dtyp": 362, "profil": 364, "as_ivy_dev": 365, "as_native_dev": 366, "clear_mem_on_dev": 367, "default_devic": 368, "dev": [369, 370, 371, 372], "static_dev": 373, "dev_util": 374, "function_supported_devic": 375, "function_unsupported_devic": 376, "get_all_ivy_arrays_on_dev": 377, "gpu_is_avail": 378, "num_cpu_cor": 379, "num_gpu": 380, "num_ivy_arrays_on_dev": 381, "percent_used_mem_on_dev": 382, "print_all_ivy_arrays_on_dev": 383, "set_default_devic": 384, "set_split_factor": 385, "split_factor": 386, "split_func_cal": 387, "to_devic": [388, 390, 391, 392], "static_to_devic": 389, "total_mem_on_dev": 393, "tpu_is_avail": 394, "unset_default_devic": 395, "used_mem_on_dev": 396, "ab": [398, 399, 400, 401], "static_ab": 402, "aco": [403, 404, 405, 406], "static_aco": 407, "acosh": [408, 409, 410, 411], "static_acosh": 412, "static_add": 417, "asin": [418, 419, 420, 421], "static_asin": 422, "asinh": [423, 424, 425, 426], "static_asinh": 427, "atan": [428, 429, 430, 431], "static_atan": 432, "atan2": [433, 434, 435, 436], "static_atan2": 437, "atanh": [438, 439, 440, 441], "static_atanh": 442, "bitwise_and": [443, 444, 445, 446], "static_bitwise_and": 447, "bitwise_invert": [448, 449, 450, 451], "static_bitwise_invert": 452, "bitwise_left_shift": [453, 454, 455, 456], "static_bitwise_left_shift": 457, "bitwise_or": [458, 459, 460, 461], "static_bitwise_or": 462, "bitwise_right_shift": [463, 464, 465, 466], "static_bitwise_right_shift": 467, "bitwise_xor": [468, 469, 470, 471], "static_bitwise_xor": 472, "ceil": [473, 474, 475, 476], "static_ceil": 477, "co": [478, 479, 480, 481], "static_co": 482, "cosh": [483, 484, 485, 486], "static_cosh": 487, "divid": [488, 489, 490, 491], "static_divid": 492, "equal": [493, 494, 495, 496], "static_equ": 497, "erf": [498, 499, 500, 501], "static_erf": 502, "exp": [503, 504, 505, 506], "static_exp": 507, "expm1": [508, 509, 510, 511], "static_expm1": 512, "floor": [513, 514, 515, 516], "static_floor": 517, "floor_divid": [518, 519, 520, 521], "static_floor_divid": 522, "greater": [523, 524, 525, 526], "static_great": 527, "greater_equ": [528, 529, 530, 531], "static_greater_equ": 532, "isfinit": [533, 534, 535, 536], "static_isfinit": 537, "isinf": [538, 539, 540, 541], "static_isinf": 542, "isnan": [543, 544, 545, 546], "static_isnan": 547, "less": [548, 549, 550, 551], "static_less": 552, "less_equ": [553, 554, 555, 556], "static_less_equ": 557, "static_log": 562, "log10": [563, 564, 565, 566], "static_log10": 567, "log1p": [568, 569, 570, 571], "static_log1p": 572, "log2": [573, 574, 575, 576], "static_log2": 577, "logaddexp": [578, 579, 580, 581], "static_logaddexp": 582, "logical_and": [583, 584, 585, 586], "static_logical_and": 587, "logical_not": [588, 589, 590, 591], "static_logical_not": 592, "logical_or": [593, 594, 595, 596], "static_logical_or": 597, "logical_xor": [598, 599, 600, 601], "static_logical_xor": 602, "maximum": 603, "minimum": 604, "multipli": [605, 606, 607, 608], "static_multipli": 609, "neg": [610, 611, 612, 613], "static_neg": 614, "not_equ": [615, 616, 617, 618], "static_not_equ": 619, "posit": [620, 621, 622, 623], "static_posit": 624, "pow": [625, 626, 627, 628], "static_pow": 629, "remaind": [630, 631, 632, 633], "static_remaind": 634, "round": [635, 636, 637, 638], "static_round": 639, "sign": [640, 641, 642, 643], "static_sign": 644, "sin": [645, 646, 647, 648], "static_sin": 649, "sinh": [650, 651, 652, 653], "static_sinh": 654, "sqrt": [655, 656, 657, 658], "static_sqrt": 659, "squar": [660, 661, 662, 663], "static_squar": 664, "subtract": [665, 667, 668, 669], "static_subtract": 666, "static_tan": 671, "trunc": [676, 678, 679, 680], "static_trunc": 677, "all_equ": [682, 683, 684, 685], "static_all_equ": 686, "arg_info": 687, "arg_nam": 688, "array_equ": 689, "arrays_equ": 690, "assert_supports_inplac": 691, "cache_fn": 692, "clip_matrix_norm": 693, "clip_vector_norm": [694, 695, 696, 697], "static_clip_vector_norm": 698, "container_typ": 699, "copy_arrai": 700, "cumprod": 701, "cumsum": 702, "current_backend_str": 703, "default": 704, "einops_rearrang": 705, "einops_reduc": 706, "einops_repeat": 707, "exist": 708, "floormod": 709, "fourier_encod": 710, "function_supported_devices_and_dtyp": 711, "function_unsupported_devices_and_dtyp": 712, "gather": 713, "gather_nd": [714, 715, 716, 717], "static_gather_nd": 718, "get_all_arrays_in_memori": 719, "get_array_mod": 720, "get_min_bas": 721, "get_min_denomin": 722, "get_nestable_mod": 723, "get_num_dim": 724, "get_referrers_recurs": 725, "has_nan": 726, "indices_wher": 727, "inplace_arrays_support": 728, "inplace_decr": 729, "inplace_incr": 730, "inplace_upd": 731, "inplace_variables_support": 732, "is_arrai": 733, "is_ivy_arrai": 734, "is_ivy_contain": 735, "is_native_arrai": 736, "match_kwarg": 737, "multiprocess": 738, "num_arrays_in_memori": 739, "one_hot": 740, "print_all_arrays_in_memori": 741, "queue_timeout": 742, "scatter_flat": 743, "scatter_nd": 744, "set_array_mod": 745, "set_min_bas": 746, "set_min_denomin": 747, "set_nestable_mod": 748, "set_queue_timeout": 749, "set_shape_array_mod": 750, "set_tmp_dir": 751, "shape_array_mod": 753, "stable_divid": 754, "stable_pow": [755, 756, 757, 758], "static_stable_pow": 759, "supports_inplac": 760, "tmp_dir": 761, "to_ivy_shap": 762, "to_list": 763, "to_native_shap": 764, "to_numpi": [765, 767, 768, 769], "static_to_numpi": 766, "to_scalar": 770, "try_else_non": 771, "unset_array_mod": 772, "unset_nestable_mod": 773, "unset_shape_array_mod": 774, "unstack": 775, "value_is_nan": 776, "adam_step": [778, 779, 780, 781], "static_adam_step": 782, "adam_upd": [783, 784, 785], "static_adam_upd": 786, "execute_with_gradi": [787, 788], "static_execute_with_gradi": 789, "gradient_descent_upd": [790, 791, 792], "static_gradient_descent_upd": 793, "is_vari": [794, 795, 796, 797], "static_is_vari": 798, "lamb_upd": [799, 800, 801], "static_lamb_upd": 802, "lars_upd": [803, 804, 805], "static_lars_upd": 806, "optimizer_upd": [807, 808, 809], "static_optimizer_upd": 810, "set_with_grad": 811, "stop_gradi": 812, "unset_with_grad": 813, "variabl": [814, 816, 817, 818], "static_vari": 815, "variable_data": 819, "with_grad": 820, "conv1d": [822, 823, 824, 825, 1181], "static_conv1d": 826, "conv1d_transpos": 827, "conv2d": [828, 1183], "conv2d_transpos": 829, "conv3d": [830, 1185], "conv3d_transpos": 831, "depthwise_conv2d": [832, 833, 834, 835], "static_depthwise_conv2d": 836, "dropout": [837, 1188], "lstm_updat": 839, "multi_head_attent": 840, "scaled_dot_product_attent": 841, "choleski": [843, 844, 845, 846], "static_choleski": 847, "cross": [848, 849, 850, 851], "static_cross": 852, "det": [853, 854, 855, 856], "static_det": 857, "diagon": [858, 859, 860, 861], "static_diagon": 862, "eigh": [863, 864, 865, 866], "eigvalsh": [867, 868, 869], "inv": [870, 871, 872, 873], "static_inv": 874, "matmul": [875, 876, 877, 878], "matrix_norm": [879, 880, 881, 882], "static_matrix_norm": 883, "matrix_pow": [884, 885, 886], "static_matrix_pow": 887, "matrix_rank": [888, 889, 890, 891], "static_matrix_rank": 892, "matrix_transpos": [893, 894, 895, 896], "static_matrix_transpos": 897, "outer": [898, 899, 900, 901], "static_out": 902, "pinv": [903, 904, 905], "qr": [906, 907, 908, 909], "static_qr": 910, "slogdet": [911, 912, 913], "static_slogdet": 914, "solv": [915, 916, 917, 918], "static_solv": 919, "svd": [920, 922, 923, 924], "static_svd": 921, "svdval": [925, 927, 928, 929], "static_svdv": 926, "tensordot": [930, 932, 933, 934], "static_tensordot": 931, "trace": [935, 937, 938, 939], "static_trac": 936, "vecdot": [940, 942, 943, 944], "static_vecdot": 941, "vector_norm": [945, 947, 948, 949], "static_vector_norm": 946, "vector_to_skew_symmetric_matrix": [950, 952, 953, 954], "static_vector_to_skew_symmetric_matrix": 951, "binary_cross_entropi": [956, 957, 958, 959], "static_binary_cross_entropi": 960, "cross_entropi": [961, 962, 963, 964], "static_cross_entropi": 965, "sparse_cross_entropi": [966, 967, 968, 969], "static_sparse_cross_entropi": 970, "clip": [972, 973, 974, 975], "static_clip": 976, "concat": [977, 978, 979, 980], "constant_pad": [981, 982, 983, 984], "expand_dim": [985, 986, 987, 988], "flip": [989, 990, 991, 992], "permute_dim": [993, 994, 995, 996], "repeat": [997, 998, 999, 1000], "static_repeat": 1001, "reshap": [1002, 1003, 1004, 1005], "static_reshap": 1006, "static_rol": 1011, "split": 1012, "squeez": [1013, 1014, 1015, 1016], "stack": [1017, 1018, 1019, 1020], "swapax": [1021, 1022, 1023, 1024], "tile": [1025, 1026, 1027, 1028], "zero_pad": [1029, 1030, 1031, 1032], "meta": 1033, "fomaml_step": 1034, "maml_step": 1035, "reptile_step": 1036, "nest": 1037, "all_nested_indic": 1038, "copy_nest": 1039, "index_nest": 1040, "insert_into_nest_at_index": 1041, "insert_into_nest_at_indic": 1042, "map": 1043, "map_nest_at_index": 1044, "map_nest_at_indic": 1045, "multi_index_nest": 1046, "nested_ani": 1047, "nested_indices_wher": 1048, "nested_map": 1049, "nested_multi_map": 1050, "prune_nest_at_index": 1051, "prune_nest_at_indic": 1052, "set_nest_at_index": 1053, "set_nest_at_indic": 1054, "layer_norm": [1056, 1057, 1058, 1059], "static_layer_norm": 1060, "multinomi": 1062, "randint": [1063, 1064, 1065, 1066], "static_randint": 1067, "random_norm": [1068, 1069, 1070, 1071], "static_random_norm": 1072, "random_uniform": [1073, 1074, 1075, 1076], "static_random_uniform": 1077, "seed": 1078, "shuffl": 1079, "argmax": 1081, "argmin": 1082, "nonzero": 1083, "where": 1084, "depend": [1085, 1086, 1090, 1091, 1095, 1101, 1105], "output": [1085, 1086, 1090, 1091, 1095, 1101, 1105], "unique_al": [1086, 1088, 1089, 1090], "static_unique_al": 1087, "unique_count": [1091, 1093, 1094, 1095], "static_unique_count": 1092, "unique_invers": [1096, 1098, 1099, 1100], "static_unique_invers": 1097, "unique_valu": [1101, 1103, 1104, 1105], "static_unique_valu": 1102, "argsort": [1107, 1108, 1109, 1110], "static_argsort": 1111, "static_sort": 1116, "einsum": [1118, 1119, 1120, 1121], "max": [1122, 1123, 1124, 1125], "mean": [1126, 1127, 1128, 1129], "min": [1130, 1131, 1132, 1133], "prod": [1134, 1135, 1136, 1137], "std": [1138, 1139, 1140, 1141], "sum": [1142, 1143, 1144, 1145], "var": [1146, 1147, 1148, 1149], "all": [1151, 1152, 1153, 1154], "static_al": 1155, "ani": [1156, 1157, 1158, 1159], "static_ani": 1160, "content": 1161, "overview": 1161, "quick": 1161, "start": 1161, "roadmap": [1161, 1167], "citat": 1161, "inspect": 1164, "add_array_spec": 1165, "fn_array_spec": 1166, "geglu": 1170, "to_ivy_modul": 1173, "firstlayersiren": 1175, "glorotuniform": 1176, "Ones": 1177, "siren": 1178, "conv1dtranspos": 1182, "conv2dtranspos": 1184, "conv3dtranspos": 1186, "depthwiseconv2d": 1187, "lstm": 1189, "multiheadattent": 1191, "layernorm": 1195, "adam": 1197, "lamb": 1198, "lar": 1199, "sgd": 1201, "sequenti": [1202, 1203], "verbos": 1205, "cprint": 1206}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})